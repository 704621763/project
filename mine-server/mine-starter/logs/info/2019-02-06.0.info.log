2019-02-06 14:37:04.719 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-06 14:37:04.805 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 13928 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-06 14:37:04.805 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-06 14:37:04.806 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-06 14:37:06.217 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-06 14:37:07.148 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-06 14:37:07.189 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-06 14:37:07.440 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-02-06 14:37:07.441 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-02-06 14:37:08.151 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-02-06 14:37:08.153 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-02-06 14:37:08.377 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-02-06 14:37:09.073 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-02-06 14:37:09.120 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-02-06 14:37:09.121 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-02-06 14:37:09.121 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-02-06 14:37:09.121 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-02-06 14:37:09.121 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-02-06 14:37:09.938 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-02-06 14:37:09.950 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-02-06 14:37:09.968 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-06 14:37:10.013 INFO  c.c.ServerApp - Started ServerApp in 5.902 seconds (JVM running for 6.979)
2019-02-06 14:37:27.922 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-06 14:37:28.144 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:37:28.301 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:37:28.304 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:37:28.352 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:37:28.377 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:37:28.379 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:37:28.383 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:37:28.386 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 14:37:41.009 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:37:41.014 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:37:41.015 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:37:41.016 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:37:41.020 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:37:41.021 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:37:41.024 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:37:41.026 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 14:37:44.779 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["33"]}
2019-02-06 14:37:45.957 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:37:45.966 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:37:45.968 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:37:45.970 DEBUG c.c.m.A.findDetailById - ==> Parameters: 33(String)
2019-02-06 14:37:45.976 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:37:45.979 DEBUG c.c.m.A.findDetailById - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站, <h2 id="h2-1-importnew-java-"><a name="1.   ImportNew-专注于 Java 技术分享的网站" class="reference-link"></a><span class="header-link octicon octicon-link"></span>1. <a href="http://www.importnew.com/" title="ImportNew-专注于 Java 技术分享的网站">ImportNew-专注于 Java 技术分享的网站</a></h2><h2 id="h2-2-github-"><a name="2.        GitHub-开源及私有软件项目的大型托管平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>2. <a href="https://github.com" title="     GitHub-开源及私有软件项目的大型托管平台">     GitHub-开源及私有软件项目的大型托管平台</a></h2><h2 id="h2-3-csdn-it-"><a name="3.   CSDN-全球最大中文IT社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>3. <a href="http://www.csdn.net/" title="CSDN-全球最大中文IT社区">CSDN-全球最大中文IT社区</a></h2><h2 id="h2-4-iteye-java-spring-ajax-agile-"><a name="4.   ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件" class="reference-link"></a><span class="header-link octicon octicon-link"></span>4. <a href="http://www.iteye.com/" title="ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件">ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件</a></h2><h2 id="h2-5-spring-cloud-"><a name="5.   Spring Cloud中国社区论坛" class="reference-link"></a><span class="header-link octicon octicon-link"></span>5. <a href="http://bbs.springcloud.cn/" title="Spring Cloud中国社区论坛">Spring Cloud中国社区论坛</a></h2><h2 id="h2-6-"><a name="6.   伯乐在线-专业的互联网职业社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>6. <a href="http://www.jobbole.com/" title="伯乐在线-专业的互联网职业社区">伯乐在线-专业的互联网职业社区</a></h2><h2 id="h2-7-51cto-it-it-"><a name="7.   51CTO-专注IT技术领域，打造中国领先的IT技术网络平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>7. <a href="http://www.51cto.com/" title="51CTO-专注IT技术领域，打造中国领先的IT技术网络平台">51CTO-专注IT技术领域，打造中国领先的IT技术网络平台</a></h2><h2 id="h2-8-"><a name="8.   开源中国" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8. <a href="https://www.oschina.net/" title="开源中国">开源中国</a></h2><h2 id="h2-9-json-"><a name="9.   JSON在线解析" class="reference-link"></a><span class="header-link octicon octicon-link"></span>9. <a href="http://www.sojson.com/" title="JSON在线解析">JSON在线解析</a></h2><h2 id="h2-10-hutool-java-util-"><a name="10.  Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。" class="reference-link"></a><span class="header-link octicon octicon-link"></span>10.<a href="http://hutool.cn/" title="Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。">Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。</a></h2><h2 id="h2-11-"><a name="11.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.<a href="https://www.ecosia.org/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-12-"><a name="12.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>12.<a href="https://so.mezw.com/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-13-"><a name="13.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>13.<a href="http://bird.so" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-14-"><a name="14.   博客园" class="reference-link"></a><span class="header-link octicon octicon-link"></span>14. <a href="https://www.cnblogs.com/" title="博客园">博客园</a></h2>, ## 1. [ImportNew-专注于 Java 技术分享的网站](http://www.importnew.com/ "ImportNew-专注于 Java 技术分享的网站")

## 2. [ 	GitHub-开源及私有软件项目的大型托管平台](https://github.com " 	GitHub-开源及私有软件项目的大型托管平台")

## 3. [CSDN-全球最大中文IT社区](http://www.csdn.net/ "CSDN-全球最大中文IT社区")

## 4. [ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件](http://www.iteye.com/ "ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件")

## 5. [Spring Cloud中国社区论坛](http://bbs.springcloud.cn/ "Spring Cloud中国社区论坛")

## 6. [伯乐在线-专业的互联网职业社区](http://www.jobbole.com/ "伯乐在线-专业的互联网职业社区")

## 7. [51CTO-专注IT技术领域，打造中国领先的IT技术网络平台](http://www.51cto.com/ "51CTO-专注IT技术领域，打造中国领先的IT技术网络平台")

## 8. [开源中国](https://www.oschina.net/ "开源中国")

## 9. [JSON在线解析](http://www.sojson.com/ "JSON在线解析")

## 10.[Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。](http://hutool.cn/ "Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。")

## 11.[小众搜索引擎](https://www.ecosia.org/ "小众搜索引擎")
## 12.[小众搜索引擎](https://so.mezw.com/ "小众搜索引擎")
## 13.[小众搜索引擎](http://bird.so "小众搜索引擎")
## 14. [博客园](https://www.cnblogs.com/ "博客园")

2019-02-06 14:37:47.103 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:39:04.366 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:39:04.369 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:39:04.370 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:39:04.371 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:39:04.374 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:39:04.375 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:39:04.377 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:39:04.378 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 14:39:11.419 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["79"]}
2019-02-06 14:39:12.527 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:39:12.535 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:39:12.537 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:39:12.539 DEBUG c.c.m.A.findDetailById - ==> Parameters: 79(String)
2019-02-06 14:39:12.550 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:39:12.553 DEBUG c.c.m.A.findDetailById - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记, <h1 id="h1-u524Du8A00"><a name="前言" class="reference-link"></a><span class="header-link octicon octicon-link"></span>前言</h1><p>&ensp;&ensp;&ensp;&ensp;工作中经常会遇到对excel这类文件进行导入导出的业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此我特地花了两天时间写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。当前版本V1.0，源码地址:<a href="https://github.com/CodingGyd/project/tree/master/excel-utils">https://github.com/CodingGyd/project/tree/master/excel-utils</a></p>
<h3 id="h3--"><a name="一、组件简介" class="reference-link"></a><span class="header-link octicon octicon-link"></span>一、组件简介</h3><p>&ensp;&ensp;&ensp;&ensp; V1.0版实现了结合JAVA注解和反射思想进行excel的解析规则配置,两行代码即可完成对2007版和2003版excel文件的导入导出功能。<br>&ensp;&ensp;&ensp;&ensp;本人致力于将该组件打造成一款通用的数据导入导出工具组件,追求在不改代码的前提下，进行极少的规则配置即可完成对excel、txt、dbf、pdf等各种格式数据文件的高效读取或生成。</p>
<h3 id="h3--"><a name="二、开发环境、技术框架、当前组件版本" class="reference-link"></a><span class="header-link octicon octicon-link"></span>二、开发环境、技术框架、当前组件版本</h3><pre><code>JDK版本：1.7及以上
编译器：Eclipse
SpringBoot版本：1.3.3.RELEASE
POI版本：3.15
组件版本：V1.0
</code></pre><h3 id="h3--uml-"><a name="三、组件框架主要类的uml图" class="reference-link"></a><span class="header-link octicon octicon-link"></span>三、组件框架主要类的uml图</h3><p><img src="http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojl-eAOxWfAAM2Uo9ioYw312.png" alt="UML类图" title="UML类图"></p>
<h3 id="h3--"><a name="四、使用示例" class="reference-link"></a><span class="header-link octicon octicon-link"></span>四、使用示例</h3><p>1.定义excel记录行实体结构,并用注解进行配置说明。配置描述请参考源码地址的注释说明<a href="https://github.com/CodingGyd/project/tree/master/excel-utils">https://github.com/CodingGyd/project/tree/master/excel-utils</a></p>
<pre><code class="lang-java">package com.codinggyd.excel.example;

import java.io.Serializable;
import java.util.Date;

import com.codinggyd.excel.annotation.ExcelFieldConfig;
import com.codinggyd.excel.annotation.ExcelSheetConfig;
import com.codinggyd.excel.annotation.ExcelFieldRule;
import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.constant.JavaFieldType;

@ExcelSheetConfig(titleRowStartIndex=1,contentRowStartIndex=2,excelSuffix=ExcelConst.EXCEL_FORMAT_XLSX)
public class TestUser implements Serializable{

    /**
     * 
     */
    private static final long serialVersionUID = -6106965608103174812L;

    @ExcelFieldConfig(isPrimaryKey=true,name=&quot;姓名&quot;,index=0,javaType=JavaFieldType.TYPE_STRING, replaces = { @ExcelFieldRule(content = &quot;上证&quot;, replace = &quot;83&quot;),@ExcelFieldRule(content = &quot;深圳&quot;, replace = &quot;90&quot;) })
    private String name;

    @ExcelFieldConfig(name=&quot;年龄&quot;,index=1,javaType=JavaFieldType.TYPE_INTEGER)
    private Integer age;

    @ExcelFieldConfig(name=&quot;工资&quot;,index=2,javaType=JavaFieldType.TYPE_DOUBLE)
    private Double money;

    @ExcelFieldConfig(name=&quot;创建时间&quot;,index=3,javaType=JavaFieldType.TYPE_DATE)
    private Date createTime;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public Double getMoney() {
        return money;
    }

    public void setMoney(Double money) {
        this.money = money;
    }

    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Override
    public String toString() {
        return &quot;TestUser [name=&quot; + name + &quot;, age=&quot; + age + &quot;, money=&quot; + money + &quot;, createTime=&quot; + createTime + &quot;]&quot;;
    }

}
</code></pre>
<p>2.读取2007版xlsxExcel示例，编写并运行测试单元。</p>
<pre><code class="lang-java">package com.codinggyd.excel.example;

import java.io.File;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.core.ExcelParserUtils;
import com.codinggyd.excel.core.parsexcel.bean.ResultList;
import com.codinggyd.excel.core.parsexcel.inter.IExcelRowHandler;

import junit.framework.TestCase;

/**
 * 
 * &lt;pre&gt;
 * 类名:  TestExcelParser.java
 * 包名:  com.codinggyd.excel.example
 * 描述:  Excel解析方法测试
 * 
 * 作者:  guoyd
 * 日期:  2017年12月3日
 *
 * Copyright @ 2017 Corpration Name
 * &lt;/pre&gt;
 */
public class TestExcelParser extends TestCase  {

//    测试ExcelParserUtils#parse(InputStream is,Class&lt;T&gt; clazz,String format)
    public void testParse1() throws Exception {
        long start = System.currentTimeMillis();

        String file = &quot;G:/test.xlsx&quot;;
        String format = ExcelConst.EXCEL_FORMAT_XLSX;
        FileInputStream fis = new FileInputStream(new File(file));
        ResultList&lt;User&gt; result = ExcelParserUtils.parse(fis, User.class, format);
        System.out.println(&quot;错误报告:&quot;+result.getMsg());
        for (User user:result) {
            System.out.println(user.toString());
        }
        System.out.println(&quot;解析数据量&quot;+result.size()+&quot;条,耗时&quot;+(System.currentTimeMillis()-start)+&quot;ms&quot;);

    }
}
</code></pre>
<p>运行结果截图：<br><img src="http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojmfOAZtzYAAB12NV_1ik018.png" alt="读取2007版excel运行结果" title="读取2007版excel运行结果"></p>
<p>3.导出2007版xlsxExcel示例，编写并运行测试单元。</p>
<pre><code class="lang-java">package com.codinggyd.excel.example;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.core.ExcelExporterUtils;

import junit.framework.TestCase;
/**
 * 
 * &lt;pre&gt;
 * 类名:  TestExcelExporter.java
 * 包名:  com.codinggyd.excel.example
 * 描述:  Excel生成方法测试
 * 
 * 作者:  guoyd
 * 日期:  2017年12月3日
 *
 * Copyright @ 2017 Corpration Name
 * &lt;/pre&gt;
 */
public class TestExcelExporter extends TestCase  {

//    测试ExcelExporterUtils#export(String format,Class&lt;?&gt; clazz,List&lt;T&gt; data,OutputStream outputStream) 
    public void testExporter2() throws Exception {
        long start = System.currentTimeMillis();

        String file = &quot;G:/new2.xlsx&quot;;
        FileOutputStream fos = new FileOutputStream(new File(file));
        String format = ExcelConst.EXCEL_FORMAT_XLSX;
        List&lt;User&gt; data = new ArrayList&lt;User&gt;();
        for (int i=0;i&lt;100000;i++) {
            User t = new User();
            t.setAge(i);
            t.setName(&quot;测试&quot;+i);
            t.setMoney(1d*i);
            t.setCreateTime(new Date());
            data.add(t);
        }
        //一行代码调用生成
        ExcelExporterUtils.export(format, User.class, data,fos); 

        System.out.println(&quot;导出数据量&quot;+data.size()+&quot;条,耗时&quot;+(System.currentTimeMillis()-start)+&quot;ms&quot;);

    }

}
</code></pre>
<p>运行结果截图<br><img src="http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojnNSAL3MsAAAnfWVXjQs095.png" alt="导出100万数据运行截图" title="导出100万数据运行截图"><br><img src="http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojnaGAJUp0AABS8kZWMq8639.png" alt="导出100万数据excel截图" title="导出100万数据excel截图"><br>是不是很方便！ 简写到一行代码就搞定，读取时支持返回错误报告, 接口中还定义了其它方法,支持回调自定义解析格式。自行看源码注释吧。</p>
<h3 id="h3--"><a name="五、性能测试" class="reference-link"></a><span class="header-link octicon octicon-link"></span>五、性能测试</h3><p>&ensp;&ensp;&ensp;&ensp;测试环境： 4GB内存、i5-3210M双核处理器、100万行的2007版excel。<br>&ensp;&ensp;&ensp;&ensp;第1次,解析数据量1003472条,耗时30285ms<br>&ensp;&ensp;&ensp;&ensp;第2次,解析数据量1003472条,耗时30750ms<br>&ensp;&ensp;&ensp;&ensp;第3次,解析数据量1003472条,耗时25192ms<br>&ensp;&ensp;&ensp;&ensp;第4次,解析数据量1003472条,耗时21411ms<br>&ensp;&ensp;&ensp;&ensp;第5次,解析数据量1003472条,耗时25531ms<br>&ensp;&ensp;&ensp;&ensp;第6次,解析数据量1003472条,耗时20963ms<br>&ensp;&ensp;&ensp;&ensp;第7次,解析数据量1003472条,耗时20388ms<br>&ensp;&ensp;&ensp;&ensp;第8次,解析数据量1003472条,耗时20026ms<br>&ensp;&ensp;&ensp;&ensp;第9次,解析数据量1003472条,耗时19644ms<br>&ensp;&ensp;&ensp;&ensp;第10次,解析数据量1003472条,耗时21206ms</p>
, # 前言
&ensp;&ensp;&ensp;&ensp;工作中经常会遇到对excel这类文件进行导入导出的业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此我特地花了两天时间写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。当前版本V1.0，源码地址:https://github.com/CodingGyd/project/tree/master/excel-utils

### 一、组件简介
&ensp;&ensp;&ensp;&ensp; V1.0版实现了结合JAVA注解和反射思想进行excel的解析规则配置,两行代码即可完成对2007版和2003版excel文件的导入导出功能。
&ensp;&ensp;&ensp;&ensp;本人致力于将该组件打造成一款通用的数据导入导出工具组件,追求在不改代码的前提下，进行极少的规则配置即可完成对excel、txt、dbf、pdf等各种格式数据文件的高效读取或生成。

### 二、开发环境、技术框架、当前组件版本
	JDK版本：1.7及以上
	编译器：Eclipse
	SpringBoot版本：1.3.3.RELEASE
	POI版本：3.15
	组件版本：V1.0

### 三、组件框架主要类的uml图
![UML类图](http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojl-eAOxWfAAM2Uo9ioYw312.png "UML类图")

### 四、使用示例

1.定义excel记录行实体结构,并用注解进行配置说明。配置描述请参考源码地址的注释说明https://github.com/CodingGyd/project/tree/master/excel-utils

```java
package com.codinggyd.excel.example;

import java.io.Serializable;
import java.util.Date;
 
import com.codinggyd.excel.annotation.ExcelFieldConfig;
import com.codinggyd.excel.annotation.ExcelSheetConfig;
import com.codinggyd.excel.annotation.ExcelFieldRule;
import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.constant.JavaFieldType;

@ExcelSheetConfig(titleRowStartIndex=1,contentRowStartIndex=2,excelSuffix=ExcelConst.EXCEL_FORMAT_XLSX)
public class TestUser implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = -6106965608103174812L;

	@ExcelFieldConfig(isPrimaryKey=true,name="姓名",index=0,javaType=JavaFieldType.TYPE_STRING, replaces = { @ExcelFieldRule(content = "上证", replace = "83"),@ExcelFieldRule(content = "深圳", replace = "90") })
	private String name;
	
	@ExcelFieldConfig(name="年龄",index=1,javaType=JavaFieldType.TYPE_INTEGER)
	private Integer age;
	
	@ExcelFieldConfig(name="工资",index=2,javaType=JavaFieldType.TYPE_DOUBLE)
	private Double money;
	
	@ExcelFieldConfig(name="创建时间",index=3,javaType=JavaFieldType.TYPE_DATE)
	private Date createTime;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Integer getAge() {
		return age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	public Double getMoney() {
		return money;
	}

	public void setMoney(Double money) {
		this.money = money;
	}

	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Override
	public String toString() {
		return "TestUser [name=" + name + ", age=" + age + ", money=" + money + ", createTime=" + createTime + "]";
	}
	
}

```
2.读取2007版xlsxExcel示例，编写并运行测试单元。
```java
package com.codinggyd.excel.example;

import java.io.File;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.core.ExcelParserUtils;
import com.codinggyd.excel.core.parsexcel.bean.ResultList;
import com.codinggyd.excel.core.parsexcel.inter.IExcelRowHandler;

import junit.framework.TestCase;
 
/**
 * 
 * <pre>
 * 类名:  TestExcelParser.java
 * 包名:  com.codinggyd.excel.example
 * 描述:  Excel解析方法测试
 * 
 * 作者:  guoyd
 * 日期:  2017年12月3日
 *
 * Copyright @ 2017 Corpration Name
 * </pre>
 */
public class TestExcelParser extends TestCase  {
	
//	测试ExcelParserUtils#parse(InputStream is,Class<T> clazz,String format)
	public void testParse1() throws Exception {
		long start = System.currentTimeMillis();

		String file = "G:/test.xlsx";
		String format = ExcelConst.EXCEL_FORMAT_XLSX;
		FileInputStream fis = new FileInputStream(new File(file));
		ResultList<User> result = ExcelParserUtils.parse(fis, User.class, format);
		System.out.println("错误报告:"+result.getMsg());
		for (User user:result) {
			System.out.println(user.toString());
		}
		System.out.println("解析数据量"+result.size()+"条,耗时"+(System.currentTimeMillis()-start)+"ms");

	}
}
```
运行结果截图：
![读取2007版excel运行结果](http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojmfOAZtzYAAB12NV_1ik018.png "读取2007版excel运行结果")

3.导出2007版xlsxExcel示例，编写并运行测试单元。
```java
package com.codinggyd.excel.example;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.codinggyd.excel.constant.ExcelConst;
import com.codinggyd.excel.core.ExcelExporterUtils;

import junit.framework.TestCase;
/**
 * 
 * <pre>
 * 类名:  TestExcelExporter.java
 * 包名:  com.codinggyd.excel.example
 * 描述:  Excel生成方法测试
 * 
 * 作者:  guoyd
 * 日期:  2017年12月3日
 *
 * Copyright @ 2017 Corpration Name
 * </pre>
 */
public class TestExcelExporter extends TestCase  {
	
//	测试ExcelExporterUtils#export(String format,Class<?> clazz,List<T> data,OutputStream outputStream) 
	public void testExporter2() throws Exception {
		long start = System.currentTimeMillis();

		String file = "G:/new2.xlsx";
		FileOutputStream fos = new FileOutputStream(new File(file));
		String format = ExcelConst.EXCEL_FORMAT_XLSX;
		List<User> data = new ArrayList<User>();
		for (int i=0;i<100000;i++) {
			User t = new User();
			t.setAge(i);
			t.setName("测试"+i);
			t.setMoney(1d*i);
			t.setCreateTime(new Date());
			data.add(t);
		}
		//一行代码调用生成
		ExcelExporterUtils.export(format, User.class, data,fos); 
		 
		System.out.println("导出数据量"+data.size()+"条,耗时"+(System.currentTimeMillis()-start)+"ms");

	}
	 
}

```
运行结果截图
![导出100万数据运行截图](http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojnNSAL3MsAAAnfWVXjQs095.png "导出100万数据运行截图")
![导出100万数据excel截图](http://www.gydblog.com:8888/group1/M00/00/00/wKgACFojnaGAJUp0AABS8kZWMq8639.png "导出100万数据excel截图")
是不是很方便！ 简写到一行代码就搞定，读取时支持返回错误报告, 接口中还定义了其它方法,支持回调自定义解析格式。自行看源码注释吧。
### 五、性能测试
&ensp;&ensp;&ensp;&ensp;测试环境： 4GB内存、i5-3210M双核处理器、100万行的2007版excel。
&ensp;&ensp;&ensp;&ensp;第1次,解析数据量1003472条,耗时30285ms
&ensp;&ensp;&ensp;&ensp;第2次,解析数据量1003472条,耗时30750ms
&ensp;&ensp;&ensp;&ensp;第3次,解析数据量1003472条,耗时25192ms
&ensp;&ensp;&ensp;&ensp;第4次,解析数据量1003472条,耗时21411ms
&ensp;&ensp;&ensp;&ensp;第5次,解析数据量1003472条,耗时25531ms
&ensp;&ensp;&ensp;&ensp;第6次,解析数据量1003472条,耗时20963ms
&ensp;&ensp;&ensp;&ensp;第7次,解析数据量1003472条,耗时20388ms
&ensp;&ensp;&ensp;&ensp;第8次,解析数据量1003472条,耗时20026ms
&ensp;&ensp;&ensp;&ensp;第9次,解析数据量1003472条,耗时19644ms
&ensp;&ensp;&ensp;&ensp;第10次,解析数据量1003472条,耗时21206ms


2019-02-06 14:39:13.681 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:40:04.679 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["78"]}
2019-02-06 14:40:05.815 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:40:05.818 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:40:05.819 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:40:05.819 DEBUG c.c.m.A.findDetailById - ==> Parameters: 78(String)
2019-02-06 14:40:05.821 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:40:05.822 DEBUG c.c.m.A.findDetailById - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记, <h2 id="h2-fastdfs"><a name="FastDFS" class="reference-link"></a><span class="header-link octicon octicon-link"></span>FastDFS</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p>
<h2 id="h2-u7B80u4ECB"><a name="简介" class="reference-link"></a><span class="header-link octicon octicon-link"></span>简介</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS服务端有两个角色：跟踪器（tracker）和存储节点（storage）。跟踪器主要做调度工作，在访问上起负载均衡的作用。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存储节点存储文件，完成文件管理的所有功能：就是这样的存储、同步和提供存取接口，FastDFS同时对文件的metadata进行管理。所谓文件的meta data就是文件的相关属性，以键值对（key valuepair）方式表示，如：width=1024，其中的key为width，value为1024。文件metadata是文件属性列表，可以包含多个键值对。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;跟踪器和存储节点都可以由一台或多台服务器构成。跟踪器和存储节点中的服务器均可以随时增加或下线而不会影响线上服务。其中跟踪器中的所有服务器都是对等的，可以根据服务器的压力情况随时增加或减少。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在卷中增加服务器时，同步已有的文件由系统自动完成，同步完成后，系统自动将新增服务器切换到线上提供服务。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。<br>FastDFS中的文件标识分为两个部分：卷名和文件名，二者缺一不可。<br><img src="http://www.gydblog.com:8888/group1/M00/00/00/wKgACFoAWdeAG_M4AASfYzbioyg760.png" alt=""></p>
<h2 id="h2-u4E0Au4F20u6587u4EF6u4EA4u4E92u8FC7u7A0B"><a name="上传文件交互过程" class="reference-link"></a><span class="header-link octicon octicon-link"></span>上传文件交互过程</h2><ol>
<li>client询问tracker上传到的storage，不需要附加参数；</li><li>tracker返回一台可用的storage；</li><li>client直接和storage通讯完成文件上传。<br>FastDFS file download</li></ol>
<h2 id="h2-u4E0Bu8F7Du4EA4u4E92u8FC7u7A0B"><a name="下载交互过程" class="reference-link"></a><span class="header-link octicon octicon-link"></span>下载交互过程</h2><ol>
<li>client询问tracker下载文件的storage，参数为文件标识（卷名和文件名）；</li><li>tracker返回一台可用的storage；</li><li>client直接和storage通讯完成文件下载。<br>需要说明的是，client为使用FastDFS服务的调用方，client也应该是一台服务器，它对tracker和storage的调用均为服务器间的调用。</li></ol>
, ## FastDFS
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。

## 简介
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FastDFS服务端有两个角色：跟踪器（tracker）和存储节点（storage）。跟踪器主要做调度工作，在访问上起负载均衡的作用。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存储节点存储文件，完成文件管理的所有功能：就是这样的存储、同步和提供存取接口，FastDFS同时对文件的metadata进行管理。所谓文件的meta data就是文件的相关属性，以键值对（key valuepair）方式表示，如：width=1024，其中的key为width，value为1024。文件metadata是文件属性列表，可以包含多个键值对。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;跟踪器和存储节点都可以由一台或多台服务器构成。跟踪器和存储节点中的服务器均可以随时增加或下线而不会影响线上服务。其中跟踪器中的所有服务器都是对等的，可以根据服务器的压力情况随时增加或减少。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在卷中增加服务器时，同步已有的文件由系统自动完成，同步完成后，系统自动将新增服务器切换到线上提供服务。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。
FastDFS中的文件标识分为两个部分：卷名和文件名，二者缺一不可。
![](http://www.gydblog.com:8888/group1/M00/00/00/wKgACFoAWdeAG_M4AASfYzbioyg760.png)

## 上传文件交互过程
1. client询问tracker上传到的storage，不需要附加参数；
2. tracker返回一台可用的storage；
3. client直接和storage通讯完成文件上传。
FastDFS file download

##下载交互过程
1. client询问tracker下载文件的storage，参数为文件标识（卷名和文件名）；
2. tracker返回一台可用的storage；
3. client直接和storage通讯完成文件下载。
需要说明的是，client为使用FastDFS服务的调用方，client也应该是一台服务器，它对tracker和storage的调用均为服务器间的调用。

2019-02-06 14:40:06.981 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:40:48.753 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:40:48.755 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:40:48.756 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:40:48.757 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:40:48.760 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:40:48.761 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:40:48.763 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:40:48.765 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 14:42:28.039 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["33"]}
2019-02-06 14:42:29.162 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:42:29.168 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:42:29.170 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:42:29.173 DEBUG c.c.m.A.findDetailById - ==> Parameters: 33(String)
2019-02-06 14:42:29.180 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:42:29.183 DEBUG c.c.m.A.findDetailById - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站, <h2 id="h2-1-importnew-java-"><a name="1.   ImportNew-专注于 Java 技术分享的网站" class="reference-link"></a><span class="header-link octicon octicon-link"></span>1. <a href="http://www.importnew.com/" title="ImportNew-专注于 Java 技术分享的网站">ImportNew-专注于 Java 技术分享的网站</a></h2><h2 id="h2-2-github-"><a name="2.        GitHub-开源及私有软件项目的大型托管平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>2. <a href="https://github.com" title="     GitHub-开源及私有软件项目的大型托管平台">     GitHub-开源及私有软件项目的大型托管平台</a></h2><h2 id="h2-3-csdn-it-"><a name="3.   CSDN-全球最大中文IT社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>3. <a href="http://www.csdn.net/" title="CSDN-全球最大中文IT社区">CSDN-全球最大中文IT社区</a></h2><h2 id="h2-4-iteye-java-spring-ajax-agile-"><a name="4.   ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件" class="reference-link"></a><span class="header-link octicon octicon-link"></span>4. <a href="http://www.iteye.com/" title="ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件">ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件</a></h2><h2 id="h2-5-spring-cloud-"><a name="5.   Spring Cloud中国社区论坛" class="reference-link"></a><span class="header-link octicon octicon-link"></span>5. <a href="http://bbs.springcloud.cn/" title="Spring Cloud中国社区论坛">Spring Cloud中国社区论坛</a></h2><h2 id="h2-6-"><a name="6.   伯乐在线-专业的互联网职业社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>6. <a href="http://www.jobbole.com/" title="伯乐在线-专业的互联网职业社区">伯乐在线-专业的互联网职业社区</a></h2><h2 id="h2-7-51cto-it-it-"><a name="7.   51CTO-专注IT技术领域，打造中国领先的IT技术网络平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>7. <a href="http://www.51cto.com/" title="51CTO-专注IT技术领域，打造中国领先的IT技术网络平台">51CTO-专注IT技术领域，打造中国领先的IT技术网络平台</a></h2><h2 id="h2-8-"><a name="8.   开源中国" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8. <a href="https://www.oschina.net/" title="开源中国">开源中国</a></h2><h2 id="h2-9-json-"><a name="9.   JSON在线解析" class="reference-link"></a><span class="header-link octicon octicon-link"></span>9. <a href="http://www.sojson.com/" title="JSON在线解析">JSON在线解析</a></h2><h2 id="h2-10-hutool-java-util-"><a name="10.  Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。" class="reference-link"></a><span class="header-link octicon octicon-link"></span>10.<a href="http://hutool.cn/" title="Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。">Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。</a></h2><h2 id="h2-11-"><a name="11.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.<a href="https://www.ecosia.org/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-12-"><a name="12.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>12.<a href="https://so.mezw.com/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-13-"><a name="13.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>13.<a href="http://bird.so" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-14-"><a name="14.   博客园" class="reference-link"></a><span class="header-link octicon octicon-link"></span>14. <a href="https://www.cnblogs.com/" title="博客园">博客园</a></h2>, ## 1. [ImportNew-专注于 Java 技术分享的网站](http://www.importnew.com/ "ImportNew-专注于 Java 技术分享的网站")

## 2. [ 	GitHub-开源及私有软件项目的大型托管平台](https://github.com " 	GitHub-开源及私有软件项目的大型托管平台")

## 3. [CSDN-全球最大中文IT社区](http://www.csdn.net/ "CSDN-全球最大中文IT社区")

## 4. [ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件](http://www.iteye.com/ "ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件")

## 5. [Spring Cloud中国社区论坛](http://bbs.springcloud.cn/ "Spring Cloud中国社区论坛")

## 6. [伯乐在线-专业的互联网职业社区](http://www.jobbole.com/ "伯乐在线-专业的互联网职业社区")

## 7. [51CTO-专注IT技术领域，打造中国领先的IT技术网络平台](http://www.51cto.com/ "51CTO-专注IT技术领域，打造中国领先的IT技术网络平台")

## 8. [开源中国](https://www.oschina.net/ "开源中国")

## 9. [JSON在线解析](http://www.sojson.com/ "JSON在线解析")

## 10.[Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。](http://hutool.cn/ "Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。")

## 11.[小众搜索引擎](https://www.ecosia.org/ "小众搜索引擎")
## 12.[小众搜索引擎](https://so.mezw.com/ "小众搜索引擎")
## 13.[小众搜索引擎](http://bird.so "小众搜索引擎")
## 14. [博客园](https://www.cnblogs.com/ "博客园")

2019-02-06 14:42:30.337 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:49:20.868 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:49:20.871 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:49:20.872 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:49:20.872 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:49:20.874 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:49:20.876 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:49:06, 0, null, 2, 生活文摘
2019-02-06 14:49:20.878 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:49:20.880 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:49:25.240 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 14:49:26.346 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:49:26.350 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:49:26.350 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:49:26.351 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 14:49:26.354 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:49:26.355 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:49:06, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<p>import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} </p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} 

2019-02-06 14:49:27.466 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:51:57.451 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:51:57.455 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:51:57.456 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:51:57.457 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:51:57.460 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:51:57.462 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 14:51:57.465 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:51:57.468 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:51:59.132 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 14:51:59.136 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:51:59.137 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 14:51:59.138 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 14:51:59.141 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 14:51:59.142 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 14:51:59.143 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 14:51:59.144 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 14:52:01.509 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 14:52:02.710 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:52:02.713 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:52:02.714 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:52:02.715 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 14:52:02.718 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:52:02.720 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<h5 id="h5--"><a name="**" class="reference-link"></a><span class="header-link octicon octicon-link"></span>**</h5><p>**import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} <em>**</em></p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;
##### **
**import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} ****

2019-02-06 14:52:03.886 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:53:13.377 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 14:53:22.420 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 14:53:22.422 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 14:53:22.423 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 14:53:22.423 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 14:53:22.425 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 14:53:22.426 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<h5 id="h5--"><a name="**" class="reference-link"></a><span class="header-link octicon octicon-link"></span>**</h5><p>**import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} <em>**</em></p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;
##### **
**import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} ****

2019-02-06 14:53:23.574 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 79 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 86 common frames omitted
2019-02-06 18:17:22.136 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:17:22.160 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:17:22.160 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:17:22.162 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:17:22.166 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:17:22.169 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 18:17:22.172 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:17:22.173 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:17:24.277 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:17:24.329 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:17:24.330 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:17:24.331 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:17:24.346 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:17:27.779 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:17:27.781 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:17:27.781 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:17:27.782 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:17:27.783 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:18:41.591 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:18:41.593 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:18:41.593 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:18:41.594 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:18:41.596 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:18:42.324 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:18:42.326 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:18:42.326 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:18:42.326 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:18:42.328 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:28:43.656 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:28:43.659 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:28:43.659 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:28:43.660 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:28:43.661 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:28:43.662 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 18:28:43.663 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:28:43.663 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:28:50.378 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:28:50.380 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:28:50.381 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:28:50.381 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:28:50.383 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:30:25.308 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:30:25.310 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:30:25.310 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:30:25.311 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:30:25.312 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:30:26.247 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:30:26.250 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:30:26.251 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:30:26.252 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:30:26.254 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:30:45.983 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:30:45.986 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:30:45.986 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:30:45.987 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:30:45.991 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:30:45.992 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 18:30:45.994 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:30:45.995 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:30:48.026 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:30:48.028 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:30:48.029 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:30:48.029 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:30:48.030 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:31:43.267 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 18:31:43.269 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:31:43.269 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:31:43.270 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 18:31:43.272 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 18:31:43.817 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:31:43.819 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:31:43.820 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:31:43.821 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:31:43.823 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:31:43.823 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 18:31:43.824 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:31:43.827 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:31:45.955 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:31:45.959 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:31:45.959 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:31:45.960 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:31:45.961 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:31:45.961 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:34:29.535 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:34:29.537 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:34:29.537 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:34:29.538 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:34:29.539 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:34:29.540 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:38:59.655 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:38:59.659 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:38:59.660 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:38:59.660 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:38:59.663 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:38:59.664 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:40:37.122 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:40:37.126 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:40:37.126 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:40:37.126 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:40:37.127 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:40:37.128 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:41:58.296 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:41:58.299 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:41:58.299 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:41:58.300 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:41:58.301 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:41:58.301 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:42:44.523 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:42:44.525 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:42:44.525 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:42:44.526 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:42:44.528 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:42:44.529 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:45:41.545 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:45:41.548 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:45:41.550 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:45:41.551 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:45:41.553 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:45:41.554 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，哎哎哎，高兴不起来, 2019-02-06 14:51:46, 0, null, 2, 生活文摘
2019-02-06 18:45:41.555 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:45:41.556 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:46:34.687 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:46:34.689 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:46:34.690 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:46:34.691 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:46:34.693 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:46:34.694 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:46:34.696 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:46:34.697 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:49:10.014 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-06 18:49:10.016 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:49:10.016 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:49:10.016 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-06 18:49:10.017 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:49:10.018 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:52:23.315 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:52:23.318 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:52:23.318 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:52:23.319 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:52:23.321 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:52:23.322 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:52:23.324 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:52:23.326 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:52:24.074 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:52:24.078 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:52:24.079 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:52:24.079 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:52:24.081 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:52:24.082 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:52:24.083 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:52:24.085 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:52:24.280 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:52:24.283 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:52:24.284 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:52:24.285 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:52:24.287 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:52:24.289 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:52:24.290 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:52:24.292 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:52:25.676 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:52:25.679 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:52:25.680 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:52:25.681 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:52:25.682 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:52:25.683 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:52:25.684 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:52:25.685 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:52:25.685 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:52:25.686 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:53:05.529 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:53:05.532 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:53:05.532 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:53:05.533 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:53:05.535 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:53:05.536 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:53:05.537 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:53:05.538 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:53:05.539 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:53:05.539 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:53:39.153 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:53:39.156 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:53:39.157 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:53:39.158 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:53:39.162 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:53:39.163 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:53:39.164 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:53:39.166 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:53:43.373 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:53:43.376 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:53:43.376 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:53:43.377 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:53:43.380 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:53:43.381 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:53:43.382 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:53:43.382 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:53:43.383 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:53:43.384 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:53:43.384 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:53:52.424 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:53:52.426 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:53:52.426 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:53:52.426 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:53:52.428 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:53:52.429 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:53:52.429 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:53:52.430 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:53:52.430 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:53:52.431 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:53:52.431 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:53:54.016 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:53:54.018 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:53:54.018 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:53:54.018 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:53:54.019 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:53:54.020 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:53:54.020 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:53:54.021 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:53:54.021 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:53:54.021 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:53:54.022 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:58:36.004 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 18:58:36.006 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:58:36.006 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 18:58:36.007 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 18:58:36.008 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:58:36.008 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:58:36.009 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 18:58:36.010 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 18:58:40.442 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:58:40.444 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:58:40.444 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:58:40.445 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:58:40.446 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:58:40.447 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:58:40.447 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:58:40.448 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:58:40.448 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:58:40.449 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:58:40.449 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:23.231 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:23.233 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:23.234 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:23.234 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:23.235 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:23.236 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:23.237 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:23.238 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:23.238 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:23.239 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:23.239 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:27.811 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:27.813 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:27.813 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:27.814 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:27.816 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:27.816 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:27.816 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:27.817 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:27.817 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:27.818 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:27.818 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:30.023 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:30.025 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:30.025 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:30.026 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:30.027 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:30.027 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:30.028 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:30.028 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:30.028 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:30.029 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:30.029 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:48.320 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:48.322 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:48.323 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:48.323 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:48.324 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:48.325 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:48.326 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:48.327 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:48.327 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:48.327 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:48.328 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:50.712 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:50.714 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:50.715 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:50.716 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:50.718 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:50.718 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:50.719 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:50.720 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:50.722 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:50.723 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:50.724 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:52.795 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:52.797 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:52.798 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:52.798 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:52.801 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:52.802 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:52.802 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:52.803 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:52.805 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:52.806 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:52.806 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 18:59:54.498 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 18:59:54.500 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 18:59:54.500 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 18:59:54.500 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 18:59:54.501 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 18:59:54.501 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 18:59:54.503 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 18:59:54.503 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 18:59:54.503 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 18:59:54.503 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 18:59:54.503 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:02.111 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:02.112 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:02.113 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:02.113 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:02.114 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:02.114 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:02.114 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:02.115 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:02.115 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:02.115 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:02.116 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:04.203 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:04.204 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:04.205 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:04.205 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:04.206 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:04.207 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:04.207 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:04.208 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:04.208 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:04.208 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:04.209 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:05.825 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:05.827 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:05.827 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:05.827 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:05.828 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:05.828 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:05.829 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:05.829 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:05.830 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:05.830 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:05.830 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:07.696 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:07.698 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:07.698 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:07.698 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:07.700 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:07.700 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:07.701 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:07.701 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:07.702 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:07.702 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:07.702 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:09.627 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:09.629 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:09.629 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:09.629 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:09.630 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:09.631 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:09.631 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:09.632 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:09.632 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:09.633 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:09.634 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:11.795 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:11.797 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:11.797 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:11.797 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:11.798 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:11.799 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:11.799 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:11.800 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:11.801 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:11.802 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:11.802 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:13.693 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:13.694 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:13.694 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:13.695 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:13.696 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:13.696 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:13.696 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:13.697 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:13.697 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:13.697 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:13.698 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:15.767 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:15.768 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:15.769 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:15.769 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:15.770 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:15.770 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:15.771 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:15.772 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:15.773 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:15.774 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:15.775 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:19.980 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:19.981 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:19.982 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:19.982 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:19.983 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:19.984 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:19.985 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:19.985 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:19.985 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:19.986 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:19.986 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:22.596 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:22.598 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:22.598 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:22.598 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:22.600 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:22.600 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:22.600 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:22.601 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:22.602 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:22.602 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:22.602 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:26.128 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:26.129 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:26.129 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:26.130 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:26.130 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:26.131 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:26.131 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:26.131 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:26.132 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:26.132 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:26.132 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:32.364 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:32.365 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:32.366 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:32.366 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:32.367 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:32.368 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:32.369 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:32.370 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:32.370 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:32.370 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:32.370 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:34.200 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:34.202 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:34.202 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:34.202 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:34.203 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:34.204 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:34.204 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:34.204 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:34.205 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:34.205 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:34.206 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:36.408 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:36.409 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:36.410 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:36.410 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:36.411 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:36.411 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:36.411 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:36.412 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:36.412 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:36.412 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:36.413 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:38.249 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:00:38.250 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:38.250 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:00:38.251 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:00:38.252 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:38.253 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:38.253 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:00:38.253 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:00:38.253 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:00:38.254 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:00:38.254 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:00:54.599 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:00:54.601 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:00:54.602 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:00:54.603 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:00:54.605 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:00:54.606 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:00:54.608 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:00:54.609 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:03:10.386 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 19:03:11.512 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 78 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 85 common frames omitted
2019-02-06 19:03:11.524 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:03:11.525 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:03:11.529 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 19:03:11.532 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:03:11.533 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<h5 id="h5--"><a name="**" class="reference-link"></a><span class="header-link octicon octicon-link"></span>**</h5><p>**import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} <em>**</em></p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;
##### **
**import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} ****

2019-02-06 19:03:12.672 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 78 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 85 common frames omitted
2019-02-06 19:03:17.886 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:03:17.888 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:03:17.888 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:03:17.888 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:03:17.890 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:03:17.890 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:03:17.891 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:03:17.891 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:03:17.891 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:03:17.892 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:03:17.892 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:03:23.915 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:03:23.916 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:03:23.917 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:03:23.917 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:03:23.918 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:03:23.918 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:03:23.919 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:03:23.919 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:03:23.919 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:03:23.920 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:03:23.920 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:03:43.683 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:03:43.685 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:03:43.685 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:03:43.685 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:03:43.686 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:03:43.687 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:03:43.687 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:03:43.687 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:03:43.688 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:03:43.688 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:03:43.688 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:03:50.688 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:03:50.690 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:03:50.690 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:03:50.690 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:03:50.692 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:03:50.693 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:03:50.693 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:03:50.694 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:34.236 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:34.238 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:34.238 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:34.239 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:34.241 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:34.241 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:34.242 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:34.243 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:34.764 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:34.766 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:34.766 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:34.767 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:34.768 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:34.769 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:34.769 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:34.770 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:36.130 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:36.133 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:36.133 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:36.133 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:36.134 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:36.135 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:36.135 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:36.136 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:36.304 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:36.305 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:36.305 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:36.306 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:36.307 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:36.308 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:36.309 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:36.310 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:36.450 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:36.452 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:36.452 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:36.452 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:36.454 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:36.454 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:36.455 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:36.455 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:36.598 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:36.601 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:36.601 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:36.601 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:36.605 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:36.606 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:36.606 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:36.607 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:38.506 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:38.510 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:38.511 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:38.512 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:38.514 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:38.514 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:38.515 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:38.516 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.075 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.076 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.076 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.077 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.078 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.079 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.080 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.080 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.237 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.239 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.239 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.239 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.240 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.241 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.241 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.242 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.380 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.382 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.382 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.383 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.384 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.384 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.385 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.386 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.517 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.518 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.519 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.519 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.521 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.521 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.522 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.524 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.639 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.641 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.642 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.642 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.643 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.644 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.644 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.645 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.768 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.770 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.770 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.771 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.772 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.772 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.773 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.773 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:52.909 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:52.912 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:52.912 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:52.914 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:52.916 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:52.916 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:52.917 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:52.918 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:53.039 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:53.042 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:53.042 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:53.042 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:53.044 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:53.044 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:53.045 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:53.047 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:55.538 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:55.539 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:55.539 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:55.540 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:55.541 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:55.542 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:55.543 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:55.544 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:55.703 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:55.705 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:55.705 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:55.706 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:55.707 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:55.708 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:55.708 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:55.709 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:55.871 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:55.873 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:55.873 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:55.874 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:55.875 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:55.876 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:55.876 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:55.877 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.232 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.236 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.236 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.237 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.240 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.240 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.241 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:56.242 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.390 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.392 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.393 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.393 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.395 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.396 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.397 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:56.398 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.556 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.557 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.557 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.558 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.560 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.560 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.561 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:56.562 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.704 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.708 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.708 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.709 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.710 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.710 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.712 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:56.714 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.837 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.839 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.839 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.840 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.842 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.842 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.843 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:56.843 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:56.992 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:56.993 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:56.994 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:56.995 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:56.997 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:56.998 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:56.999 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:57.000 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:57.157 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:57.160 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:57.160 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:57.160 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:57.162 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:57.163 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:57.164 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:57.165 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:04:58.327 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:04:58.329 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:04:58.331 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:04:58.332 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:04:58.333 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:04:58.335 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:04:58.335 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:04:58.336 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:07:26.964 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:07:26.965 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:07:26.965 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:07:26.966 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:07:26.967 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:07:26.968 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:07:26.968 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:07:26.969 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:07:27.138 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:07:27.141 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:07:27.142 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:07:27.142 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:07:27.144 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:07:27.145 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:07:27.147 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:07:27.148 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:07:28.253 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:07:28.255 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:07:28.255 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:07:28.255 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:07:28.257 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:07:28.257 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:07:28.258 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:07:28.258 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:16.341 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:16.343 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:16.343 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:16.344 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:16.346 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:16.347 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:16.348 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:16.348 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:16.965 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:16.969 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:16.970 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:16.971 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:16.973 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:16.974 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:16.975 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:16.976 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:17.250 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:17.255 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:17.256 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:17.257 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:17.259 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:17.260 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:17.261 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:17.262 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:35.290 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:35.293 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:35.293 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:35.294 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:35.296 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:35.297 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:35.298 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:35.299 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:35.839 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:35.842 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:35.843 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:35.843 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:35.846 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:35.846 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:35.848 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:35.849 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:36.001 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:36.005 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:36.005 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:36.006 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:36.008 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:36.008 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:36.009 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:36.010 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:36.209 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:36.211 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:36.212 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:36.212 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:36.214 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:36.215 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:36.215 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:36.216 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:36.422 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:36.425 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:36.426 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:36.427 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:36.429 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:36.430 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:36.431 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:36.432 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:36.594 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:36.598 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:36.598 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:36.599 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:36.601 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:36.601 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:36.603 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:36.604 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:48.540 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:48.542 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:48.542 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:48.543 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:48.544 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:48.544 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:48.545 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:48.546 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:49.039 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:49.041 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:49.042 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:49.042 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:49.043 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:49.044 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:49.045 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:49.046 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:49.840 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:49.843 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:49.844 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:49.844 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:49.846 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:49.847 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:49.848 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:49.849 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.056 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.057 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.058 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.059 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.060 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.061 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.061 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.062 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.168 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.171 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.172 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.172 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.174 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.175 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.176 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.177 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.318 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.321 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.321 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.322 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.324 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.324 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.325 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.325 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.465 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.467 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.468 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.468 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.472 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.472 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.473 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.474 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.631 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.633 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.634 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.634 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.637 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.638 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.639 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.639 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.766 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.770 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.771 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.771 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.773 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.774 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.775 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.776 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:50.907 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:50.909 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:50.909 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:50.910 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:50.911 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:50.912 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:50.912 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:50.913 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:51.055 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:51.056 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:51.057 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:51.057 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:51.059 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:51.060 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:51.060 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:51.061 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:51.240 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:51.242 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:51.243 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:51.243 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:51.245 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:51.245 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:51.246 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:51.247 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:51.395 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:51.397 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:51.398 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:51.399 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:51.400 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:51.401 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:51.402 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:51.405 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:51.550 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:51.552 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:51.553 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:51.554 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:51.556 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:51.557 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:51.557 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:51.558 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:53.947 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:53.951 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:53.951 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:53.953 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:53.955 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:53.955 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:53.955 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:53.956 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:54.191 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:54.193 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:54.193 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:54.194 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:54.195 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:54.195 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:54.196 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:54.197 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:08:55.901 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:08:55.902 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:08:55.903 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:08:55.903 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:08:55.904 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:08:55.905 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:08:55.905 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:08:55.905 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:09:18.895 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:09:18.896 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:09:18.897 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:09:18.897 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:09:18.899 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:09:18.900 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:09:18.901 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:09:18.902 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:09:19.582 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:09:19.584 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:09:19.585 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:09:19.585 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:09:19.588 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:09:19.588 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:09:19.589 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:09:19.589 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:09:42.002 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:09:42.005 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:09:42.005 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:09:42.006 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:09:42.007 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:09:42.008 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:09:42.008 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:09:42.009 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:09:45.148 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:09:45.150 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:09:45.150 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:09:45.150 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:09:45.151 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:09:45.151 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:09:45.152 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:09:45.153 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:10:11.579 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:10:11.581 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:10:11.581 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:10:11.581 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:10:11.582 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:10:11.583 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:10:11.584 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:10:11.585 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:10:12.064 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:10:12.066 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:10:12.066 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:10:12.066 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:10:12.067 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:10:12.068 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:10:12.069 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:10:12.070 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:10:12.227 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:10:12.229 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:10:12.229 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:10:12.229 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:10:12.230 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:10:12.231 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:10:12.232 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:10:12.233 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:10:12.375 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:10:12.376 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:10:12.377 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:10:12.377 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:10:12.378 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:10:12.378 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:10:12.378 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:10:12.379 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:11:03.238 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:11:03.240 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:11:03.240 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:11:03.241 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:11:03.242 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:11:03.242 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:11:03.243 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:11:03.243 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:11:07.682 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:11:07.686 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:11:07.687 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:11:07.687 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:11:07.691 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:11:07.692 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:11:07.693 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:11:07.694 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:11:33.103 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:11:33.106 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:11:33.107 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:11:33.108 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:11:33.110 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:11:33.111 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:11:33.112 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:11:33.113 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:11:37.294 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["81"]}
2019-02-06 19:11:38.422 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:11:38.423 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:11:38.424 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:11:38.424 DEBUG c.c.m.A.findDetailById - ==> Parameters: 81(String)
2019-02-06 19:11:38.425 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:11:38.427 DEBUG c.c.m.A.findDetailById - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记, <p>测试</p>
, 测试
2019-02-06 19:11:39.562 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:11:56.725 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 19:11:58.127 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:11:58.129 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:11:58.130 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:11:58.130 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 19:11:58.131 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:11:58.131 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<h5 id="h5--"><a name="**" class="reference-link"></a><span class="header-link octicon octicon-link"></span>**</h5><p>**import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} <em>**</em></p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;
##### **
**import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} ****

2019-02-06 19:11:59.487 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:12:05.891 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["33"]}
2019-02-06 19:12:07.150 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:12:07.152 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:12:07.153 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:12:07.153 DEBUG c.c.m.A.findDetailById - ==> Parameters: 33(String)
2019-02-06 19:12:07.154 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:12:07.155 DEBUG c.c.m.A.findDetailById - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站, <h2 id="h2-1-importnew-java-"><a name="1.   ImportNew-专注于 Java 技术分享的网站" class="reference-link"></a><span class="header-link octicon octicon-link"></span>1. <a href="http://www.importnew.com/" title="ImportNew-专注于 Java 技术分享的网站">ImportNew-专注于 Java 技术分享的网站</a></h2><h2 id="h2-2-github-"><a name="2.        GitHub-开源及私有软件项目的大型托管平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>2. <a href="https://github.com" title="     GitHub-开源及私有软件项目的大型托管平台">     GitHub-开源及私有软件项目的大型托管平台</a></h2><h2 id="h2-3-csdn-it-"><a name="3.   CSDN-全球最大中文IT社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>3. <a href="http://www.csdn.net/" title="CSDN-全球最大中文IT社区">CSDN-全球最大中文IT社区</a></h2><h2 id="h2-4-iteye-java-spring-ajax-agile-"><a name="4.   ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件" class="reference-link"></a><span class="header-link octicon octicon-link"></span>4. <a href="http://www.iteye.com/" title="ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件">ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件</a></h2><h2 id="h2-5-spring-cloud-"><a name="5.   Spring Cloud中国社区论坛" class="reference-link"></a><span class="header-link octicon octicon-link"></span>5. <a href="http://bbs.springcloud.cn/" title="Spring Cloud中国社区论坛">Spring Cloud中国社区论坛</a></h2><h2 id="h2-6-"><a name="6.   伯乐在线-专业的互联网职业社区" class="reference-link"></a><span class="header-link octicon octicon-link"></span>6. <a href="http://www.jobbole.com/" title="伯乐在线-专业的互联网职业社区">伯乐在线-专业的互联网职业社区</a></h2><h2 id="h2-7-51cto-it-it-"><a name="7.   51CTO-专注IT技术领域，打造中国领先的IT技术网络平台" class="reference-link"></a><span class="header-link octicon octicon-link"></span>7. <a href="http://www.51cto.com/" title="51CTO-专注IT技术领域，打造中国领先的IT技术网络平台">51CTO-专注IT技术领域，打造中国领先的IT技术网络平台</a></h2><h2 id="h2-8-"><a name="8.   开源中国" class="reference-link"></a><span class="header-link octicon octicon-link"></span>8. <a href="https://www.oschina.net/" title="开源中国">开源中国</a></h2><h2 id="h2-9-json-"><a name="9.   JSON在线解析" class="reference-link"></a><span class="header-link octicon octicon-link"></span>9. <a href="http://www.sojson.com/" title="JSON在线解析">JSON在线解析</a></h2><h2 id="h2-10-hutool-java-util-"><a name="10.  Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。" class="reference-link"></a><span class="header-link octicon octicon-link"></span>10.<a href="http://hutool.cn/" title="Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。">Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。</a></h2><h2 id="h2-11-"><a name="11.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>11.<a href="https://www.ecosia.org/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-12-"><a name="12.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>12.<a href="https://so.mezw.com/" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-13-"><a name="13.  小众搜索引擎" class="reference-link"></a><span class="header-link octicon octicon-link"></span>13.<a href="http://bird.so" title="小众搜索引擎">小众搜索引擎</a></h2><h2 id="h2-14-"><a name="14.   博客园" class="reference-link"></a><span class="header-link octicon octicon-link"></span>14. <a href="https://www.cnblogs.com/" title="博客园">博客园</a></h2>, ## 1. [ImportNew-专注于 Java 技术分享的网站](http://www.importnew.com/ "ImportNew-专注于 Java 技术分享的网站")

## 2. [ 	GitHub-开源及私有软件项目的大型托管平台](https://github.com " 	GitHub-开源及私有软件项目的大型托管平台")

## 3. [CSDN-全球最大中文IT社区](http://www.csdn.net/ "CSDN-全球最大中文IT社区")

## 4. [ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件](http://www.iteye.com/ "ITeye-Java编程 Spring框架 Ajax技术 agile敏捷软件")

## 5. [Spring Cloud中国社区论坛](http://bbs.springcloud.cn/ "Spring Cloud中国社区论坛")

## 6. [伯乐在线-专业的互联网职业社区](http://www.jobbole.com/ "伯乐在线-专业的互联网职业社区")

## 7. [51CTO-专注IT技术领域，打造中国领先的IT技术网络平台](http://www.51cto.com/ "51CTO-专注IT技术领域，打造中国领先的IT技术网络平台")

## 8. [开源中国](https://www.oschina.net/ "开源中国")

## 9. [JSON在线解析](http://www.sojson.com/ "JSON在线解析")

## 10.[Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。](http://hutool.cn/ "Hutool-Java工具集，针对项目中util包进行开刀，抽象大量的工具方法，旨在减少项目中工具类的数量，将我们的编码工作专注在业务上。")

## 11.[小众搜索引擎](https://www.ecosia.org/ "小众搜索引擎")
## 12.[小众搜索引擎](https://so.mezw.com/ "小众搜索引擎")
## 13.[小众搜索引擎](http://bird.so "小众搜索引擎")
## 14. [博客园](https://www.cnblogs.com/ "博客园")

2019-02-06 19:12:08.432 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:12:58.904 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:12:58.908 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:12:58.908 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:12:58.910 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:12:58.912 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:12:58.913 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:12:58.914 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:12:58.915 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:13:22.483 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:13:22.485 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:13:22.486 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:13:22.487 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:13:22.488 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:13:22.489 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:13:22.490 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:13:22.491 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:13:23.156 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:13:23.159 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:13:23.161 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:13:23.162 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:13:23.164 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:13:23.165 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:13:23.166 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:13:23.166 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:13:29.566 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["80"]}
2019-02-06 19:13:30.792 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:13:30.799 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:13:30.800 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:13:30.800 DEBUG c.c.m.A.findDetailById - ==> Parameters: 80(String)
2019-02-06 19:13:30.801 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:13:30.801 DEBUG c.c.m.A.findDetailById - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘, <h1 id="h1--2019-02-06-14-48-45-"><a name="大家好2019-02-06 14:48:45 星期三" class="reference-link"></a><span class="header-link octicon octicon-link"></span>大家好2019-02-06 14&#58;48&#58;45 星期三</h1><p>package com.codinggyd;</p>
<h5 id="h5--"><a name="**" class="reference-link"></a><span class="header-link octicon octicon-link"></span>**</h5><p>**import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.context.annotation.ComponentScan;<br>import org.springframework.context.annotation.Import;<br>import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;<br>import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</p>
<p>import com.github.tobato.fastdfs.FdfsClientConfig;</p>
<p><a href="https://github.com/ComponentScan" title="&#64;ComponentScan" class="at-link">@ComponentScan</a>(basePackages= {“com.codinggyd”})<br><a href="https://github.com/Import" title="&#64;Import" class="at-link">@Import</a>(FdfsClientConfig.class)<br><a href="https://github.com/SpringBootApplication" title="&#64;SpringBootApplication" class="at-link">@SpringBootApplication</a><br>public class SysApp extends WebMvcConfigurerAdapter{<br>    public static void main( String[] args ) {<br>       SpringApplication.run(SysApp.class, args);<br>    }</p>
<pre><code>@Override
public void addViewControllers(ViewControllerRegistry registry) {

    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);//后台管理系统入口
    registry.addViewController(&quot;/modules/main&quot;).setViewName(&quot;modules/main&quot;);//首页
    registry.addViewController(&quot;/modules/article_add&quot;).setViewName(&quot;modules/article_add&quot;);//文章新增
    registry.addViewController(&quot;/modules/article_update&quot;).setViewName(&quot;modules/article_update&quot;);//文章修改
    registry.addViewController(&quot;/modules/article_list&quot;).setViewName(&quot;modules/article_list&quot;);//文章列表
    registry.addViewController(&quot;/modules/dailyessay_list&quot;).setViewName(&quot;modules/dailyessay_list&quot;);//随笔列表
    registry.addViewController(&quot;/modules/keyword_list&quot;).setViewName(&quot;modules/keyword_list&quot;);//关键词列表

    registry.addViewController(&quot;/index2&quot;).setViewName(&quot;index2&quot;);//
    registry.addViewController(&quot;/modules/layout-1&quot;).setViewName(&quot;modules/layout-1&quot;);//
    registry.addViewController(&quot;/modules/layout-2&quot;).setViewName(&quot;modules/layout-2&quot;);//
    registry.addViewController(&quot;/modules/layout-3&quot;).setViewName(&quot;modules/layout-3&quot;);//

}
</code></pre><p>} <em>**</em></p>
, # 大家好2019-02-06 14:48:45 星期三
package com.codinggyd;
##### **
**import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import com.github.tobato.fastdfs.FdfsClientConfig;

@ComponentScan(basePackages= {"com.codinggyd"})
@Import(FdfsClientConfig.class)
@SpringBootApplication
public class SysApp extends WebMvcConfigurerAdapter{
    public static void main( String[] args ) {
       SpringApplication.run(SysApp.class, args);
    }
	
	@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		
		registry.addViewController("/").setViewName("index");//后台管理系统入口
		registry.addViewController("/modules/main").setViewName("modules/main");//首页
		registry.addViewController("/modules/article_add").setViewName("modules/article_add");//文章新增
		registry.addViewController("/modules/article_update").setViewName("modules/article_update");//文章修改
		registry.addViewController("/modules/article_list").setViewName("modules/article_list");//文章列表
		registry.addViewController("/modules/dailyessay_list").setViewName("modules/dailyessay_list");//随笔列表
		registry.addViewController("/modules/keyword_list").setViewName("modules/keyword_list");//关键词列表
 	
		registry.addViewController("/index2").setViewName("index2");//
		registry.addViewController("/modules/layout-1").setViewName("modules/layout-1");//
		registry.addViewController("/modules/layout-2").setViewName("modules/layout-2");//
		registry.addViewController("/modules/layout-3").setViewName("modules/layout-3");//
 
	}
} ****

2019-02-06 19:13:43.960 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection timed out: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:14:29.689 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:14:29.691 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:14:29.691 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:14:29.691 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:14:29.692 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:14:29.692 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:14:29.693 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:14:29.694 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:14:29.695 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:14:29.695 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:14:29.696 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:14:51.228 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:14:51.229 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:14:51.230 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:14:51.230 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:14:51.231 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:14:51.231 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:14:51.232 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:14:51.232 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:14:51.232 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:14:51.233 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:14:51.233 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:15:34.311 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["81"]}
2019-02-06 19:15:35.465 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:15:35.472 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:15:35.473 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:15:35.474 DEBUG c.c.m.A.findDetailById - ==> Parameters: 81(String)
2019-02-06 19:15:35.477 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:15:35.478 DEBUG c.c.m.A.findDetailById - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记, <p>测试</p>
, 测试
2019-02-06 19:15:36.628 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:15:42.637 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:15:42.638 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:15:42.638 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:15:42.638 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:15:42.639 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:15:42.639 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:15:42.640 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:15:42.640 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:15:42.640 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:15:42.641 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:15:42.641 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:15:59.131 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:15:59.133 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:15:59.134 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:15:59.134 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:15:59.136 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:15:59.136 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:15:59.137 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:15:59.138 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:15:59.138 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:15:59.139 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:15:59.139 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:16:14.356 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:16:14.358 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:14.358 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:16:14.358 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:16:14.360 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:14.360 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:14.361 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:16:14.361 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:16:14.362 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:16:14.362 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:16:14.362 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:16:14.525 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:16:14.529 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:14.529 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:16:14.530 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:16:14.533 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:14.534 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:14.535 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:16:14.535 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:16:14.536 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:16:14.537 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:16:14.537 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:16:14.680 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:16:14.684 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:14.684 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:16:14.685 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:16:14.688 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:14.688 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:14.689 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:16:14.690 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:16:14.691 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:16:14.692 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:16:14.693 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:16:15.361 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-06 19:16:15.366 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:15.366 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:16:15.367 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-06 19:16:15.369 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:15.370 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:15.370 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:16:15.371 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:16:15.371 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:16:15.372 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:16:15.372 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:16:16.095 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.099 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.099 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.099 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.101 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.101 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.102 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.103 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:16.286 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.288 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.289 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.289 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.291 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.291 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.292 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.293 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:16.444 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.446 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.447 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.449 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.451 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.451 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.452 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.452 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:16.546 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.549 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.549 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.550 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.551 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.552 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.552 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.552 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:16.776 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.778 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.779 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.779 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.781 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.782 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.783 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.783 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:16.898 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:16:16.900 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:16.901 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:16:16.901 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:16:16.902 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:16:16.903 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:16:16.904 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:16:16.904 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:16:20.185 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 19:16:20.188 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:16:20.189 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:16:20.189 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 19:16:20.191 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 19:42:36.312 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:42:36.315 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:42:36.315 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:42:36.316 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:42:36.319 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:42:36.320 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:42:36.320 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:42:36.321 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:42:38.168 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 19:42:38.169 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:42:38.169 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:42:38.169 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 19:42:38.170 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 19:44:00.083 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 19:44:00.084 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:44:00.084 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:44:00.085 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 19:44:00.086 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 19:44:06.421 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:44:06.423 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:44:06.423 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:44:06.423 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:44:06.424 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:44:06.424 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:44:06.425 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:44:06.425 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:44:18.641 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["undefined",null]}
2019-02-06 19:44:18.643 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:44:18.644 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:44:18.645 DEBUG c.c.m.A.findArticle - ==> Parameters: undefined(String)
2019-02-06 19:44:18.646 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 19:46:11.488 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:46:11.490 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3753b846]
2019-02-06 19:46:11.491 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:46:11.491 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:46:11.491 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:46:11.492 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:46:11.492 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:46:11.492 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:46:11.493 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:46:11.493 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:46:11.493 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:46:11.493 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:46:11.494 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:46:11.495 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:46:11.496 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:46:11.497 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:46:19.718 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:46:19.720 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:46:19.720 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:46:19.720 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:46:19.722 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:46:19.722 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:46:19.723 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:46:19.723 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:46:19.723 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:46:19.724 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:46:19.724 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:46:19.724 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:46:19.725 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:46:19.725 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:46:28.825 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["null",null]}
2019-02-06 19:46:28.827 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:46:28.827 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-06 19:46:28.827 DEBUG c.c.m.A.findArticle - ==> Parameters: null(String)
2019-02-06 19:46:28.828 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-06 19:47:35.995 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:47:35.996 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:35.997 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:47:35.997 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:47:35.999 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:35.999 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:36.000 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:36.000 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:36.170 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:47:36.171 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:36.172 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:47:36.172 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:47:36.174 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:36.175 DEBUG c.c.m.A.findLatestArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:36.176 DEBUG c.c.m.A.findLatestArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:36.177 DEBUG c.c.m.A.findLatestArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:37.990 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:47:37.991 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:37.991 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:47:37.991 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:47:37.993 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:37.993 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:37.993 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:37.994 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:37.994 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:47:37.994 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:47:37.994 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:47:37.995 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:47:37.995 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:47:37.995 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:47:40.592 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:47:40.594 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:40.594 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:47:40.594 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:47:40.596 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:40.596 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:40.597 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:40.597 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:40.597 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:47:40.597 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:47:40.598 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:47:40.598 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:47:40.599 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:47:40.600 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:47:43.636 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:47:43.637 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:43.638 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:47:43.638 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:47:43.639 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:43.640 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:43.640 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:43.641 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:43.641 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:47:43.641 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:47:43.641 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:47:43.642 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:47:43.642 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:47:43.643 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:47:50.000 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:47:50.001 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:47:50.001 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:47:50.001 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:47:50.002 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:47:50.002 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:47:50.003 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:47:50.003 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:47:50.003 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:47:50.004 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:47:50.004 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:47:50.004 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:47:50.004 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:47:50.005 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:48:51.795 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:48:51.800 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:48:51.802 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:48:51.803 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:48:51.806 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:48:51.806 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:48:51.807 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:48:51.808 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:48:56.514 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:48:56.515 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:48:56.516 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:48:56.516 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:48:56.517 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:48:56.517 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:48:56.517 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:48:56.517 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:48:56.518 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:48:56.518 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:48:56.518 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:48:56.518 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:48:56.519 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:48:56.519 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:48:56.519 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:48:56.519 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:48:56.520 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:48:56.520 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:48:56.520 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:48:56.520 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:48:56.521 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:48:56.521 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:48:56.521 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:48:56.521 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:48:56.521 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:48:59.991 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:48:59.992 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:48:59.992 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:48:59.992 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:48:59.993 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:48:59.993 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:48:59.994 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:48:59.994 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:48:59.994 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:48:59.995 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:48:59.995 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:48:59.995 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:48:59.995 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:48:59.995 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:48:59.996 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:48:59.996 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:48:59.996 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:48:59.998 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:48:59.998 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:48:59.999 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:48:59.999 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:48:59.999 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:49:00.000 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:49:00.001 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:49:00.002 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:49:08.289 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:49:08.291 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:49:08.291 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:49:08.291 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:49:08.293 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:49:08.293 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:49:08.293 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:49:08.294 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:49:08.294 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:49:08.294 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:49:08.294 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:49:08.295 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:49:08.295 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:49:08.295 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:49:08.295 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:49:08.296 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:49:08.296 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:49:08.296 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:49:08.297 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:49:08.297 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:49:08.298 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:49:08.298 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:49:08.299 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:49:08.299 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:49:08.299 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:49:10.833 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:49:10.836 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:49:10.836 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:49:10.837 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:49:10.838 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:49:10.838 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:49:10.839 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:49:10.839 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:49:10.839 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:49:10.840 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:49:10.840 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:49:10.840 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:49:10.840 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:49:10.841 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:49:10.841 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:49:10.842 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:49:10.842 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:49:10.843 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:49:10.843 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:49:10.844 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:49:10.844 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:49:10.845 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:49:10.845 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:49:10.845 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:49:10.846 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:49:14.623 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:49:14.625 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:49:14.625 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:49:14.625 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:49:14.626 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:49:14.627 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:49:14.627 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:49:14.627 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:49:14.628 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:49:14.628 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:49:14.628 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:49:14.629 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:49:14.630 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:49:14.630 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:49:14.631 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:49:14.632 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:49:14.632 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:49:14.633 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:49:14.633 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:49:14.633 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:49:14.633 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:49:14.634 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:49:14.634 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:49:14.635 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:49:14.636 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:49:16.537 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:49:16.538 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:49:16.539 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:49:16.539 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:49:16.540 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:49:16.540 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:49:16.541 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:49:16.541 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:49:16.541 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:49:16.542 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:49:16.542 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:49:16.542 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:49:16.542 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:49:16.542 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:49:16.543 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:49:16.543 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:49:16.543 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:49:16.543 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:49:16.544 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:49:16.544 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:49:16.544 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:49:16.544 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:49:16.545 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:49:16.545 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:49:16.545 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:44.462 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:44.464 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:44.464 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:44.464 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:44.465 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:44.465 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:44.466 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:44.466 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:44.467 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:44.467 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:44.467 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:44.467 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:44.468 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:44.468 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.468 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:44.468 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:44.468 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:44.469 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.469 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:44.469 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:44.470 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:44.470 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:44.471 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:44.471 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:44.472 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:44.729 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:44.730 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:44.730 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:44.730 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:44.732 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:44.732 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:44.733 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:44.733 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:44.733 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:44.734 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:44.734 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:44.734 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:44.734 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:44.735 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.735 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:44.735 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:44.735 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:44.735 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.736 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:44.736 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:44.737 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:44.738 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:44.738 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:44.738 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:44.739 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:44.939 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:44.941 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:44.941 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:44.941 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:44.942 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:44.943 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:44.943 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:44.943 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:44.944 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:44.944 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:44.944 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:44.944 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:44.944 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:44.945 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.945 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:44.945 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:44.945 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:44.946 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:44.946 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:44.946 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:44.946 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:44.947 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:44.947 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:44.947 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:44.947 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.118 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.121 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.121 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.121 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.122 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.123 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.123 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.123 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.124 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.124 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.124 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.125 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.125 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.126 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.126 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.127 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.127 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.127 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.128 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.128 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.128 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.129 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.129 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.130 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.130 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.294 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.296 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.296 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.296 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.297 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.297 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.297 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.298 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.298 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.299 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.299 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.300 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.300 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.300 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.300 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.300 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.301 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.301 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.301 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.301 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.306 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.306 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.306 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.306 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.307 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.445 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.447 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.447 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.447 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.449 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.450 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.451 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.451 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.451 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.452 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.452 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.452 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.452 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.453 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.453 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.454 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.455 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.455 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.455 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.456 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.456 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.456 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.456 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.457 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.457 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.603 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.605 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.606 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.606 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.607 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.607 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.607 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.608 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.608 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.608 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.608 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.608 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.609 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.609 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.609 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.609 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.610 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.610 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.610 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.610 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.611 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.611 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.611 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.611 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.611 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.770 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.773 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.773 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.773 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.774 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.774 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.775 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.775 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.775 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.775 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.776 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.776 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.776 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.776 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.777 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.777 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.777 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.778 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.778 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.778 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.778 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.778 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.779 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.779 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.779 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:45.943 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:45.944 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:45.944 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:45.944 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:45.945 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:45.946 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:45.946 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:45.946 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:45.946 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:45.947 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:45.947 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:45.947 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:45.947 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:45.948 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.948 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:45.948 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:45.948 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:45.949 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:45.949 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:45.950 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:45.950 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:45.950 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:45.950 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:45.950 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:45.951 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:46.120 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:46.123 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:46.123 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:46.124 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:46.125 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:46.126 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:46.126 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:46.126 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:46.126 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:46.127 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:46.127 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:46.127 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:46.127 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:46.128 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:46.128 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:46.128 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:46.129 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:46.129 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:46.129 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:46.129 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:46.130 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:46.130 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:46.131 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:46.131 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:46.132 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:46.317 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:46.319 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:46.319 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:46.319 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:46.321 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:46.322 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:46.322 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:46.323 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:46.323 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:46.323 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:46.323 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:46.323 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:46.324 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:46.324 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:46.324 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:46.324 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:46.325 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:46.325 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:46.325 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:46.325 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:46.326 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:46.326 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:46.326 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:46.326 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:46.327 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:47.158 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:47.159 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:47.159 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:47.159 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:47.160 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:47.161 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:47.161 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:47.161 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:47.161 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:47.162 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:47.162 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:47.162 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:47.163 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:47.163 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:47.163 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:47.163 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:47.163 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:47.164 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:47.164 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:47.164 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:47.164 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:47.165 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:47.165 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:47.166 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:47.166 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:49.161 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:49.162 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:49.162 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:49.162 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:49.163 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:49.163 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:49.163 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:49.164 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:49.164 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:49.164 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:49.164 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:49.165 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:49.165 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:49.165 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:49.165 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:49.165 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:49.166 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:49.166 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:49.167 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:49.167 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:49.167 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:49.167 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:49.168 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:49.168 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:49.168 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:51.905 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:51.906 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:51.907 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:51.907 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:51.908 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:51.908 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:51.908 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:51.909 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:51.909 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:51.909 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:51.909 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:51.909 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:51.910 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:51.910 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:51.910 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:51.910 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:51.910 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:51.911 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:51.911 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:51.911 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:51.911 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:51.912 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:51.912 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:51.912 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:51.912 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:54.035 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:54.036 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:54.036 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:54.037 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:54.038 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:54.040 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:54.040 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:54.040 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:54.040 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:54.040 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:54.041 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:54.041 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:54.041 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:54.041 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:54.041 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:54.042 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:54.042 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:54.042 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:54.042 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:54.042 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:54.043 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:54.043 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:54.043 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:54.043 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:54.044 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:50:55.727 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:50:55.728 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:50:55.728 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:50:55.729 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:50:55.729 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:50:55.730 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:50:55.730 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:50:55.730 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:50:55.731 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:50:55.731 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:50:55.731 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:50:55.731 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:50:55.731 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:50:55.732 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:50:55.732 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:50:55.732 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:50:55.733 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:50:55.733 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:50:55.734 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:50:55.734 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:50:55.734 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:50:55.734 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:50:55.735 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:50:55.735 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:50:55.735 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:52:40.897 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:52:40.899 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:52:40.899 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:52:40.899 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:52:40.900 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:52:40.900 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:52:40.901 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:52:40.901 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:52:40.902 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:52:40.902 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:52:40.903 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:52:40.903 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:52:40.903 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:52:40.903 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:52:40.904 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:52:40.904 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:52:40.904 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:52:40.904 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:52:40.904 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:52:40.905 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:52:40.905 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:52:40.905 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:52:40.905 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:52:40.906 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:52:40.906 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:55:14.785 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["81"]}
2019-02-06 19:55:15.920 ERROR c.c.r.RedisClientUtils - 读取缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.getFromCache(RedisClientUtils.java:113)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:78)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:55:15.922 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:55:15.922 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-06 19:55:15.922 DEBUG c.c.m.A.findDetailById - ==> Parameters: 81(String)
2019-02-06 19:55:15.923 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-06 19:55:15.923 DEBUG c.c.m.A.findDetailById - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记, <p>测试</p>
, 测试
2019-02-06 19:55:17.051 ERROR c.c.r.RedisClientUtils - redis 缓存出错,{}
redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:50)
	at redis.clients.jedis.JedisPool.getResource(JedisPool.java:99)
	at com.codinggyd.redis.RedisClientUtils.cache(RedisClientUtils.java:78)
	at com.codinggyd.service.impl.ArticleServiceImpl.listDetail(ArticleServiceImpl.java:93)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy68.listDetail(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect
	at redis.clients.jedis.Connection.connect(Connection.java:164)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:82)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1641)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:85)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:868)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)
	at redis.clients.util.Pool.getResource(Pool.java:48)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:158)
	... 83 common frames omitted
2019-02-06 19:55:22.568 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:55:22.570 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:55:22.570 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:55:22.570 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:55:22.571 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:55:22.572 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:55:22.572 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:55:22.572 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:55:22.572 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:55:22.573 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:55:22.573 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:55:22.573 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:55:22.573 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:55:22.574 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:55:22.574 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:55:22.574 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:55:22.574 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:55:22.574 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:55:22.575 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:55:22.575 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:55:22.575 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:55:22.576 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:55:22.576 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:55:22.576 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:55:22.576 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:55:28.194 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 19:55:28.196 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:55:28.196 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 19:55:28.197 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 19:55:28.198 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:55:28.198 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:55:28.198 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:55:28.198 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 19:55:28.199 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 19:55:28.199 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 19:55:28.199 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 19:55:28.199 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 19:55:28.200 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 19:55:28.200 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 19:55:28.200 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 19:55:28.200 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 19:55:28.200 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 19:55:28.201 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 19:55:28.201 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 19:55:28.201 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 19:55:28.201 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 19:55:28.202 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 19:55:28.202 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 19:55:28.202 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 19:55:28.202 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 19:57:18.034 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 19:57:18.036 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 19:57:18.036 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 19:57:18.036 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 19:57:18.038 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 19:57:18.039 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 19:57:18.039 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 19:57:18.040 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:21.830 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:21.832 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:21.832 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:21.832 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:21.833 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:21.834 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:21.834 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:21.834 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:21.835 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:21.835 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:21.835 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:21.835 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:21.835 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:21.836 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:21.836 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:21.837 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:21.837 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:21.837 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:21.837 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:21.837 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:21.838 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:21.838 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:21.838 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:21.838 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:21.838 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:22.670 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:22.672 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:22.672 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:22.672 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:22.673 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:22.673 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:22.673 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:22.674 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:22.674 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:22.674 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:22.675 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:22.675 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:22.676 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:22.676 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:22.676 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:22.676 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:22.677 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:22.677 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:22.677 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:22.677 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:22.677 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:22.678 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:22.678 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:22.678 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:22.678 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:22.931 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:22.932 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:22.932 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:22.933 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:22.934 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:22.934 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:22.934 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:22.935 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:22.935 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:22.936 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:22.936 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:22.936 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:22.937 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:22.937 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:22.938 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:22.938 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:22.938 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:22.938 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:22.939 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:22.939 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:22.939 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:22.939 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:22.940 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:22.940 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:22.940 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:23.085 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:23.087 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:23.087 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:23.087 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:23.088 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:23.088 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:23.089 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:23.089 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:23.089 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:23.089 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:23.090 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:23.090 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:23.090 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:23.090 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.091 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:23.092 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:23.092 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:23.092 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.093 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:23.093 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:23.093 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:23.094 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:23.094 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:23.094 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:23.094 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:23.256 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:23.258 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:23.259 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:23.259 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:23.260 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:23.260 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:23.260 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:23.261 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:23.261 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:23.261 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:23.261 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:23.261 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:23.262 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:23.262 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.262 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:23.262 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:23.263 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:23.263 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.263 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:23.263 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:23.263 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:23.264 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:23.264 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:23.264 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:23.264 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:23.425 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:23.427 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:23.427 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:23.427 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:23.428 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:23.429 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:23.429 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:23.429 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:23.429 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:23.429 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:23.430 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:23.430 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:23.431 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:23.431 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.431 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:23.431 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:23.431 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:23.432 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:23.432 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:23.432 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:23.432 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:23.433 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:23.433 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:23.433 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:23.433 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:03:28.595 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 20:03:28.597 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:28.598 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 20:03:28.598 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 20:03:28.599 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:28.600 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:28.601 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:28.601 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:30.280 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:03:30.281 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:03:30.281 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:03:30.282 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:03:30.283 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:03:30.283 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:03:30.283 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:03:30.283 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:03:30.283 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:03:30.284 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:03:30.284 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:03:30.284 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:03:30.284 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:03:30.285 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:03:30.285 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:03:30.285 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:03:30.285 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:03:30.285 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:03:30.286 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:03:30.286 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:03:30.286 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:03:30.286 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:03:30.287 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:03:30.287 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:03:30.287 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:07:40.858 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 20:07:40.860 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:07:40.861 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 20:07:40.862 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 20:07:40.864 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:07:40.866 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:07:40.867 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:07:40.868 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:07:46.162 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-06 20:07:46.163 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:07:46.163 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-06 20:07:46.164 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-06 20:07:46.165 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:07:46.166 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:07:46.167 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:07:46.167 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
2019-02-06 20:07:46.167 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44, 0, null, 1, 资料网站
2019-02-06 20:07:46.167 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40, 0, null, 2, 生活文摘
2019-02-06 20:07:46.167 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38, 0, null, 2, 生活文摘
2019-02-06 20:07:46.168 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35, 0, null, 2, 生活文摘
2019-02-06 20:07:46.168 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34, 0, null, 2, 生活文摘
2019-02-06 20:07:46.168 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31, 0, null, 2, 生活文摘
2019-02-06 20:07:46.168 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25, 0, null, 3, 技术笔记
2019-02-06 20:07:46.169 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21, 0, null, 3, 技术笔记
2019-02-06 20:07:46.169 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32, 0, null, 3, 技术笔记
2019-02-06 20:07:46.169 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31, 0, null, 2, 生活文摘
2019-02-06 20:07:46.169 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35, 21128, null, 1, 资料网站
2019-02-06 20:07:46.169 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34, 17674, null, 3, 技术笔记
2019-02-06 20:07:46.170 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27, 19608, null, 3, 技术笔记
2019-02-06 20:07:46.170 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53, 21219, null, 3, 技术笔记
2019-02-06 20:07:46.170 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50, 21175, null, 3, 技术笔记
2019-02-06 20:07:46.170 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58, 21282, null, 3, 技术笔记
2019-02-06 20:07:46.170 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16, 21333, null, 2, 生活文摘
2019-02-06 20:07:52.671 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-06 20:07:52.673 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6a743c7c]
2019-02-06 20:07:52.673 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-06 20:07:52.673 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-06 20:07:52.675 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-06 20:07:52.676 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48, 0, null, 1, 资料网站
2019-02-06 20:07:52.676 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47, 0, null, 1, 资料网站
2019-02-06 20:07:52.677 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46, 0, null, 1, 资料网站
