2019-03-10 13:36:56.307 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 13:36:56.415 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 7108 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 13:36:56.415 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 13:36:56.415 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 13:36:57.735 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 13:37:00.524 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 13:37:00.569 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 13:37:00.782 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 13:37:00.783 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 13:37:01.375 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 13:37:01.377 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 13:37:01.536 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 13:37:01.984 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 13:37:02.032 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 13:37:02.033 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 13:37:02.034 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 13:37:02.850 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 13:37:02.862 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 13:37:02.878 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 13:37:02.917 INFO  c.c.ServerApp - Started ServerApp in 7.099 seconds (JVM running for 7.951)
2019-03-10 13:40:16.377 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 13:40:16.443 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 3740 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 13:40:16.443 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 13:40:16.443 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 13:40:17.779 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 13:40:20.438 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 13:40:20.479 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 13:40:20.700 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 13:40:20.701 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 13:40:21.450 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 13:40:21.452 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 13:40:21.615 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 13:40:22.169 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 13:40:22.220 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 13:40:22.220 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 13:40:22.220 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 13:40:22.220 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 13:40:22.220 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 13:40:22.221 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 13:40:22.222 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 13:40:22.222 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 13:40:22.222 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 13:40:22.222 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 13:40:22.222 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 13:40:23.009 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 13:40:23.019 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 13:40:23.033 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 13:40:23.073 INFO  c.c.ServerApp - Started ServerApp in 7.151 seconds (JVM running for 7.853)
2019-03-10 13:41:24.395 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 13:41:24.575 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:24.740 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:41:24.741 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:24.761 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:24.807 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:24.808 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:24.811 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:24.812 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:24.813 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:24.814 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:24.814 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:24.815 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:24.815 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:24.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:41:24.977 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:41:24.978 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-03-10 13:41:24.978 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:41:25.064 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:25.067 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:41:25.070 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:25.074 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:25.078 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:25.080 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:41:25.231 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:25.239 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:41:25.241 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:25.244 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:41:25.253 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:41:25.259 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:41:25.259 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:41:25.259 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:41:25.259 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:25.260 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:25.260 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:41:25.261 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:25.261 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:25.262 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:41:25.262 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3c8d2779]
2019-03-10 13:41:25.264 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:41:25.265 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:41:25.273 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:25.274 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:41:25.274 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:41:25.276 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:25.276 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:25.277 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:25.278 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:25.278 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.279 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.279 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:41:25.280 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:25.280 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:25.280 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:41:25.281 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:25.281 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:25.282 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:25.283 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.283 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:41:25.283 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:41:25.284 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:41:25.284 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.284 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:25.285 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:25.285 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:41:25.285 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:25.285 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:25.286 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:25.287 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:25.287 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:25.287 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:41:25.288 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:25.289 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:41:25.290 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:41:25.291 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:41:25.291 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:41:25.292 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:41:25.292 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:41:25.293 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:41:25.293 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:41:25.294 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:41:25.294 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:25.295 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:41:25.296 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:41:25.298 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:41:25.299 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:41:25.301 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:41:25.303 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:41:25.306 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:41:25.307 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:41:25.307 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:41:25.308 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:41:25.309 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:41:25.310 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:41:25.313 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:41:25.344 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:25.357 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:25.358 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:25.358 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:25.375 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:25.376 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:25.376 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.377 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:25.377 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:25.378 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:25.378 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:25.379 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:25.379 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:25.409 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:41:25.432 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:25.432 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:41:25.433 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:41:25.450 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:25.451 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:41:25.453 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:25.454 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:25.455 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:41:25.456 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:41:25.457 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:41:25.457 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:41:25.458 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:41:25.459 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:41:25.460 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:25.461 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:41:25.462 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:41:25.463 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:41:25.464 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:41:57.200 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:57.225 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:57.225 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:57.226 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:57.253 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:57.254 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:57.255 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.256 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:57.257 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:57.258 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.258 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:57.259 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:57.260 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:57.291 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:41:57.304 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:57.305 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-03-10 13:41:57.306 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:41:57.329 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:57.331 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:41:57.332 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:57.333 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:57.334 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:57.335 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:41:57.394 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:57.400 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:41:57.401 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:41:57.401 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:57.409 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:41:57.409 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:57.410 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:41:57.410 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:57.412 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3c8d2779]
2019-03-10 13:41:57.412 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:41:57.412 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:41:57.413 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:41:57.413 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:57.414 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:41:57.414 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:41:57.414 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:57.415 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:41:57.423 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:41:57.423 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:41:57.424 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:41:57.425 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:57.426 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:57.426 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:57.427 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.427 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:57.428 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:57.428 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.429 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:41:57.429 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:57.429 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:57.430 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:41:57.430 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.430 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:41:57.431 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:57.431 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:57.431 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:41:57.432 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:41:57.432 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.432 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:57.434 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:41:57.434 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:57.434 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:41:57.435 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:57.436 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:41:57.436 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:57.436 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:41:57.438 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:41:57.439 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:57.439 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:41:57.440 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:41:57.442 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:41:57.442 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:41:57.443 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:41:57.444 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:57.444 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:41:57.444 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:41:57.445 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:41:57.445 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:57.446 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:41:57.446 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:57.447 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:41:57.447 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:41:57.448 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:41:57.448 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:41:57.450 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:41:57.451 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:41:57.453 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:41:57.454 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:41:57.455 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:41:57.456 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:41:57.459 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:57.478 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:41:57.500 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:41:57.501 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:41:57.501 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:41:57.511 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:41:57.511 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:41:57.512 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.512 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:41:57.512 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:41:57.513 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:41:57.513 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:41:57.513 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:41:57.514 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:41:57.528 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:41:57.546 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:41:57.546 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:41:57.546 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:41:57.569 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:41:57.570 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:41:57.570 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:41:57.570 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:41:57.571 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:41:57.571 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:41:57.572 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:41:57.572 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:41:57.573 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:41:57.573 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:41:57.574 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:41:57.574 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:41:57.574 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:41:57.575 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:41:57.575 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:42:19.619 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:42:19.639 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:42:19.640 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:42:19.640 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:42:19.650 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:42:19.651 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:42:19.651 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:42:19.651 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:42:19.652 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:42:19.652 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:42:19.652 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:42:19.653 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:42:19.653 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:42:20.579 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:42:20.609 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:42:20.609 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-03-10 13:42:20.609 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:42:20.628 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:42:20.628 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:42:20.629 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:42:20.630 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:42:20.630 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:42:20.631 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:42:21.351 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:42:21.356 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:42:21.357 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:42:21.357 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:42:21.358 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:42:21.367 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3c8d2779]
2019-03-10 13:42:21.367 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:42:21.367 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:42:21.368 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:42:21.368 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:42:21.368 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:42:21.368 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:42:21.368 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:42:21.369 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:42:21.370 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:42:21.370 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:42:21.370 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:42:21.371 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:42:21.372 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:42:21.372 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:42:21.381 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:42:21.381 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:42:21.382 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:42:21.382 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:42:21.383 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:42:21.383 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:42:21.383 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:42:21.383 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:42:21.384 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:42:21.384 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:42:21.384 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:42:21.384 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:42:21.384 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:42:21.385 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:42:21.385 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:42:21.385 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:42:21.385 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:42:21.385 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:42:21.386 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:42:21.386 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:42:21.386 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:42:21.386 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:42:21.387 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:42:21.387 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:42:21.387 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:42:21.387 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:42:21.389 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:42:21.389 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:42:21.389 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:42:21.390 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:42:21.390 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:42:21.390 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:42:21.391 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:42:21.391 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:42:21.391 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:42:21.391 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:42:21.392 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:42:21.392 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:42:21.393 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:42:21.393 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:42:21.393 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:42:21.393 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:42:21.394 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:42:21.394 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:42:21.394 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:42:21.394 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:42:21.395 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:42:21.395 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:42:21.395 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:42:21.410 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:42:21.411 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:42:25.080 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:42:25.099 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:42:25.100 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:42:25.101 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:42:25.118 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:42:25.119 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:42:25.119 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:42:25.119 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:42:25.119 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:42:25.120 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:42:25.120 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:42:25.120 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:42:25.120 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:42:25.138 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:42:25.151 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:42:25.152 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:42:25.152 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:42:25.170 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:42:25.171 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:42:25.171 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:42:25.171 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:42:25.172 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:42:25.173 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:42:25.173 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:42:25.174 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:42:25.174 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:42:25.174 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:42:25.175 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:42:25.175 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:42:25.175 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:42:25.175 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:42:25.176 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:46:05.541 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:46:05.569 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:46:05.570 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:46:05.571 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:46:05.592 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:46:05.593 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:46:05.594 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.595 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:46:05.595 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:46:05.596 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.596 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:46:05.596 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:46:05.597 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:46:05.688 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:46:05.709 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:46:05.709 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-03-10 13:46:05.709 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:46:05.730 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:46:05.730 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:46:05.731 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:46:05.731 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:46:05.732 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:46:05.732 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:46:05.785 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:46:05.796 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:46:05.796 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:46:05.797 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:46:05.797 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:46:05.807 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@8c5481e]
2019-03-10 13:46:05.807 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:46:05.807 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:46:05.814 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3c8d2779]
2019-03-10 13:46:05.814 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:46:05.815 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:46:05.852 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3eb046d4]
2019-03-10 13:46:05.852 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@62ba7ea6]
2019-03-10 13:46:05.852 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:46:05.853 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:46:05.853 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:46:05.853 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:46:05.853 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:46:05.854 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:46:05.854 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.855 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:46:05.855 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:46:05.855 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:46:05.856 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:46:05.856 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:46:05.856 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:46:05.856 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.857 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:46:05.857 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3c8d2779]
2019-03-10 13:46:05.857 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:46:05.857 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:46:05.858 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:46:05.858 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:46:05.859 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:46:05.870 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:46:05.870 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:46:05.871 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:46:05.871 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:46:05.872 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:46:05.872 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.873 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:46:05.874 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:46:05.875 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:46:05.875 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:46:05.876 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:46:05.876 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:46:05.877 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.877 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:46:05.877 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:46:05.877 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:46:05.880 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:46:05.880 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:46:05.883 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:46:05.884 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:46:05.885 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:46:05.885 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:46:05.885 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:46:05.886 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:46:05.886 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:46:05.886 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:46:05.887 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:46:05.887 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:46:05.887 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:46:05.887 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:46:05.888 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:46:05.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:46:05.888 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:46:05.889 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:46:05.889 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:46:05.890 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:46:05.891 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:46:05.931 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:46:05.949 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:46:05.949 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:46:05.950 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:46:05.962 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:46:05.963 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:46:05.964 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.964 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:46:05.965 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:46:05.965 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:46:05.965 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:46:05.965 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:46:05.966 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:46:05.985 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:46:06.009 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:46:06.009 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:46:06.009 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:46:06.035 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:46:06.035 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:46:06.036 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:46:06.036 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:46:06.036 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:46:06.037 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:46:06.037 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:46:06.037 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:46:06.038 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:46:06.038 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:46:06.038 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:46:06.039 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:46:06.039 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:46:06.039 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:46:06.040 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:46:32.842 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552196764451,"returnTime":"1552196765052","returnData":null,"httpStatusCode":"200","timeConsuming":600},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765176,"returnTime":"1552196765674","returnData":null,"httpStatusCode":"200","timeConsuming":498},{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765680,"returnTime":"1552196765772","returnData":null,"httpStatusCode":"200","timeConsuming":92},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765778,"returnTime":"1552196765883","returnData":null,"httpStatusCode":"200","timeConsuming":105},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765787,"returnTime":"1552196765900","returnData":null,"httpStatusCode":"200","timeConsuming":113},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765788,"returnTime":"1552196765902","returnData":null,"httpStatusCode":"200","timeConsuming":114},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765790,"returnTime":"1552196765906","returnData":null,"httpStatusCode":"200","timeConsuming":116},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552196765788,"returnTime":"1552196765920","returnData":null,"httpStatusCode":"200","timeConsuming":132},{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":1552196765925,"returnTime":"1552196766084","returnData":null,"httpStatusCode":"200","timeConsuming":159}]]}
2019-03-10 13:46:32.886 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7bb61dd4]
2019-03-10 13:46:32.887 DEBUG c.c.m.L.addLogger - ==>  Preparing: <script>INSERT INTO mine_loginfo( id, ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES <foreach collection="list" item="item" index="index" separator=","> ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) </foreach> </script> 
2019-03-10 13:46:32.949 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'item' not found. Available parameters are [list, param1]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:76)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy82.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.saveLoggerInfo(Unknown Source)
	... 62 common frames omitted
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'item' not found. Available parameters are [list, param1]
	at org.apache.ibatis.binding.MapperMethod$MapperParamMap.get(MapperMethod.java:258)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:40)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:123)
	at org.apache.ibatis.reflection.MetaObject.metaObjectForProperty(MetaObject.java:145)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.executor.parameter.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:83)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:83)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:58)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:71)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:44)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy92.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 81 common frames omitted
2019-03-10 13:52:29.702 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 13:52:29.803 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 16008 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 13:52:29.804 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 13:52:29.805 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 13:52:31.294 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 13:52:33.979 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 13:52:34.015 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 13:52:34.233 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 13:52:34.234 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 13:52:34.877 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 13:52:34.879 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 13:52:35.029 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 13:52:35.521 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 13:52:35.579 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 13:52:35.580 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 13:52:36.349 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 13:52:36.359 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 13:52:36.376 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 13:52:36.416 INFO  c.c.ServerApp - Started ServerApp in 7.694 seconds (JVM running for 8.589)
2019-03-10 13:52:56.445 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 13:52:56.568 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:52:56.716 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4ccbc243]
2019-03-10 13:52:56.718 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:52:56.741 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:52:56.767 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:52:56.768 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:52:56.770 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:52:56.771 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:52:56.771 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:52:56.772 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:52:56.773 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:52:56.773 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:52:56.774 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:52:56.906 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:52:56.920 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4ccbc243]
2019-03-10 13:52:56.920 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 13:52:56.920 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:52:56.933 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:52:56.934 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:52:56.935 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:52:56.936 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:52:56.936 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:52:56.937 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:52:56.938 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:52:56.938 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:52:56.940 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:52:56.941 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:52:56.942 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:52:57.003 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:52:57.013 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:52:57.013 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:52:57.018 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4ccbc243]
2019-03-10 13:52:57.020 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:52:57.020 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:52:57.022 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:52:57.022 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:52:57.030 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5e3b86f1]
2019-03-10 13:52:57.030 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:52:57.031 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:52:57.033 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4a8638d4]
2019-03-10 13:52:57.033 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@75784745]
2019-03-10 13:52:57.033 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:52:57.034 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:52:57.034 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:52:57.035 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:52:57.035 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:52:57.036 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:52:57.037 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.039 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:52:57.040 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:52:57.041 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 13:52:57.042 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:52:57.043 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:52:57.043 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.044 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:52:57.044 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:52:57.044 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:52:57.045 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:52:57.046 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:52:57.046 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5e3b86f1]
2019-03-10 13:52:57.047 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:52:57.048 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:52:57.048 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:52:57.049 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:52:57.049 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:52:57.049 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:52:57.050 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:52:57.052 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:52:57.053 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:52:57.054 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:52:57.054 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:52:57.055 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:52:57.055 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:52:57.057 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:52:57.057 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.058 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:52:57.059 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:52:57.061 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:52:57.062 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:52:57.063 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:52:57.063 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:52:57.064 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:52:57.065 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.066 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:52:57.068 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:52:57.069 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:52:57.069 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:52:57.070 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:52:57.070 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:52:57.073 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:52:57.076 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:52:57.077 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:52:57.077 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:52:57.078 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:52:57.080 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:52:57.083 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:52:57.084 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:52:57.086 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:52:57.087 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:52:57.128 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:52:57.152 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 13:52:57.152 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:52:57.153 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:52:57.178 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:52:57.179 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:52:57.180 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.181 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:52:57.182 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:52:57.183 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:52:57.184 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:52:57.185 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:52:57.187 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:52:57.225 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:52:57.246 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 13:52:57.246 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:52:57.247 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:52:57.271 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:52:57.272 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:52:57.274 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:52:57.276 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:52:57.277 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:52:57.278 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:52:57.279 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:52:57.279 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:52:57.280 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:52:57.281 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:52:57.281 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:52:57.282 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:52:57.283 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:52:57.283 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:52:57.284 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:53:00.017 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552197175604,"returnTime":"1552197175979","returnData":null,"httpStatusCode":"200","timeConsuming":374},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197176035,"returnTime":"1552197176886","returnData":null,"httpStatusCode":"200","timeConsuming":851},{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197176895,"returnTime":"1552197176985","returnData":null,"httpStatusCode":"200","timeConsuming":90},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197176992,"returnTime":"1552197177071","returnData":null,"httpStatusCode":"200","timeConsuming":79},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197176999,"returnTime":"1552197177090","returnData":null,"httpStatusCode":"200","timeConsuming":90},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197177001,"returnTime":"1552197177097","returnData":null,"httpStatusCode":"200","timeConsuming":96},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197177001,"returnTime":"1552197177097","returnData":null,"httpStatusCode":"200","timeConsuming":96},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197177004,"returnTime":"1552197177133","returnData":null,"httpStatusCode":"200","timeConsuming":129},{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":1552197177114,"returnTime":"1552197177343","returnData":null,"httpStatusCode":"200","timeConsuming":229}]]}
2019-03-10 13:53:00.064 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 13:53:00.065 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 13:53:00.068 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552197175604(Long), 200(String), 374(Integer), 1552197175979(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197176035(Long), 200(String), 851(Integer), 1552197176886(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197176895(Long), 200(String), 90(Integer), 1552197176985(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197176992(Long), 200(String), 79(Integer), 1552197177071(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197176999(Long), 200(String), 90(Integer), 1552197177090(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197177001(Long), 200(String), 96(Integer), 1552197177097(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197177001(Long), 200(String), 96(Integer), 1552197177097(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197177004(Long), 200(String), 129(Integer), 1552197177133(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["5"],"type_dm":["null"]}(String), null, 1552197177114(Long), 200(String), 229(Integer), 1552197177343(String), null
2019-03-10 13:53:00.800 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197175604' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197175604' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552197175604' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197175604' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197175604' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 13:53:50.956 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 13:53:51.064 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 7112 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 13:53:51.064 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 13:53:51.065 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 13:53:52.968 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 13:53:55.893 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 13:53:55.939 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 13:53:56.270 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 13:53:56.272 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 13:53:57.303 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 13:53:57.304 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 13:53:57.517 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 13:53:58.216 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 13:53:58.299 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 13:53:58.299 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 13:53:58.299 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 13:53:58.300 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 13:53:58.301 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 13:53:58.301 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 13:53:58.301 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 13:53:58.301 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 13:53:59.729 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 13:53:59.763 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 13:53:59.801 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 13:53:59.882 INFO  c.c.ServerApp - Started ServerApp in 9.608 seconds (JVM running for 10.363)
2019-03-10 13:53:59.989 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 13:54:00.210 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:54:00.395 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7e39c82e]
2019-03-10 13:54:00.398 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:54:00.426 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:54:00.469 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:54:00.470 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:54:00.473 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.474 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:54:00.475 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:54:00.476 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.477 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:54:00.478 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:54:00.478 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:54:00.579 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:54:00.606 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7e39c82e]
2019-03-10 13:54:00.606 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 13:54:00.607 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:54:00.630 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:54:00.630 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:54:00.631 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:54:00.632 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:54:00.633 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:54:00.633 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:54:00.634 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:54:00.635 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:54:00.635 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.636 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:54:00.638 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.677 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:54:00.687 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:54:00.690 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:54:00.696 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:54:00.697 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:54:00.705 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7e39c82e]
2019-03-10 13:54:00.705 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:54:00.706 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:54:00.707 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2bad5dbf]
2019-03-10 13:54:00.707 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:54:00.707 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:54:00.708 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:54:00.709 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:54:00.712 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:54:00.712 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:54:00.713 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@48b6e8cc]
2019-03-10 13:54:00.713 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:54:00.714 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:54:00.714 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:54:00.715 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:54:00.724 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:54:00.725 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:54:00.728 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.729 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:54:00.729 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:54:00.730 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.730 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:54:00.731 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:54:00.732 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:54:00.738 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:54:00.738 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:54:00.738 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:54:00.738 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:54:00.739 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:54:00.739 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:54:00.739 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.740 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:54:00.740 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:54:00.740 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:54:00.741 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:54:00.741 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:54:00.743 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:54:00.744 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:54:00.745 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.745 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:54:00.746 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:54:00.746 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:54:00.747 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:54:00.747 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:54:00.747 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:54:00.748 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:54:00.748 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:54:00.748 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:54:00.748 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:54:00.749 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:54:00.749 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:54:00.750 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:54:00.750 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:54:00.750 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:54:00.750 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:54:00.751 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:54:00.751 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.751 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:54:00.752 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.752 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:54:00.753 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:54:00.754 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:54:00.754 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:54:00.755 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:54:00.756 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:54:00.757 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:54:00.781 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:54:00.798 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:54:00.799 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:54:00.799 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:54:00.810 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:54:00.810 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:54:00.811 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.811 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:54:00.812 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:54:00.812 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:54:00.813 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:54:00.813 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:54:00.814 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:54:00.831 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:54:00.853 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:54:00.854 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:54:00.855 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:54:00.870 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:54:00.871 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:54:00.872 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:54:00.873 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:54:00.873 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:54:00.874 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.874 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:54:00.875 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:54:00.876 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:54:00.877 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:54:00.877 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:54:00.878 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:54:00.878 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:54:00.879 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:54:00.879 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:54:12.133 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552197239653,"returnTime":"1552197239724","returnData":null,"httpStatusCode":"200","timeConsuming":71}]]}
2019-03-10 13:54:34.263 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:54:34.264 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 13:54:34.267 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552197239653(Long), 200(String), 71(Integer), 1552197239724(String), null
2019-03-10 13:54:34.706 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239653' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239653' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552197239653' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239653' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239653' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 13:54:35.005 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197239858,"returnTime":"1552197240563","returnData":null,"httpStatusCode":"200","timeConsuming":705},{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240570,"returnTime":"1552197240665","returnData":null,"httpStatusCode":"200","timeConsuming":95},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240669,"returnTime":"1552197240761","returnData":null,"httpStatusCode":"200","timeConsuming":91},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240679,"returnTime":"1552197240761","returnData":null,"httpStatusCode":"200","timeConsuming":82},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240676,"returnTime":"1552197240768","returnData":null,"httpStatusCode":"200","timeConsuming":92},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240680,"returnTime":"1552197240773","returnData":null,"httpStatusCode":"200","timeConsuming":93},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552197240682,"returnTime":"1552197240785","returnData":null,"httpStatusCode":"200","timeConsuming":103},{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":1552197240773,"returnTime":"1552197240914","returnData":null,"httpStatusCode":"200","timeConsuming":141}]]}
2019-03-10 13:54:35.025 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:54:35.026 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 13:54:35.029 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197239858(Long), 200(String), 705(Integer), 1552197240563(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240570(Long), 200(String), 95(Integer), 1552197240665(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240669(Long), 200(String), 91(Integer), 1552197240761(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240679(Long), 200(String), 82(Integer), 1552197240761(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240676(Long), 200(String), 92(Integer), 1552197240768(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240680(Long), 200(String), 93(Integer), 1552197240773(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552197240682(Long), 200(String), 103(Integer), 1552197240785(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["5"],"type_dm":["null"]}(String), null, 1552197240773(Long), 200(String), 141(Integer), 1552197240914(String), null
2019-03-10 13:54:35.276 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239858' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239858' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552197239858' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239858' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197239858' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 13:55:14.372 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:14.388 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:55:14.388 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:14.389 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:14.407 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:14.407 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:14.408 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.409 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:14.410 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:14.411 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.412 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:14.412 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:14.413 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:14.447 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:55:14.475 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:55:14.476 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 13:55:14.476 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:55:14.493 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:55:14.494 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:55:14.495 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:55:14.496 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:55:14.496 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:55:14.497 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:55:14.497 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:55:14.498 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:55:14.498 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.499 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:55:14.499 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.531 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:14.533 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:55:14.536 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:55:14.536 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:14.537 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 13:55:14.545 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2bad5dbf]
2019-03-10 13:55:14.545 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:14.545 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:14.545 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@cc3c4d8]
2019-03-10 13:55:14.546 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:55:14.546 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:14.546 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:14.548 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:55:14.548 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:14.549 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@48b6e8cc]
2019-03-10 13:55:14.550 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7e39c82e]
2019-03-10 13:55:14.550 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:55:14.550 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 13:55:14.551 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:55:14.551 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 13:55:14.555 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:14.556 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:14.556 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.557 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:14.557 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:14.557 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.558 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:14.558 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:14.558 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:14.559 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:55:14.560 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:55:14.561 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:55:14.562 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:14.562 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:14.563 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:55:14.563 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.564 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:55:14.564 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:14.564 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:55:14.564 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:55:14.565 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:14.565 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:55:14.566 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:55:14.566 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.567 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:55:14.567 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@48b6e8cc]
2019-03-10 13:55:14.567 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:14.567 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:55:14.567 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:55:14.568 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:14.568 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:55:14.568 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:55:14.569 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:14.569 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:55:14.570 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:55:14.571 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:55:14.571 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:55:14.572 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:55:14.573 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:55:14.573 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:55:14.574 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:55:14.575 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:55:14.576 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:55:14.577 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.578 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.579 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:55:14.580 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:55:14.581 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:55:14.582 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:55:14.582 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:55:14.583 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:55:14.591 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:14.598 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:14.599 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:14.600 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:14.609 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:14.610 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:14.611 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.611 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:14.612 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:14.612 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:14.612 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:14.613 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:14.613 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:14.624 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 13:55:14.634 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:14.635 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 13:55:14.635 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 13:55:14.646 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:55:14.647 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 13:55:14.647 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:55:14.648 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:55:14.648 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 13:55:14.648 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.649 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:55:14.649 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:55:14.649 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 13:55:14.650 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:55:14.650 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:55:14.651 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:55:14.651 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 13:55:14.651 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:55:14.652 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:55:39.907 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:39.928 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:39.928 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:39.929 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:39.937 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:39.937 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:39.937 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:39.938 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:39.938 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:39.939 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:39.940 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:39.941 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:39.941 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:42.544 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:55:42.557 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:42.557 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 13:55:42.558 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:55:42.576 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:55:42.576 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:55:42.576 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:55:42.577 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:55:42.577 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:55:42.577 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:55:42.578 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:55:42.579 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:55:42.580 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:55:42.580 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:55:42.580 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:55:48.243 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:55:48.254 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:48.254 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:55:48.255 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:55:48.266 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:55:48.266 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:55:48.267 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:48.267 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:55:48.268 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:55:48.284 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:55:48.285 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 13:55:51.536 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:55:51.546 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:51.547 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:55:51.548 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:55:51.557 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:55:51.557 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:55:51.558 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:55:51.558 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:55:51.559 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:55:51.559 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:55:51.560 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:55:51.560 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:55:51.560 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:55:54.005 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:55:54.017 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:55:54.017 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:55:54.018 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:55:54.026 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:55:54.027 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:55:54.027 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:55:54.027 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:55:54.027 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:55:54.028 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:55:54.028 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:55:54.028 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:55:54.029 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:55:54.029 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:55:54.029 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:55:54.030 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:55:54.030 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:55:54.030 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:55:54.030 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:56:28.323 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:56:28.332 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:28.333 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:56:28.333 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:56:28.342 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:56:28.342 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:56:28.343 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:56:28.343 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:56:28.344 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:56:28.344 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:56:28.345 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:56:28.346 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:56:28.347 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:56:28.805 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 13:56:28.817 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:28.817 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 13:56:28.818 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 13:56:28.829 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 13:56:28.829 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 13:56:28.831 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 13:56:28.832 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 13:56:28.832 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 13:56:28.832 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 13:56:28.833 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 13:56:28.833 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 13:56:28.834 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 13:56:28.834 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 13:56:28.835 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 13:56:29.873 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 13:56:29.887 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:29.887 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 13:56:29.888 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 13:56:29.911 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 13:56:29.912 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 13:56:29.914 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 13:56:29.915 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 13:56:29.916 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 13:56:29.916 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 13:56:29.917 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 13:56:29.918 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 13:56:29.919 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 13:56:30.618 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 13:56:30.632 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:30.632 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 13:56:30.633 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 13:56:30.642 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 13:56:30.642 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 13:56:30.643 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 13:56:30.644 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 13:56:30.644 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 13:56:30.645 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 13:56:30.646 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 13:56:30.647 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 13:56:30.649 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 13:56:30.650 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 13:56:30.650 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 13:56:30.651 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 13:56:30.651 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 13:56:30.652 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 13:56:30.652 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 13:56:31.217 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 13:56:31.230 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:31.231 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 13:56:31.232 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 13:56:31.243 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 13:56:31.243 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 13:56:31.244 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@22f6b53a]
2019-03-10 13:56:31.244 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 13:56:31.246 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 13:56:31.254 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 13:56:31.254 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:06:12.593 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:06:12.731 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 17576 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:06:12.732 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:06:12.734 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:06:15.879 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:06:19.166 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:06:19.239 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:06:19.592 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:06:19.594 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:06:20.538 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:06:20.540 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:06:20.805 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:06:21.450 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:06:21.524 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:06:21.525 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:06:21.525 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:06:21.526 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:06:21.527 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:06:21.527 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:06:21.527 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:06:21.527 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:06:21.527 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:06:22.700 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:06:22.713 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:06:22.733 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:06:22.781 INFO  c.c.ServerApp - Started ServerApp in 11.031 seconds (JVM running for 12.034)
2019-03-10 14:06:38.434 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:06:42.487 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:06:42.652 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@713660db]
2019-03-10 14:06:42.654 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:06:42.676 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:06:42.705 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:06:42.706 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:06:42.708 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:06:42.708 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:06:42.709 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:06:42.710 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:06:42.711 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:06:42.711 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:06:42.712 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:07:20.308 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552197991812,"returnTime":"1552197992278","returnData":null,"httpStatusCode":"200","timeConsuming":462}]]}
2019-03-10 14:07:23.932 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:07:24.002 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@9994b5c]
2019-03-10 14:07:24.002 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:07:24.002 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:07:24.016 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:07:24.017 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:07:24.018 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:07:24.018 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:07:24.019 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:07:24.020 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:07:24.021 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:07:24.022 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:07:24.022 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:07:24.023 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:07:24.024 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:07:24.868 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@713660db]
2019-03-10 14:07:24.868 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:07:24.870 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552197991812(Long), 200(String), 462(Integer), 1552197992278(String), null
2019-03-10 14:07:25.158 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197991812' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197991812' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552197991812' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197991812' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552197991812' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:08:19.147 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:08:19.224 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 4540 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:08:19.225 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:08:19.225 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:08:20.606 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:08:23.147 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:08:23.186 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:08:23.424 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:08:23.425 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:08:24.159 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:08:24.161 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:08:24.323 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:08:24.854 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:08:24.907 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:08:24.908 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:08:24.909 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:08:25.723 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:08:25.735 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:08:25.750 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:08:25.786 INFO  c.c.ServerApp - Started ServerApp in 7.19 seconds (JVM running for 7.83)
2019-03-10 14:16:18.592 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:16:41.357 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:16:41.766 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:41.769 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:16:41.791 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:16:41.821 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:16:41.822 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:16:41.824 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:16:41.824 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:16:41.825 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:16:41.826 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:16:41.826 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:16:41.827 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:16:41.827 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:16:45.256 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552198167446,"returnTime":"1552198167748","returnData":null,"httpStatusCode":"200","timeConsuming":301}]]}
2019-03-10 14:16:45.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:16:46.079 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:46.079 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:16:46.080 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:16:46.092 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:16:46.092 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:16:46.093 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:16:46.094 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:16:46.095 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:16:46.096 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:16:46.097 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:16:46.098 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:16:46.099 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:16:46.100 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:16:46.100 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:16:46.938 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:46.939 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:16:46.941 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552198167446(Long), 200(String), 301(Integer), 1552198167748(String), null
2019-03-10 14:16:47.525 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198167446' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198167446' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552198167446' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198167446' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198167446' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:16:54.094 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198578222,"returnTime":"1552198601941","returnData":null,"httpStatusCode":"200","timeConsuming":23719}]]}
2019-03-10 14:16:54.119 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:54.119 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:16:54.120 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198578222(Long), 200(String), 23719(Integer), 1552198601941(String), null
2019-03-10 14:16:54.176 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198578222' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198578222' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552198578222' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198578222' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198578222' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:16:54.791 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:16:54.796 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:16:54.797 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:16:54.797 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:16:54.800 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:16:54.812 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:54.812 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:54.812 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:16:54.813 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:16:54.813 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:16:54.814 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:16:54.830 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:16:54.832 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:16:54.833 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:16:54.834 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:16:54.834 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:16:54.834 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.835 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:16:54.835 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:16:54.836 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:16:54.836 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:16:54.836 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:16:54.837 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.837 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:16:54.837 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:16:54.838 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:16:54.838 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:16:54.838 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:16:54.839 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:16:54.839 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:16:54.840 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:16:54.842 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:16:54.843 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:16:54.844 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:16:54.845 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:16:54.866 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:54.867 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:16:54.868 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:16:54.870 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:54.871 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:16:54.871 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:16:54.880 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:16:54.882 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:16:54.882 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:16:54.883 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:16:54.883 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:16:54.884 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:16:54.885 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2e8f3247]
2019-03-10 14:16:54.885 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:16:54.886 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:16:54.886 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:16:54.887 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:16:54.887 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:16:54.889 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:16:54.890 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:16:54.890 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:16:54.891 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:16:54.907 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:16:54.907 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:16:54.916 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:54.916 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:16:54.916 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:16:54.924 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:16:54.925 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:16:54.927 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.928 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:16:54.929 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:16:54.930 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.931 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:16:54.932 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:16:54.933 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:16:54.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:16:54.969 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:54.970 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:16:54.971 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:16:54.981 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:16:54.983 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:16:54.984 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.984 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:16:54.985 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:16:54.986 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:16:54.986 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:16:54.987 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:16:54.987 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:16:55.003 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:16:55.006 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198602890,"returnTime":"1552198606144","returnData":null,"httpStatusCode":"200","timeConsuming":3254},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198614780,"returnTime":"1552198614866","returnData":null,"httpStatusCode":"200","timeConsuming":86},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198614774,"returnTime":"1552198614868","returnData":null,"httpStatusCode":"200","timeConsuming":94},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198614784,"returnTime":"1552198614924","returnData":null,"httpStatusCode":"200","timeConsuming":140},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198614776,"returnTime":"1552198614927","returnData":null,"httpStatusCode":"200","timeConsuming":151},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198614782,"returnTime":"1552198614943","returnData":null,"httpStatusCode":"200","timeConsuming":161}]]}
2019-03-10 14:16:55.021 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2857ae72]
2019-03-10 14:16:55.021 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:16:55.021 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:16:55.033 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:16:55.034 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:16:55.034 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7a58fb3]
2019-03-10 14:16:55.035 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:16:55.035 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:16:55.038 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:16:55.039 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:16:55.040 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198602890(Long), 200(String), 3254(Integer), 1552198606144(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198614780(Long), 200(String), 86(Integer), 1552198614866(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198614774(Long), 200(String), 94(Integer), 1552198614868(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198614784(Long), 200(String), 140(Integer), 1552198614924(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198614776(Long), 200(String), 151(Integer), 1552198614927(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 1552198614782(Long), 200(String), 161(Integer), 1552198614943(String), null
2019-03-10 14:16:55.040 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:16:55.041 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:16:55.042 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:16:55.043 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:16:55.044 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:16:55.045 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:16:55.046 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:16:55.047 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:16:55.048 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:16:55.050 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:16:55.108 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198602890' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198602890' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552198602890' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198602890' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198602890' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:18:09.921 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":1552198614956,"returnTime":"1552198615091","returnData":null,"httpStatusCode":"200","timeConsuming":135}]]}
2019-03-10 14:18:17.479 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:18:17.524 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 14820 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:18:17.525 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:18:17.525 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:18:18.792 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:18:21.521 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:18:21.573 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:18:21.893 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:18:21.894 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:18:22.613 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:18:22.615 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:18:22.785 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:19:13.215 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:19:13.246 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 21232 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:19:13.247 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:19:13.247 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:19:14.584 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:19:17.270 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:19:17.312 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:19:17.521 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:19:17.522 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:19:18.123 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:19:18.125 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:19:18.269 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:19:35.744 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:19:35.813 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:19:35.814 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:19:36.681 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:19:36.693 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:19:36.707 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:19:36.752 INFO  c.c.ServerApp - Started ServerApp in 24.064 seconds (JVM running for 24.674)
2019-03-10 14:19:44.727 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:20:36.756 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552198781646,"returnTime":"1552198781678","returnData":null,"httpStatusCode":"200","timeConsuming":32}]]}
2019-03-10 14:20:40.141 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:20:42.367 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@9955a0b]
2019-03-10 14:20:42.369 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:20:42.386 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:20:42.420 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:20:42.421 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:20:42.423 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:20:42.424 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:20:42.425 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:20:42.425 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:20:42.426 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:20:42.426 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:20:42.427 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:20:45.143 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@9955a0b]
2019-03-10 14:20:45.144 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:20:45.148 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552198781646(Long), 200(String), 32(Integer), 1552198781678(String), null
2019-03-10 14:20:45.318 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198781646' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198781646' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552198781646' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198781646' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552198781646' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:21:00.736 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552198784656,"returnTime":"1552198842486","returnData":null,"httpStatusCode":"200","timeConsuming":57830},{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552198851618,"returnTime":"1552198851645","returnData":null,"httpStatusCode":"200","timeConsuming":27}]]}
2019-03-10 14:23:36.797 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:23:36.900 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 21352 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:23:36.901 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:23:36.902 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:23:39.293 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:23:42.506 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:23:42.548 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:23:42.822 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:23:42.823 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:23:43.560 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:23:43.562 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:23:43.725 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:23:44.212 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:23:44.272 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:23:44.273 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:23:44.273 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:23:44.273 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:23:44.273 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:23:44.273 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:23:44.274 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:23:44.274 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:23:44.274 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:23:44.274 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:23:44.274 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:23:44.275 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:23:44.275 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:23:44.275 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:23:44.275 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:23:44.275 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:23:45.157 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:23:45.205 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:23:45.231 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:23:45.331 INFO  c.c.ServerApp - Started ServerApp in 9.476 seconds (JVM running for 10.628)
2019-03-10 14:23:55.654 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:24:13.946 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552199032952,"returnTime":"1552199033303","returnData":null,"httpStatusCode":"200","timeConsuming":350}]]}
2019-03-10 14:24:20.332 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:24:24.231 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4ab2058]
2019-03-10 14:24:24.233 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:24:24.250 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:24:24.285 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:24:24.286 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:24:24.287 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:24:24.288 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:24:24.289 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:24:24.289 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:24:24.290 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:24:24.290 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:24:24.291 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:31:13.178 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:31:13.225 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 17356 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:31:13.226 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:31:13.226 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:31:14.560 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:31:18.698 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:31:18.736 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:31:18.968 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:31:18.969 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:31:19.753 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:31:19.755 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:31:19.920 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:31:20.463 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:31:20.516 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:31:20.517 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:31:20.517 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:31:20.517 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:31:20.517 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:31:20.517 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:31:20.518 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:31:20.519 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:31:20.519 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:31:20.519 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:31:21.392 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:31:21.403 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:31:21.419 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:31:21.460 INFO  c.c.ServerApp - Started ServerApp in 8.825 seconds (JVM running for 9.468)
2019-03-10 14:31:41.249 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:31:41.366 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:31:41.455 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4faf10ad]
2019-03-10 14:31:41.458 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:31:41.481 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:31:41.521 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:31:41.522 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:31:41.524 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:31:41.525 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:31:41.525 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:31:41.526 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:31:41.527 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:31:41.528 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:31:41.528 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.529 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:31:41.529 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.650 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:31:41.659 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:31:41.663 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:31:41.669 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:31:41.669 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:31:41.694 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4faf10ad]
2019-03-10 14:31:41.694 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@24de244a]
2019-03-10 14:31:41.695 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:31:41.695 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:31:41.696 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:31:41.696 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:31:41.706 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@6ea26ef5]
2019-03-10 14:31:41.707 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:31:41.707 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:31:41.711 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:31:41.712 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:31:41.713 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4faf10ad]
2019-03-10 14:31:41.714 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:31:41.714 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:31:41.716 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:31:41.717 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:31:41.718 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:31:41.719 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:31:41.720 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:31:41.721 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:31:41.724 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:31:41.726 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:31:41.729 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:31:41.729 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:31:41.729 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:31:41.730 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:31:41.730 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:31:41.731 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:31:41.732 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:31:41.732 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:31:41.733 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:31:41.733 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:31:41.734 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:31:41.734 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:31:41.735 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.735 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:31:41.736 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.736 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:31:41.738 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:31:41.740 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:31:41.740 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:31:41.741 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@7c15ef41]
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2ec4474a]
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:31:41.749 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:31:41.763 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:31:41.763 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:31:41.763 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:31:41.764 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:31:41.765 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.765 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.766 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:31:41.767 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:31:41.768 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:31:41.769 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:31:41.769 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.770 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.771 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:31:41.771 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:31:41.772 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:31:41.774 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:31:41.775 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:31:41.776 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:31:41.828 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:31:41.852 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2ec4474a]
2019-03-10 14:31:41.852 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:31:41.853 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:31:41.870 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:31:41.870 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:31:41.872 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.874 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:31:41.875 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:31:41.875 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:31:41.876 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:31:41.876 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:31:41.877 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:31:41.904 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:31:41.927 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@2ec4474a]
2019-03-10 14:31:41.927 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:31:41.928 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:31:41.950 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:31:41.951 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:31:41.951 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:31:41.952 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:31:41.952 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:31:41.953 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.953 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:31:41.954 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:31:41.954 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:31:41.955 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:31:41.956 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:31:41.957 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:31:41.958 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:31:41.958 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:31:41.958 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:31:51.328 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199035252,"returnTime":"1552199064373","returnData":null,"httpStatusCode":"200","timeConsuming":29121},{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501180,"returnTime":"1552199501627","returnData":null,"httpStatusCode":"200","timeConsuming":447},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501639,"returnTime":"1552199501761","returnData":null,"httpStatusCode":"200","timeConsuming":121},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501649,"returnTime":"1552199501765","returnData":null,"httpStatusCode":"200","timeConsuming":116},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501652,"returnTime":"1552199501783","returnData":null,"httpStatusCode":"200","timeConsuming":131},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501635,"returnTime":"1552199501813","returnData":null,"httpStatusCode":"200","timeConsuming":178},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199501643,"returnTime":"1552199501813","returnData":null,"httpStatusCode":"200","timeConsuming":170},{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":1552199501824,"returnTime":"1552199502023","returnData":null,"httpStatusCode":"200","timeConsuming":199}]]}
2019-03-10 14:32:36.383 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:32:36.443 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 6100 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:32:36.443 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:32:36.444 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:32:38.392 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:32:42.145 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:32:42.192 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:32:42.502 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:32:42.504 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:32:43.545 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:32:43.548 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:32:43.788 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:32:44.504 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:32:44.583 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:32:44.583 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:32:44.583 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:32:44.584 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:32:44.585 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:32:44.585 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:32:44.585 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:32:44.585 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:32:45.823 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:32:45.843 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:32:45.867 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:32:45.932 INFO  c.c.ServerApp - Started ServerApp in 10.282 seconds (JVM running for 11.217)
2019-03-10 14:32:52.226 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:32:55.588 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:32:56.950 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a2079c8]
2019-03-10 14:32:56.953 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:32:56.972 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:32:57.141 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:32:57.142 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:32:57.144 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:32:57.145 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:32:57.145 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:32:57.146 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:32:57.147 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:32:57.147 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:32:57.148 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:33:10.028 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":1552199568978,"returnTime":"1552199569021","returnData":null,"httpStatusCode":"200","timeConsuming":43}]]}
2019-03-10 14:34:38.183 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:35:15.229 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a9cae86]
2019-03-10 14:35:15.230 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:35:15.231 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:35:15.260 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:35:15.261 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:35:15.262 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:35:15.263 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:35:15.265 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:35:15.265 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:35:15.266 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:35:15.267 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:35:15.267 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:35:15.268 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:35:15.269 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:35:16.247 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a2079c8]
2019-03-10 14:35:16.248 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:35:16.250 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 1552199568978(Long), 200(String), 43(Integer), 1552199569021(String), null
2019-03-10 14:35:16.497 ERROR c.c.c.MineController - 系统异常,{}
java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codinggyd.core.MineServiceExecuter.invoke(MineServiceExecuter.java:71)
	at com.codinggyd.controller.MineController.run(MineController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552199568978' for column 'time' at row 1
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552199568978' for column 'time' at row 1
; SQL []; Data truncation: Incorrect datetime value: '1552199568978' for column 'time' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552199568978' for column 'time' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:102)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:399)
	at com.sun.proxy.$Proxy41.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:253)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:79)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)
	at com.sun.proxy.$Proxy81.addLogger(Unknown Source)
	at com.codinggyd.service.impl.LoggerServiceImpl.saveLoggerInfo(LoggerServiceImpl.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy82.saveLoggerInfo(Unknown Source)
	... 63 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '1552199568978' for column 'time' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:970)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:387)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:42)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)
	... 82 common frames omitted
2019-03-10 14:35:28.770 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:35:32.811 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a2079c8]
2019-03-10 14:35:32.812 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:35:32.813 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:35:32.832 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:35:32.832 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:35:32.833 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:35:32.834 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:35:32.834 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:35:32.835 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:35:32.835 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:35:32.836 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:35:32.837 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:35:33.366 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":1552199572152,"returnTime":"1552199577227","returnData":null,"httpStatusCode":"200","timeConsuming":5075}]]}
2019-03-10 14:36:09.588 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:36:10.885 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a9cae86]
2019-03-10 14:36:10.886 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:36:10.887 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:36:10.903 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:36:10.903 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:36:10.905 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@3a9cae86]
2019-03-10 14:36:10.905 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:36:10.905 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:36:10.917 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:36:10.918 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:40:27.931 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:40:28.167 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 12560 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:40:28.167 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:40:28.168 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:40:30.922 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:40:33.847 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:40:33.890 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:40:34.150 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:40:34.152 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:40:34.885 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:40:34.888 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:40:35.070 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:40:35.578 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:40:35.631 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:40:35.632 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:40:35.633 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:40:36.454 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:40:36.468 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:40:36.484 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:40:36.524 INFO  c.c.ServerApp - Started ServerApp in 9.329 seconds (JVM running for 10.244)
2019-03-10 14:40:48.855 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:40:49.012 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:40:49.186 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:40:49.191 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:40:49.217 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:40:49.269 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:40:49.270 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:40:49.274 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.275 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:40:49.276 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:40:49.277 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.277 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:40:49.278 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:40:49.279 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:40:49.440 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:40:49.459 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:40:49.460 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:40:49.460 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:40:49.478 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:40:49.479 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:40:49.480 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:40:49.480 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:40:49.481 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:40:49.482 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:40:49.483 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:40:49.484 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:40:49.485 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.486 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:40:49.487 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.593 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:40:49.600 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:40:49.600 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:40:49.600 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:40:49.610 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:40:49.612 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:40:49.613 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:40:49.614 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:40:49.615 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:40:49.615 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:40:49.615 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:40:49.616 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:40:49.617 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:40:49.619 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:40:49.619 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:40:49.620 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:40:49.620 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:40:49.621 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:40:49.621 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:40:49.622 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:40:49.626 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:40:49.627 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:40:49.627 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.628 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:40:49.629 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:40:49.629 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.629 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:40:49.630 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:40:49.630 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:40:49.631 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:40:49.631 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:40:49.632 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:40:49.632 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:40:49.634 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:40:49.635 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:40:49.636 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:40:49.637 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:40:49.638 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:40:49.640 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:40:49.640 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:40:49.640 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:40:49.641 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:40:49.641 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:40:49.642 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.642 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:40:49.642 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:40:49.642 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:40:49.643 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:40:49.643 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:40:49.643 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:40:49.643 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:40:49.644 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:40:49.644 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:40:49.645 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:40:49.645 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:40:49.645 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.646 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:40:49.646 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:40:49.647 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:40:49.647 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:40:49.647 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:40:49.648 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:40:49.648 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.649 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:40:49.650 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.652 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:40:49.655 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:40:49.656 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:40:49.658 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:40:49.666 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:40:49.667 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:40:49.696 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:40:49.712 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:40:49.712 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:40:49.713 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:40:49.726 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:40:49.727 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:40:49.727 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.728 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:40:49.728 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:40:49.728 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:40:49.729 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:40:49.729 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:40:49.730 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:40:49.749 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:40:49.772 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:40:49.772 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:40:49.773 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:40:49.794 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:40:49.795 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:40:49.795 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:40:49.796 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:40:49.796 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:40:49.797 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.798 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:40:49.799 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:40:49.801 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:40:49.802 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:40:49.803 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:40:49.804 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:40:49.806 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:40:49.806 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:40:49.807 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:41:47.038 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","uri":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:48","returnTime":"1552200048411","returnData":null,"httpStatusCode":"200","timeConsuming":389},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:48","returnTime":"1552200049419","returnData":null,"httpStatusCode":"200","timeConsuming":950},{"id":null,"ip":"127.0.0.1","uri":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049570","returnData":null,"httpStatusCode":"200","timeConsuming":143},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049658","returnData":null,"httpStatusCode":"200","timeConsuming":81},{"id":null,"ip":"127.0.0.1","uri":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049662","returnData":null,"httpStatusCode":"200","timeConsuming":76},{"id":null,"ip":"127.0.0.1","uri":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049669","returnData":null,"httpStatusCode":"200","timeConsuming":83},{"id":null,"ip":"127.0.0.1","uri":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049691","returnData":null,"httpStatusCode":"200","timeConsuming":95},{"id":null,"ip":"127.0.0.1","uri":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049695","returnData":null,"httpStatusCode":"200","timeConsuming":112},{"id":null,"ip":"127.0.0.1","uri":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":"2019-03-10 14:40:49","returnTime":"1552200049857","returnData":null,"httpStatusCode":"200","timeConsuming":174}]]}
2019-03-10 14:41:47.094 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:41:47.095 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:41:47.099 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), null, null, GET(String), {}(String), null, 2019-03-10 14:40:48(String), 200(String), 389(Integer), 1552200048411(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:48(String), 200(String), 950(Integer), 1552200049419(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 143(Integer), 1552200049570(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 81(Integer), 1552200049658(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 76(Integer), 1552200049662(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 83(Integer), 1552200049669(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 95(Integer), 1552200049691(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:40:49(String), 200(String), 112(Integer), 1552200049695(String), null, 127.0.0.1(String), null, XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["5"],"type_dm":["null"]}(String), null, 2019-03-10 14:40:49(String), 200(String), 174(Integer), 1552200049857(String), null
2019-03-10 14:42:59.882 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:42:59.908 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:42:59.910 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:42:59.910 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:42:59.934 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:42:59.935 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:42:59.936 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:42:59.936 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:42:59.937 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:42:59.937 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:42:59.937 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:42:59.938 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:42:59.938 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:02.700 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:43:02.721 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:02.721 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:43:02.722 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:43:02.745 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:02.745 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:02.746 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:02.747 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:02.747 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:02.748 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:02.748 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:02.749 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:02.749 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.749 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:02.750 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.787 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:02.793 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:43:02.795 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:43:02.796 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:02.798 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:43:02.808 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:02.808 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:02.809 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:43:02.809 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:43:02.809 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:02.810 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:43:02.810 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:43:02.810 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:02.811 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:43:02.811 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:43:02.812 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:43:02.812 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:43:02.812 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:02.813 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:43:02.813 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:02.820 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:43:02.820 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:43:02.821 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:43:02.822 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:43:02.822 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:43:02.823 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:02.823 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:43:02.823 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:02.824 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:43:02.824 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.825 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:02.825 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:43:02.826 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:02.827 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.827 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:02.827 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:43:02.827 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:02.827 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:02.828 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:43:02.828 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:02.828 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.829 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:43:02.829 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:02.829 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:02.829 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:02.830 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:43:02.830 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:02.830 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:02.830 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:43:02.831 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:43:02.831 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:02.831 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.831 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:43:02.832 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:43:02.832 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:02.832 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:02.833 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:43:02.833 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:02.833 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:02.834 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:43:02.834 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.834 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:02.835 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:43:02.835 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.835 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:43:02.836 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:02.836 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:43:02.837 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:02.837 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:43:02.837 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:02.839 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:02.856 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:02.868 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:02.868 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:02.869 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:02.883 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:02.883 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:02.884 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.884 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:02.884 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:02.885 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:02.885 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:02.885 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:02.885 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:02.899 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:43:02.911 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:02.912 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:43:02.912 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:43:02.934 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:02.935 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:02.936 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:02.937 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:02.938 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:02.939 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.939 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:02.940 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:02.941 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:02.942 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:02.943 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:02.944 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:02.945 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:43:02.945 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:02.946 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:12.242 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:12.265 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:12.265 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:12.265 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:12.296 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:12.296 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:12.297 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:12.297 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:12.298 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:12.298 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:12.298 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:12.299 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:12.299 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:12.322 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:43:12.347 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:12.347 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:43:12.347 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:43:12.371 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:12.371 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:12.372 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:12.372 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:12.372 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:12.373 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:12.373 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:12.373 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:12.374 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:12.374 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:12.374 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:12.414 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:12.417 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:43:12.417 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:43:12.448 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:12.448 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:43:12.448 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:12.448 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:12.449 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:43:12.449 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:43:12.449 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:12.449 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:43:12.449 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:43:12.464 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:12.464 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:43:12.465 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:12.465 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:43:12.466 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:12.466 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:43:12.466 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:12.466 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:43:12.467 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:43:12.467 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:12.468 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:43:12.468 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:43:12.469 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:12.471 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:43:12.471 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:12.471 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:12.472 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:43:12.472 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:43:12.473 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:12.473 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:43:12.473 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:43:12.474 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:12.474 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:43:12.476 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:43:12.477 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:43:12.478 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:43:12.478 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:43:12.479 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:43:12.480 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:43:12.492 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:43:12.493 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:43:14.287 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:14.310 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:14.312 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:14.314 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:14.340 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:14.342 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:14.344 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.344 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:14.345 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:14.346 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.347 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:14.347 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:14.348 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:14.383 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:43:14.406 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:14.406 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:43:14.407 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:43:14.430 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:14.431 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:14.431 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:14.431 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:14.433 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:14.433 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:14.433 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:14.434 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:14.434 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.435 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:14.435 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.462 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:14.467 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:43:14.470 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:14.471 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:43:14.471 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:43:14.482 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:43:14.483 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:14.483 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:43:14.483 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:43:14.483 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:14.483 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:43:14.483 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:14.483 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:43:14.483 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:43:14.484 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:14.484 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:43:14.484 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:14.484 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:43:14.484 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:43:14.485 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:14.493 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:43:14.494 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:43:14.494 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:43:14.494 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:43:14.495 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:43:14.495 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:43:14.495 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:43:14.495 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:43:14.496 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:43:14.496 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:43:14.496 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:43:14.497 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:43:14.497 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:14.497 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:14.498 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:14.498 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:43:14.498 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:43:14.498 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:14.498 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:14.499 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:14.499 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:43:14.500 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:14.500 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.500 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.500 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:43:14.501 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:14.501 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:14.501 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:14.502 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:43:14.502 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:14.502 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:14.503 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:14.503 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:43:14.503 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.503 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.504 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.504 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:43:14.504 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.504 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:14.505 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:14.505 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:43:14.505 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:14.505 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:14.506 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:14.506 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:14.506 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:14.507 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:14.507 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:14.508 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:14.510 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:43:14.510 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:43:14.533 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:14.554 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:14.554 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:14.554 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:14.568 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:14.569 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:14.569 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.569 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:14.570 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:14.570 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:14.570 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:14.571 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:14.571 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:14.590 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:43:14.610 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:14.611 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:43:14.611 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:43:14.635 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:14.636 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:14.637 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:14.637 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:14.637 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:14.638 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.638 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:14.638 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:14.639 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:14.639 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:14.639 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:14.639 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:14.640 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:43:14.640 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:14.640 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:44.403 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:44.425 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:44.426 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:44.426 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:44.449 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:44.449 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:44.449 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.450 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:44.450 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:44.450 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.450 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:44.451 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:44.451 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:44.477 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:43:44.500 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:44.500 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:43:44.500 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:43:44.543 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:44.544 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:43:44.544 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:44.545 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:44.545 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:44.545 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:44.546 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:44.546 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:44.546 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.547 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:44.547 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.582 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:44.587 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:43:44.588 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:43:44.590 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:44.591 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:43:44.598 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:43:44.598 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:43:44.598 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:43:44.598 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:44.599 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:43:44.599 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:44.601 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:44.601 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:43:44.601 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:43:44.602 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:43:44.602 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:43:44.602 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:43:44.603 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:43:44.604 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:44.604 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:44.608 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:44.609 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:44.610 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.610 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:44.610 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:44.610 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.611 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:44.611 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:44.611 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:44.612 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:44.612 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:43:44.613 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:43:44.613 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:44.613 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:43:44.613 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:43:44.614 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:44.614 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:43:44.614 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:43:44.614 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:44.615 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:43:44.615 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:43:44.615 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:44.615 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:43:44.615 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:43:44.616 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.616 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:43:44.617 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.617 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:43:44.617 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:44.617 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:44.618 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:43:44.618 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:44.618 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:44.618 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:43:44.619 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.619 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:44.619 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:43:44.620 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:44.620 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:44.621 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:43:44.622 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:44.624 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:43:44.624 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.625 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:43:44.626 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:44.627 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:43:44.627 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:44.628 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:43:44.628 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:44.628 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:43:44.629 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:43:44.639 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:43:44.647 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:43:44.648 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:43:44.649 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:43:44.657 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:43:44.657 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:43:44.658 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.658 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:43:44.658 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:43:44.658 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:43:44.659 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:43:44.660 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:43:44.660 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:43:44.671 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:43:44.678 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:43:44.679 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:43:44.679 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:43:44.688 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:43:44.688 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:43:44.689 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:43:44.689 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:43:44.689 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:43:44.689 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.690 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:43:44.690 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:43:44.690 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:43:44.690 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:43:44.691 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:43:44.691 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:43:44.691 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:43:44.691 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:43:44.692 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:44:13.876 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:13.885 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:44:13.886 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:13.886 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:13.895 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:13.895 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:13.895 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:13.896 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:13.896 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:13.896 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:13.897 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:13.897 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:13.897 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:13.917 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:44:13.928 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:44:13.929 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:44:13.929 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:44:13.938 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:44:13.939 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:44:13.939 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:44:13.939 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:44:13.940 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:44:13.940 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:44:13.940 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:44:13.940 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:44:13.941 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:44:13.941 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:44:13.941 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:44:13.963 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:13.968 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:44:13.972 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:44:13.984 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:44:13.984 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:13.985 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:13.987 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:13.988 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:44:13.989 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:44:13.990 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:44:13.991 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:44:13.993 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:44:13.995 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:13.997 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:13.997 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:13.998 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:13.999 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:14.000 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.000 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:14.001 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:14.002 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:14.005 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:44:14.006 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:44:14.007 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:44:14.007 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:44:14.008 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:44:14.009 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:44:14.009 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:44:14.010 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:44:14.011 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:44:14.012 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:44:14.013 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:44:14.014 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:44:14.015 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:44:14.016 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.039 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:44:14.040 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:44:14.040 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:44:14.041 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:44:14.041 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:44:14.042 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:44:14.068 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:44:14.069 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:44:14.584 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:14.616 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.616 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:14.617 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:14.652 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:14.652 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:14.652 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.653 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:14.653 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:14.653 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.653 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:14.654 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:14.654 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:14.682 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:44:14.699 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.699 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:44:14.699 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:44:14.718 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:44:14.718 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:44:14.718 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:44:14.719 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:44:14.719 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:44:14.719 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:44:14.719 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:44:14.719 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:44:14.720 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.720 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:44:14.720 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.745 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:14.748 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:44:14.750 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:44:14.752 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:14.753 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:44:14.760 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:44:14.760 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:44:14.760 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@25b61949]
2019-03-10 14:44:14.761 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:44:14.762 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:44:14.762 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@516c4c2a]
2019-03-10 14:44:14.762 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:44:14.762 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.762 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:44:14.763 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:44:14.763 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:14.763 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:44:14.763 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:14.764 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:14.765 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:14.772 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:44:14.773 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:44:14.774 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:44:14.775 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:44:14.775 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:44:14.776 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:44:14.777 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:44:14.777 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:44:14.778 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:44:14.779 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:44:14.779 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:14.779 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:44:14.780 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:44:14.780 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@79301fec]
2019-03-10 14:44:14.780 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:14.781 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:14.781 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:44:14.781 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:44:14.782 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:44:14.782 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.782 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:14.783 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:44:14.783 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:44:14.784 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:44:14.784 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:14.784 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.785 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.785 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:44:14.786 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:14.786 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:14.787 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.787 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:44:14.787 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.787 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:14.788 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:44:14.788 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:44:14.788 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:14.789 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.789 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:44:14.789 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:44:14.790 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:14.790 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:14.790 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:44:14.790 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:44:14.791 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:14.791 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:14.791 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:44:14.791 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:44:14.792 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:14.795 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:44:14.795 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:44:14.819 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:14.840 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.840 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:14.841 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:14.869 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:14.870 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:14.870 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.870 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:14.870 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:14.870 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:14.871 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:14.871 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:14.871 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:44:14.886 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:44:14.903 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:14.904 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:44:14.904 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:44:14.918 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:44:14.918 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:44:14.919 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:44:14.919 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:44:14.919 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:44:14.919 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.919 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:44:14.920 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:44:14.920 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:44:14.920 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:44:14.920 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:44:14.920 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:44:14.921 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:44:14.921 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:44:14.921 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:44:29.325 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:44:29.346 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@5dd4d9b1]
2019-03-10 14:44:29.346 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:44:29.346 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:44:29.371 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:44:29.372 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:44:29.372 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:44:29.372 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:44:29.372 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:44:29.372 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:44:29.373 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:44:29.373 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:44:29.373 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:45:54.174 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-03-10 14:45:54.324 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 2864 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-03-10 14:45:54.324 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-03-10 14:45:54.325 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-03-10 14:45:57.255 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-03-10 14:45:59.926 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-03-10 14:45:59.966 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-03-10 14:46:00.509 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-03-10 14:46:00.511 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-03-10 14:46:01.768 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-03-10 14:46:01.770 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-03-10 14:46:01.982 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-03-10 14:46:02.637 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-03-10 14:46:02.697 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-03-10 14:46:02.697 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-03-10 14:46:02.698 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-03-10 14:46:02.698 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-03-10 14:46:02.698 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-03-10 14:46:02.698 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-03-10 14:46:02.698 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_SEARCH
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_PRAISE
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_KEYWORDS
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-03-10 14:46:02.699 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-03-10 14:46:02.700 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-03-10 14:46:02.700 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SAVE_LOGGER
2019-03-10 14:46:02.700 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-03-10 14:46:03.806 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-03-10 14:46:03.823 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-03-10 14:46:03.846 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-03-10 14:46:03.900 INFO  c.c.ServerApp - Started ServerApp in 10.722 seconds (JVM running for 12.04)
2019-03-10 14:46:17.130 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-10 14:46:17.252 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:17.702 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:46:17.704 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:17.729 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:17.760 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:17.761 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:17.763 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:17.764 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:17.765 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:17.766 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:17.767 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:17.767 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:17.768 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:17.909 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:46:17.933 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:46:17.933 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:46:17.933 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:46:17.948 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:17.948 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:46:17.949 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:17.949 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:17.950 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:17.951 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:46:17.951 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:17.952 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:17.953 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:17.953 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:46:17.954 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:18.016 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:18.021 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:46:18.022 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:46:18.026 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:46:18.026 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:18.035 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:46:18.035 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:18.036 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:18.038 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:46:18.038 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:46:18.039 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:46:18.041 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:18.041 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:46:18.042 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:46:18.044 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:18.044 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:46:18.045 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:46:18.045 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:18.045 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:46:18.045 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:18.047 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:46:18.048 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:18.048 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:46:18.049 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:18.050 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.050 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:46:18.051 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:18.051 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:46:18.052 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:18.052 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:46:18.053 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.054 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:18.055 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:18.055 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:46:18.056 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:18.056 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:46:18.057 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:46:18.058 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:46:18.059 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:46:18.060 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:18.061 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:18.061 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:46:18.061 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:46:18.061 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.062 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:46:18.062 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:46:18.062 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:18.063 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:18.063 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:46:18.065 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:18.065 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:46:18.066 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:46:18.066 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.066 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:18.067 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:46:18.067 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:18.068 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:18.069 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:46:18.069 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:18.070 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:46:18.071 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:46:18.071 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:18.072 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:18.073 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:46:18.075 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:18.075 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:46:18.077 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:46:18.079 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:18.082 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:46:18.083 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:18.084 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:18.127 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:18.144 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:18.144 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:18.145 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:18.155 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:18.156 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:18.156 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.157 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:18.157 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:18.158 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:18.159 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:18.160 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:18.160 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:18.176 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:46:18.208 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:18.208 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:46:18.209 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:46:18.227 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:18.228 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:46:18.228 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:18.229 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:18.230 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:46:18.231 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:18.231 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:18.232 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:18.232 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:46:18.233 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:18.234 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:18.235 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:46:18.235 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:46:18.236 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:46:18.236 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:46:22.209 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","url":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:16","returnTime":"1552200376527","returnData":null,"httpStatusCode":"200","timeConsuming":481},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:16","returnTime":"1552200377892","returnData":null,"httpStatusCode":"200","timeConsuming":1298},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:17","returnTime":"1552200377994","returnData":null,"httpStatusCode":"200","timeConsuming":95},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378078","returnData":null,"httpStatusCode":"200","timeConsuming":78},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378081","returnData":null,"httpStatusCode":"200","timeConsuming":75},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378091","returnData":null,"httpStatusCode":"200","timeConsuming":81},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378107","returnData":null,"httpStatusCode":"200","timeConsuming":100},{"id":null,"ip":"127.0.0.1","url":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378120","returnData":null,"httpStatusCode":"200","timeConsuming":110},{"id":null,"ip":"127.0.0.1","url":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":"2019-03-10 14:46:18","returnTime":"1552200378278","returnData":null,"httpStatusCode":"200","timeConsuming":160}]]}
2019-03-10 14:46:22.257 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:22.258 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:46:22.261 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), /(String), null, GET(String), {}(String), null, 2019-03-10 14:46:16(String), 200(String), 481(Integer), 1552200376527(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:16(String), 200(String), 1298(Integer), 1552200377892(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:17(String), 200(String), 95(Integer), 1552200377994(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:18(String), 200(String), 78(Integer), 1552200378078(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:18(String), 200(String), 75(Integer), 1552200378081(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:18(String), 200(String), 81(Integer), 1552200378091(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:18(String), 200(String), 100(Integer), 1552200378107(String), null, 127.0.0.1(String), /latest_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:18(String), 200(String), 110(Integer), 1552200378120(String), null, 127.0.0.1(String), /article_page(String), XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["5"],"type_dm":["null"]}(String), null, 2019-03-10 14:46:18(String), 200(String), 160(Integer), 1552200378278(String), null
2019-03-10 14:46:55.322 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:55.340 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:55.341 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:55.341 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:55.361 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:55.361 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:55.362 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.362 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:55.362 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:55.363 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.363 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:55.364 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:55.364 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:55.390 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:46:55.410 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:55.410 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:46:55.411 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:46:55.430 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:55.431 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:46:55.432 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:55.433 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:55.433 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:55.434 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:46:55.434 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:55.435 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:55.435 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.436 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:46:55.436 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.459 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:55.467 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:46:55.468 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:55.470 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[10]}
2019-03-10 14:46:55.470 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:46:55.478 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@55838475]
2019-03-10 14:46:55.478 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:55.479 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:55.480 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:55.481 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:46:55.481 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:46:55.482 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:46:55.482 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:46:55.483 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:46:55.483 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:46:55.483 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:46:55.483 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:55.484 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-03-10 14:46:55.484 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:55.485 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 10(Integer)
2019-03-10 14:46:55.529 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:55.529 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:55.530 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:46:55.530 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:55.530 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:55.530 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:46:55.531 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.531 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.532 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:55.532 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:46:55.532 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:46:55.533 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:55.533 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:55.534 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:46:55.534 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:46:55.534 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:55.534 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.535 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:55.535 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:55.535 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:46:55.535 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.536 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:55.536 DEBUG c.c.m.A.findLatestArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:46:55.536 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:46:55.536 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:46:55.537 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:55.537 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:55.537 DEBUG c.c.m.A.findLatestArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:55.537 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:46:55.538 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:46:55.538 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:55.538 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:55.539 DEBUG c.c.m.A.findLatestArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:55.539 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:46:55.539 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:55.540 DEBUG c.c.m.A.findLatestArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:46:55.540 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:46:55.541 DEBUG c.c.m.A.findLatestArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.541 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:46:55.541 DEBUG c.c.m.A.findLatestArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.541 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:46:55.542 DEBUG c.c.m.A.findLatestArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:55.542 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:46:55.542 DEBUG c.c.m.A.findLatestArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:46:55.542 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:46:55.542 DEBUG c.c.m.A.findLatestArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:55.543 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:46:55.543 DEBUG c.c.m.A.findLatestArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:55.543 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:46:55.552 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:46:55.552 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:46:55.570 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:55.592 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:55.592 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:55.593 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:55.609 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:55.611 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:55.612 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.613 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:55.613 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:55.614 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:55.615 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:55.616 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:55.617 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:55.643 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null,null]}
2019-03-10 14:46:55.668 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:55.669 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-03-10 14:46:55.670 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-03-10 14:46:55.691 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:46:55.692 DEBUG c.c.m.A.findArticle - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术
2019-03-10 14:46:55.693 DEBUG c.c.m.A.findArticle - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:46:55.693 DEBUG c.c.m.A.findArticle - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:46:55.694 DEBUG c.c.m.A.findArticle - <==        Row: 97, 在SQLite中如何使用事务, 记录在SQLite中如何使用事务, 2019-03-04 21:23:11, 3, null, 0, 3, 移动开发
2019-03-10 14:46:55.694 DEBUG c.c.m.A.findArticle - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.695 DEBUG c.c.m.A.findArticle - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:46:55.695 DEBUG c.c.m.A.findArticle - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:46:55.695 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2019-03-04 21:07:04, 3, null, 0, 1, 后端技术
2019-03-10 14:46:55.696 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:46:55.696 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:46:55.696 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:46:55.696 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2019-03-04 21:05:00, 1, null, 0, 7, 杂七杂八
2019-03-10 14:46:55.697 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:46:55.697 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:46:58.819 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["100"]}
2019-03-10 14:46:58.844 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:58.844 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-03-10 14:46:58.844 DEBUG c.c.m.A.findDetailById - ==> Parameters: 100(String)
2019-03-10 14:46:58.866 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms, htmlContent, content
2019-03-10 14:46:58.867 DEBUG c.c.m.A.findDetailById - <==        Row: 100, 《深入理解JAVA虚拟机》-JAVA内存区域与内存溢出异常, 记录博主在学习书籍《深入理解JAVA虚拟机》时做的读书笔记, 2019-03-10 12:07:20, 2, null, 0, 1, 后端技术, <p><img src="http://47.111.1.180/images/20190310/40aad9c69573457a98c9c043867e2a0f.png" alt="JAVA内存区域与内存溢出异常" title="JAVA内存区域与内存溢出异常"></p>
, ![JAVA内存区域与内存溢出异常](http://47.111.1.180/images/20190310/40aad9c69573457a98c9c043867e2a0f.png "JAVA内存区域与内存溢出异常")
2019-03-10 14:46:58.868 DEBUG c.c.m.A.queryRelation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:58.869 DEBUG c.c.m.A.queryRelation - ==>  Preparing: SELECT A.id,A.articleId,B.id keyWordId,B.name keyName,A.updatetime FROM mine_article_keyword_relation A INNER JOIN mine_keywords B ON A.keyId = B.id WHERE A.articleId=? 
2019-03-10 14:46:58.870 DEBUG c.c.m.A.queryRelation - ==> Parameters: 100(Integer)
2019-03-10 14:46:58.893 DEBUG c.c.m.A.queryRelation - <==    Columns: id, articleId, id, name, updatetime
2019-03-10 14:46:58.894 DEBUG c.c.m.A.queryRelation - <==        Row: 117, 100, 26, jvm, 2019-03-10 12:07:20
2019-03-10 14:46:58.895 DEBUG c.c.m.A.queryRelation - <==        Row: 118, 100, 5, java, 2019-03-10 12:07:20
2019-03-10 14:46:58.917 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_UPDATE_READ_COUNT","params":[100]}
2019-03-10 14:46:58.959 DEBUG c.c.m.A.updateArticleReadCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:58.960 DEBUG c.c.m.A.updateArticleReadCount - ==>  Preparing: UPDATE mine_articles SET readingcount = readingcount+1 WHERE id=? 
2019-03-10 14:46:58.960 DEBUG c.c.m.A.updateArticleReadCount - ==> Parameters: 100(Integer)
2019-03-10 14:46:59.922 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:46:59.934 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:59.935 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:46:59.935 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:46:59.949 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:46:59.950 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:46:59.951 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:46:59.951 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:46:59.951 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:46:59.951 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:46:59.952 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:46:59.952 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:46:59.952 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:46:59.977 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:46:59.990 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:46:59.990 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:46:59.990 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:47:00.008 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:47:00.008 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","url":"/","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415269","returnData":null,"httpStatusCode":"200","timeConsuming":42},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415379","returnData":null,"httpStatusCode":"200","timeConsuming":63},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415451","returnData":null,"httpStatusCode":"200","timeConsuming":65},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415553","returnData":null,"httpStatusCode":"200","timeConsuming":98},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415553","returnData":null,"httpStatusCode":"200","timeConsuming":91},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415557","returnData":null,"httpStatusCode":"200","timeConsuming":97},{"id":null,"ip":"127.0.0.1","url":"/latest_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415567","returnData":null,"httpStatusCode":"200","timeConsuming":105},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415572","returnData":null,"httpStatusCode":"200","timeConsuming":114},{"id":null,"ip":"127.0.0.1","url":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"5\"],\"type_dm\":[\"null\"]}","sessionId":null,"time":"2019-03-10 14:46:55","returnTime":"1552200415726","returnData":null,"httpStatusCode":"200","timeConsuming":162},{"id":null,"ip":"127.0.0.1","url":"/article_dt/100","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:58","returnTime":"1552200419851","returnData":null,"httpStatusCode":"200","timeConsuming":1040},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:59","returnTime":"1552200419970","returnData":null,"httpStatusCode":"200","timeConsuming":52}]]}
2019-03-10 14:47:00.010 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:47:00.010 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:47:00.012 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:47:00.013 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:47:00.013 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:47:00.014 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:47:00.016 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:47:00.016 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:47:00.017 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:47:00.017 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:47:00.036 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:00.037 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:47:00.043 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), /(String), null, GET(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 42(Integer), 1552200415269(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 63(Integer), 1552200415379(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 65(Integer), 1552200415451(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 98(Integer), 1552200415553(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 91(Integer), 1552200415553(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 97(Integer), 1552200415557(String), null, 127.0.0.1(String), /latest_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 105(Integer), 1552200415567(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:55(String), 200(String), 114(Integer), 1552200415572(String), null, 127.0.0.1(String), /article_page(String), XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["5"],"type_dm":["null"]}(String), null, 2019-03-10 14:46:55(String), 200(String), 162(Integer), 1552200415726(String), null, 127.0.0.1(String), /article_dt/100(String), null, GET(String), {}(String), null, 2019-03-10 14:46:58(String), 200(String), 1040(Integer), 1552200419851(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:59(String), 200(String), 52(Integer), 1552200419970(String), null
2019-03-10 14:47:00.047 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:00.051 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:47:00.055 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:47:00.060 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:00.061 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:47:00.061 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:47:00.063 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:00.063 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:00.064 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:00.066 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:00.067 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:47:00.067 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:47:00.069 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:47:00.070 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:47:00.071 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:00.071 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:47:00.071 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:47:00.078 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:00.078 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:00.080 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:00.080 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:47:00.081 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:00.081 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:47:00.083 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:00.083 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:47:00.084 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:00.084 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:47:00.085 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:00.085 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:47:00.085 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:00.086 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:47:00.086 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:00.087 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:47:00.089 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:47:00.090 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:47:00.091 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:47:00.092 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:47:00.092 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:47:00.093 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:47:00.094 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:47:00.097 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:47:00.098 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:47:00.099 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:47:04.213 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:04.229 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:04.229 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:04.229 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:04.245 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:04.245 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:04.246 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:04.246 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:04.246 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:04.247 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:04.247 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:04.247 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:04.247 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:04.269 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:47:04.283 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:04.284 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:47:04.284 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:47:04.301 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:47:04.302 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:47:04.302 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:47:04.302 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:47:04.303 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:47:04.303 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:47:04.304 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:47:04.305 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:47:04.305 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:47:04.306 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:47:04.307 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:47:04.340 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:04.341 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:47:04.344 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:47:04.358 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:04.359 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:47:04.361 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:04.361 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:04.361 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:47:04.361 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:04.362 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:47:04.363 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:04.363 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:47:04.374 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:47:04.375 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:47:04.375 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:47:04.376 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:47:04.376 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:47:04.377 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:47:04.377 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:47:04.377 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:04.377 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:47:04.377 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:47:04.378 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:04.378 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:47:04.378 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:04.378 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:04.379 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:47:04.379 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:47:04.379 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:04.379 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:47:04.380 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:47:04.380 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:04.380 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:47:04.381 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:04.381 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:47:04.382 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:04.383 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:47:04.383 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:04.383 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:47:04.383 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:04.384 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:47:04.393 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:47:04.394 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:47:05.005 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:46:59","returnTime":"1552200420036","returnData":null,"httpStatusCode":"200","timeConsuming":62},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:00","returnTime":"1552200420102","returnData":null,"httpStatusCode":"200","timeConsuming":56},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:00","returnTime":"1552200420106","returnData":null,"httpStatusCode":"200","timeConsuming":64},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:00","returnTime":"1552200420118","returnData":null,"httpStatusCode":"200","timeConsuming":72},{"id":null,"ip":"127.0.0.1","url":"/labelcloud","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424155","returnData":null,"httpStatusCode":"200","timeConsuming":15},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424261","returnData":null,"httpStatusCode":"200","timeConsuming":51},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424324","returnData":null,"httpStatusCode":"200","timeConsuming":57},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424398","returnData":null,"httpStatusCode":"200","timeConsuming":63},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424399","returnData":null,"httpStatusCode":"200","timeConsuming":69},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:04","returnTime":"1552200424415","returnData":null,"httpStatusCode":"200","timeConsuming":77}]]}
2019-03-10 14:47:05.045 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:05.045 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-10 14:47:05.047 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:46:59(String), 200(String), 62(Integer), 1552200420036(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:00(String), 200(String), 56(Integer), 1552200420102(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:00(String), 200(String), 64(Integer), 1552200420106(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:00(String), 200(String), 72(Integer), 1552200420118(String), null, 127.0.0.1(String), /labelcloud(String), null, GET(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 15(Integer), 1552200424155(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 51(Integer), 1552200424261(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 57(Integer), 1552200424324(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 63(Integer), 1552200424398(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 69(Integer), 1552200424399(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:04(String), 200(String), 77(Integer), 1552200424415(String), null
2019-03-10 14:47:05.725 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:05.744 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:05.745 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:05.746 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:05.774 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:05.774 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:05.775 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:05.775 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:05.776 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:05.776 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:05.777 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:05.778 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:05.778 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:05.799 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:47:05.817 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:05.818 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:47:05.818 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:47:05.835 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:47:05.835 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:47:05.836 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:47:05.836 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:47:05.836 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:47:05.837 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:47:05.837 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:47:05.837 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:47:05.838 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:47:05.838 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:47:05.839 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:47:05.876 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:05.880 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:47:05.881 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:47:05.889 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:05.890 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:47:05.890 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:47:05.891 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:05.892 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:47:05.892 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:47:05.894 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:05.895 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:05.895 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:05.899 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:47:05.900 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:47:05.901 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:47:05.902 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:47:05.903 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:47:05.904 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:47:05.905 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:47:05.906 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:47:05.907 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:47:05.907 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:47:05.908 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:47:05.908 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:47:05.909 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:47:05.909 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:05.910 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:47:05.910 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:47:05.910 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:05.911 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:47:05.911 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:47:05.912 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:05.913 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:47:05.914 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:05.915 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:47:05.916 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:05.918 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:05.919 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:05.920 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:05.921 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:05.921 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:05.937 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:47:05.938 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:47:07.315 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:07.339 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:07.340 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:07.340 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:07.361 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:07.362 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:07.363 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:07.364 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:07.365 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:07.367 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:07.370 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:07.371 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:07.372 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:07.422 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:47:07.445 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:07.445 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:47:07.445 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:47:07.463 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:47:07.463 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:47:07.464 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:47:07.464 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:47:07.464 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:47:07.465 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:47:07.466 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:47:07.467 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:47:07.468 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:47:07.469 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:47:07.469 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:47:07.497 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:07.503 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:47:07.506 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:47:07.508 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"2"]}
2019-03-10 14:47:07.517 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:07.518 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-03-10 14:47:07.519 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4366d9e9]
2019-03-10 14:47:07.519 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:07.520 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:47:07.520 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:07.520 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 2(String)
2019-03-10 14:47:07.520 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:47:07.521 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:47:07.521 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:07.522 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:47:07.522 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:07.528 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:07.529 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:07.532 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:47:07.534 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:47:07.535 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:47:07.536 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:07.536 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:47:07.536 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:47:07.537 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:47:07.537 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:47:07.537 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:07.537 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:47:07.538 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:07.539 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:47:07.539 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:07.540 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:47:07.540 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:07.540 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:47:07.541 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:07.541 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:47:07.541 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:07.542 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:47:07.542 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["2",null,null]}
2019-03-10 14:47:07.542 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:07.542 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:47:07.543 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:07.543 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:47:07.543 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:07.543 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:47:07.544 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:47:07.545 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:47:07.545 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:47:07.553 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:07.553 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-03-10 14:47:07.554 DEBUG c.c.m.A.findArticle - ==> Parameters: 2(String)
2019-03-10 14:47:07.555 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:47:07.555 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:47:07.561 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-03-10 14:47:08.711 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:08.739 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:08.739 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:08.739 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:08.759 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:08.759 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:08.760 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:08.760 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:08.761 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:08.761 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:08.762 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:08.762 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:08.762 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:08.783 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-03-10 14:47:08.799 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:08.800 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,A.readingcount,A.url,A.praisecount,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 10 
2019-03-10 14:47:08.800 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-03-10 14:47:08.815 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, praisecount, type, ms
2019-03-10 14:47:08.816 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2019-03-04 21:01:04, 39, null, 4, 7, 杂七杂八
2019-03-10 14:47:08.816 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 99, android模拟器Genymotion的使用, 在开发android项目时，我们经常需要使用到仿真模拟器。, 2019-03-04 21:37:30, 26, null, 1, 3, 移动开发
2019-03-10 14:47:08.817 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 98, Android中使用ContentProvider对外共享数据 , ContentProvider，也叫内容提供者, 是Android的四大组件之一，本文记录下如何使用ContentProvider对外共享数据 , 2019-03-04 21:28:47, 7, null, 0, 3, 移动开发
2019-03-10 14:47:08.817 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2019-03-04 21:05:51, 7, null, 0, 1, 后端技术
2019-03-10 14:47:08.817 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2019-03-04 21:05:34, 5, null, 1, 7, 杂七杂八
2019-03-10 14:47:08.817 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 94, SqlServer数据库中的分页语句, SqlServer分页SQL语句特点: 一次查询，数据库只返回一页的数据，而不是取出所有的数据, 2019-03-04 21:10:25, 5, null, 1, 4, 数据库
2019-03-10 14:47:08.818 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2019-03-04 21:06:42, 5, null, 0, 4, 数据库
2019-03-10 14:47:08.818 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 95, Android设置背景颜色的方法 , 记录下在android开发中如何修改背景颜色, 2019-03-04 21:16:11, 5, null, 0, 3, 移动开发
2019-03-10 14:47:08.818 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2019-03-04 21:03:34, 5, null, 0, 7, 杂七杂八
2019-03-10 14:47:08.818 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 96, Android中用pull解析器解析xml文件, Android中用pull解析器解析xml文件示例, 2019-03-04 21:20:44, 5, null, 0, 3, 移动开发
2019-03-10 14:47:08.849 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-03-10 14:47:08.851 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-03-10 14:47:08.853 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_KEYWORDS","params":[]}
2019-03-10 14:47:08.863 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:08.863 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-03-10 14:47:08.864 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-03-10 14:47:08.867 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@4de08db5]
2019-03-10 14:47:08.868 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-03-10 14:47:08.868 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-03-10 14:47:08.871 DEBUG c.c.m.K.findAllKeywords - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:08.872 DEBUG c.c.m.K.findAllKeywords - ==>  Preparing: SELECT id,name,updatetime FROM mine_keywords 
2019-03-10 14:47:08.872 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-03-10 14:47:08.872 DEBUG c.c.m.K.findAllKeywords - ==> Parameters: 
2019-03-10 14:47:08.873 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2018-02-12 20:50:22, 网站介绍
2019-03-10 14:47:08.875 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@40d3c98b]
2019-03-10 14:47:08.875 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-03-10 14:47:08.876 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-03-10 14:47:08.882 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-03-10 14:47:08.883 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2019-03-04 20:13:48, 记录笔者在后端开发编程时接触的各种技术和问题解决方案
2019-03-10 14:47:08.883 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2019-03-04 20:13:43, 记录笔者在网站页面开发时接触的各种技术和问题解决方案
2019-03-10 14:47:08.883 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-03-10 14:47:08.883 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2019-03-04 20:14:08, 记录笔者在学习Android开发时接触的技术和问题解决方案
2019-03-10 14:47:08.883 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 14
2019-03-10 14:47:08.884 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, , 文章汇总, 2019-03-04 20:14:28, 文章汇总
2019-03-10 14:47:08.884 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-03-04 20:14:42, 记录笔者在数据库开发时接触的各种技术和问题解决方案
2019-03-10 14:47:08.884 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-03-04 20:15:16, 记录笔者接触的各种编程算法
2019-03-10 14:47:08.884 DEBUG c.c.m.S.listConst - <==        Row: 7, 100, 文章分类, 6, 数据结构, 2019-03-04 20:57:00, 记录笔者接触的各种数据结构知识
2019-03-10 14:47:08.885 DEBUG c.c.m.S.listConst - <==        Row: 8, 100, 文章分类, 7, 杂七杂八, 2019-03-10 10:58:53, 想到什么写什么！
2019-03-10 14:47:08.886 DEBUG c.c.m.K.findAllKeywords - <==    Columns: id, name, updatetime
2019-03-10 14:47:08.887 DEBUG c.c.m.K.findAllKeywords - <==        Row: 1, fastdfs, 2017-11-05 12:26:41
2019-03-10 14:47:08.887 DEBUG c.c.m.K.findAllKeywords - <==        Row: 3, redis, 2017-11-05 13:56:12
2019-03-10 14:47:08.887 DEBUG c.c.m.K.findAllKeywords - <==        Row: 4, springboot, 2017-11-05 13:56:25
2019-03-10 14:47:08.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 5, java, 2017-11-05 14:32:06
2019-03-10 14:47:08.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 7, android, 2017-11-05 14:32:20
2019-03-10 14:47:08.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 8, 分布式文件系统, 2017-11-06 20:40:23
2019-03-10 14:47:08.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 10, excel, 2017-12-02 16:48:44
2019-03-10 14:47:08.888 DEBUG c.c.m.K.findAllKeywords - <==        Row: 11, poi, 2019-02-23 16:11:56
2019-03-10 14:47:08.889 DEBUG c.c.m.K.findAllKeywords - <==        Row: 14, 网站备案, 2019-03-04 20:56:27
2019-03-10 14:47:08.889 DEBUG c.c.m.K.findAllKeywords - <==        Row: 18, 文摘, 2019-03-04 21:03:22
2019-03-10 14:47:08.889 DEBUG c.c.m.K.findAllKeywords - <==        Row: 23, 网站迭代, 2019-03-04 21:04:49
2019-03-10 14:47:08.889 DEBUG c.c.m.K.findAllKeywords - <==        Row: 24, 学习资料, 2019-03-04 21:05:23
2019-03-10 14:47:08.890 DEBUG c.c.m.K.findAllKeywords - <==        Row: 25, sqlserver, 2019-03-04 21:06:24
2019-03-10 14:47:08.890 DEBUG c.c.m.K.findAllKeywords - <==        Row: 26, jvm, 2019-03-10 12:05:24
2019-03-10 14:47:10.008 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SAVE_LOGGER","params":[[{"id":null,"ip":"127.0.0.1","url":"/videoshare","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425670","returnData":null,"httpStatusCode":"200","timeConsuming":20},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425792","returnData":null,"httpStatusCode":"200","timeConsuming":69},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425867","returnData":null,"httpStatusCode":"200","timeConsuming":71},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425941","returnData":null,"httpStatusCode":"200","timeConsuming":70},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425943","returnData":null,"httpStatusCode":"200","timeConsuming":69},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:05","returnTime":"1552200425973","returnData":null,"httpStatusCode":"200","timeConsuming":101},{"id":null,"ip":"127.0.0.1","url":"/list","type":null,"method":"GET","paramData":"{\"page\":[\"1\"],\"limit\":[\"10\"],\"type_dm\":[\"2\"]}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427271","returnData":null,"httpStatusCode":"200","timeConsuming":19},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427405","returnData":null,"httpStatusCode":"200","timeConsuming":92},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427489","returnData":null,"httpStatusCode":"200","timeConsuming":73},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427558","returnData":null,"httpStatusCode":"200","timeConsuming":63},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427561","returnData":null,"httpStatusCode":"200","timeConsuming":68},{"id":null,"ip":"127.0.0.1","url":"/article_page","type":"XMLHttpRequest","method":"POST","paramData":"{\"page\":[\"1\"],\"limit\":[\"10\"],\"type_dm\":[\"2\"]}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427579","returnData":null,"httpStatusCode":"200","timeConsuming":75},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:07","returnTime":"1552200427580","returnData":null,"httpStatusCode":"200","timeConsuming":86},{"id":null,"ip":"127.0.0.1","url":"/about","type":null,"method":"GET","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428663","returnData":null,"httpStatusCode":"200","timeConsuming":14},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428776","returnData":null,"httpStatusCode":"200","timeConsuming":68},{"id":null,"ip":"127.0.0.1","url":"/rank_article","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428838","returnData":null,"httpStatusCode":"200","timeConsuming":58},{"id":null,"ip":"127.0.0.1","url":"/siteinfo","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428916","returnData":null,"httpStatusCode":"200","timeConsuming":70},{"id":null,"ip":"127.0.0.1","url":"/keywords","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428921","returnData":null,"httpStatusCode":"200","timeConsuming":74},{"id":null,"ip":"127.0.0.1","url":"/article_types","type":"XMLHttpRequest","method":"POST","paramData":"{}","sessionId":null,"time":"2019-03-10 14:47:08","returnTime":"1552200428921","returnData":null,"httpStatusCode":"200","timeConsuming":77}]]}
2019-03-10 14:47:10.057 DEBUG c.c.m.L.addLogger - ooo Using Connection [com.mysql.cj.jdbc.ConnectionImpl@219e579c]
2019-03-10 14:47:10.057 DEBUG c.c.m.L.addLogger - ==>  Preparing: INSERT INTO mine_loginfo( ip, url, type, method, paramData, sessionId, time, httpStatusCode, timeConsuming, returnTime, returnData
2019-03-10 14:47:10.060 DEBUG c.c.m.L.addLogger - ==> Parameters: 127.0.0.1(String), /videoshare(String), null, GET(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 20(Integer), 1552200425670(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 69(Integer), 1552200425792(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 71(Integer), 1552200425867(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 70(Integer), 1552200425941(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 69(Integer), 1552200425943(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:05(String), 200(String), 101(Integer), 1552200425973(String), null, 127.0.0.1(String), /list(String), null, GET(String), {"page":["1"],"limit":["10"],"type_dm":["2"]}(String), null, 2019-03-10 14:47:07(String), 200(String), 19(Integer), 1552200427271(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:07(String), 200(String), 92(Integer), 1552200427405(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:07(String), 200(String), 73(Integer), 1552200427489(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:07(String), 200(String), 63(Integer), 1552200427558(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:07(String), 200(String), 68(Integer), 1552200427561(String), null, 127.0.0.1(String), /article_page(String), XMLHttpRequest(String), POST(String), {"page":["1"],"limit":["10"],"type_dm":["2"]}(String), null, 2019-03-10 14:47:07(String), 200(String), 75(Integer), 1552200427579(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:07(String), 200(String), 86(Integer), 1552200427580(String), null, 127.0.0.1(String), /about(String), null, GET(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 14(Integer), 1552200428663(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 68(Integer), 1552200428776(String), null, 127.0.0.1(String), /rank_article(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 58(Integer), 1552200428838(String), null, 127.0.0.1(String), /siteinfo(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 70(Integer), 1552200428916(String), null, 127.0.0.1(String), /keywords(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 74(Integer), 1552200428921(String), null, 127.0.0.1(String), /article_types(String), XMLHttpRequest(String), POST(String), {}(String), null, 2019-03-10 14:47:08(String), 200(String), 77(Integer), 1552200428921(String), null
