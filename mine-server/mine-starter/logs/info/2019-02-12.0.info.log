2019-02-12 17:20:01.163 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 17:20:01.234 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 15176 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 17:20:01.234 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 17:20:01.235 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 17:20:02.552 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 17:20:02.591 ERROR c.a.d.p.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 351 common frames omitted
2019-02-12 17:20:02.594 ERROR c.c.c.MyBatisConfig$DataSourceConfig - 数据库连接池初始化失败,{}
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 351 common frames omitted
2019-02-12 17:20:02.612 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 17:20:56.684 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 17:20:56.761 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 6780 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 17:20:56.762 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 17:20:56.762 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 17:20:58.071 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 17:20:58.601 ERROR c.a.d.p.DruidDataSource - init datasource error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:677)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
2019-02-12 17:20:58.628 ERROR c.a.d.p.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:677)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
2019-02-12 17:20:58.635 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-12 17:20:58.638 ERROR c.c.c.MyBatisConfig$DataSourceConfig - 数据库连接池初始化失败,{}
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:677)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
2019-02-12 17:20:58.684 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 17:20:58.800 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:58.976 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:59.136 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:59.311 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:59.480 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:59.655 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:20:59.841 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.024 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.206 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.373 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.536 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.704 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:00.880 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.049 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.223 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.388 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.562 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.727 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.901 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:4323)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1267)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
2019-02-12 17:21:01.977 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.053 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.120 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.186 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.256 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.326 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.389 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.462 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.536 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.601 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.664 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:21:02.729 ERROR c.a.d.p.DruidDataSource - create connection error, url: jdbc:mysql://server.natappfree.cc:37173/rookiepalmspacedb?characterEncoding=utf-8&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:981)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:628)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1014)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2255)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2286)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2085)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:795)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)
	at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:327)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1421)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1477)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1998)
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2957)
	at com.mysql.jdbc.MysqlIO.readPacket(MysqlIO.java:560)
	... 15 common frames omitted
2019-02-12 17:22:03.287 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 17:22:03.355 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 2684 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 17:22:03.355 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 17:22:03.356 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 17:22:04.616 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 17:22:10.929 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-12 17:22:10.978 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 17:22:11.190 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-02-12 17:22:11.191 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-02-12 17:22:11.934 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-02-12 17:22:11.936 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-02-12 17:22:12.114 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-02-12 17:22:12.757 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-02-12 17:22:12.807 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-02-12 17:22:12.807 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-02-12 17:22:12.807 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-02-12 17:22:12.807 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-02-12 17:22:12.807 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-02-12 17:22:12.808 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-02-12 17:22:13.695 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-02-12 17:22:13.707 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-02-12 17:22:13.728 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-12 17:22:13.761 INFO  c.c.ServerApp - Started ServerApp in 11.058 seconds (JVM running for 11.723)
2019-02-12 19:47:48.835 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 19:47:49.025 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 12952 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 19:47:49.026 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 19:47:49.028 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 19:47:51.513 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 19:47:58.209 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-12 19:47:58.249 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 19:47:58.504 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-02-12 19:47:58.505 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-02-12 19:47:59.207 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-02-12 19:47:59.209 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-02-12 19:47:59.366 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-02-12 19:47:59.916 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-02-12 19:47:59.956 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-02-12 19:47:59.956 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-02-12 19:47:59.956 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-02-12 19:47:59.956 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-02-12 19:47:59.957 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-02-12 19:48:00.838 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-02-12 19:48:00.852 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-02-12 19:48:00.867 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-12 19:48:00.909 INFO  c.c.ServerApp - Started ServerApp in 13.013 seconds (JVM running for 13.919)
2019-02-12 19:48:08.986 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-12 19:48:09.434 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:48:09.646 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:09.649 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:48:09.669 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:48:09.760 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:48:09.762 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:48:09.764 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:48:09.765 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:48:09.766 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:48:09.767 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:48:09.767 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:48:09.958 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 19:48:10.034 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:10.035 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 19:48:10.037 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 19:48:10.130 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:48:10.131 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:48:10.132 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:48:10.133 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:48:10.134 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:48:10.135 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:48:10.225 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:48:10.297 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:10.298 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:48:10.299 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:48:10.378 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:48:10.379 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:48:10.381 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:48:10.382 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:48:10.384 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:48:10.385 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:48:10.387 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:48:10.490 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:48:10.499 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 19:48:10.564 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@66b5924a]
2019-02-12 19:48:10.564 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:10.565 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 19:48:10.565 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:48:10.567 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:48:10.568 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 19:48:10.648 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:48:10.649 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:48:10.649 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:48:10.650 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:48:10.650 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:48:10.651 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:48:10.651 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:48:10.652 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:48:10.653 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:48:10.656 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:48:10.657 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:48:10.744 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:48:10.810 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:10.810 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:48:10.811 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:48:10.873 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:48:10.873 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:48:10.875 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:48:10.876 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:48:10.877 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:48:10.879 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:48:10.881 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:48:10.969 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 19:48:11.042 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:48:11.042 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 19:48:11.042 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 19:48:11.153 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:48:11.154 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:48:11.154 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:48:11.155 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:48:11.155 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 19:48:11.156 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.156 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.157 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.157 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.159 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.160 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 19:48:11.161 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 19:48:11.163 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 19:48:11.164 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 19:48:11.164 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:48:11.165 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 19:48:11.166 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 19:48:11.166 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:48:11.167 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:48:11.167 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:48:11.168 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:49:28.912 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:28.981 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:28.982 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:28.982 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:29.054 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:29.054 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:29.055 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:29.055 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:29.056 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:29.056 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:29.057 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:29.139 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 19:49:29.209 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:29.210 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 19:49:29.210 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 19:49:29.284 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:49:29.284 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:49:29.285 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:49:29.285 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:49:29.285 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:49:29.286 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:49:29.369 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:29.443 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:29.444 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:29.444 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:29.514 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:29.514 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:29.515 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:29.516 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:29.517 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:29.517 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:29.518 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:29.600 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:29.602 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 19:49:29.696 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@66b5924a]
2019-02-12 19:49:29.696 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:29.697 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 19:49:29.697 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:29.697 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 19:49:29.698 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:29.809 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:29.810 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:29.810 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:29.811 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:29.811 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:29.811 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:29.812 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:29.857 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:49:29.857 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:49:29.858 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:49:29.858 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:49:29.905 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:29.969 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:29.970 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:29.970 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:30.035 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:30.036 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:30.036 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:30.037 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:30.037 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:30.037 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:30.038 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:30.108 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 19:49:30.181 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:30.181 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 19:49:30.181 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 19:49:30.254 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:49:30.254 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:49:30.255 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:49:30.255 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:49:30.255 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 19:49:30.256 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.256 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.256 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.256 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.257 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.257 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 19:49:30.258 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 19:49:30.258 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 19:49:30.259 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 19:49:30.260 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:49:30.260 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 19:49:30.261 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 19:49:30.261 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:49:30.262 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:49:30.262 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:49:30.262 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:49:58.810 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:58.872 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:58.873 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:58.873 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:58.943 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:58.943 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:58.944 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:58.944 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:58.944 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:58.944 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:58.945 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:59.025 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 19:49:59.093 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:59.093 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 19:49:59.094 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 19:49:59.169 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:49:59.170 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:49:59.172 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:49:59.173 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:49:59.174 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:49:59.175 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:49:59.258 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:59.327 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:59.327 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:59.328 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:59.395 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:59.396 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:59.396 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:59.396 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:59.397 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:59.397 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:59.397 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:59.473 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 19:49:59.475 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:59.548 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@66b5924a]
2019-02-12 19:49:59.548 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:59.548 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:59.549 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 19:49:59.549 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:59.550 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 19:49:59.690 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:59.690 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:59.691 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:49:59.691 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:59.691 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:49:59.692 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:59.692 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:49:59.692 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:59.692 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:49:59.693 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:59.693 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:49:59.766 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:49:59.836 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:49:59.837 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:49:59.837 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:49:59.914 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:49:59.914 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:49:59.915 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:49:59.916 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:49:59.916 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:49:59.916 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:49:59.916 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:50:00.072 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 19:50:00.140 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:50:00.141 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 19:50:00.141 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 19:50:00.221 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:50:00.221 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 19:50:00.222 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 19:50:00.222 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 19:50:00.222 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 19:50:00.223 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.223 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.224 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.224 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.225 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.225 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 19:50:00.225 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 19:50:00.226 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 19:50:00.226 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 19:50:00.227 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:50:00.227 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 19:50:00.228 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 19:50:00.228 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:50:00.229 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:50:00.229 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:50:00.230 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:52:44.076 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:52:44.148 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:44.149 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:52:44.149 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:52:44.221 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:52:44.222 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:52:44.222 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:52:44.223 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:52:44.223 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:52:44.223 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:52:44.223 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:52:44.303 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 19:52:44.372 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:44.373 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 19:52:44.374 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 19:52:44.454 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:52:44.455 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:52:44.457 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:52:44.458 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:52:44.459 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:52:44.461 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:52:44.544 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:52:44.613 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:44.614 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:52:44.614 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:52:44.688 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:52:44.688 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:52:44.689 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:52:44.689 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:52:44.690 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:52:44.691 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:52:44.692 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:52:51.833 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:52:51.903 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:51.903 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:52:51.903 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:52:51.966 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:52:51.966 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:52:51.967 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:52:51.967 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:52:51.967 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:52:51.967 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:52:51.968 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 19:52:52.051 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 19:52:52.123 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:52.123 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 19:52:52.124 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 19:52:52.204 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 19:52:52.204 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 19:52:52.205 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 19:52:52.205 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 19:52:52.205 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 19:52:52.205 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 19:52:52.288 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 19:52:52.361 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@31f39252]
2019-02-12 19:52:52.361 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 19:52:52.361 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 19:52:52.439 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 19:52:52.440 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 19:52:52.441 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 19:52:52.442 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 19:52:52.442 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 19:52:52.443 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 19:52:52.444 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:00:50.673 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:00:51.488 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:00:51.488 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:00:51.489 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:00:51.557 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:00:51.558 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:00:51.559 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:00:51.559 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:00:51.560 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:00:51.561 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:00:51.561 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:00:51.645 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:00:51.718 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:00:51.718 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:00:51.718 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:00:51.791 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:00:51.792 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:00:51.792 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:00:51.793 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:00:51.793 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:00:51.793 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:00:51.864 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:00:51.931 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:00:51.931 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:00:51.931 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:00:51.998 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:00:51.999 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:00:52.000 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:00:52.000 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:00:52.000 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:00:52.001 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:00:52.001 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:03:21.351 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:03:21.421 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:21.421 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:03:21.422 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:03:21.485 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:03:21.486 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:03:21.487 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:03:21.487 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:03:21.487 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:03:21.488 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:03:21.488 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:03:21.562 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:03:21.623 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:21.624 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:03:21.625 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:03:21.700 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:03:21.700 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:03:21.701 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:03:21.701 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:03:21.701 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:03:21.702 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:03:21.773 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:03:21.831 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:21.831 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:03:21.832 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:03:21.897 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:03:21.898 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:03:21.898 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:03:21.898 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:03:21.899 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:03:21.899 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:03:21.899 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:03:48.328 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:03:48.395 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:48.395 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:03:48.396 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:03:48.457 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:03:48.458 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:03:48.458 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:03:48.459 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:03:48.459 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:03:48.460 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:03:48.460 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:03:48.532 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:03:48.595 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:48.596 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:03:48.596 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:03:48.671 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:03:48.672 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:03:48.672 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:03:48.673 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:03:48.673 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:03:48.673 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:03:48.748 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:03:48.813 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:03:48.814 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:03:48.814 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:03:48.887 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:03:48.887 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:03:48.887 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:03:48.887 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:03:48.888 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:03:48.888 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:03:48.888 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:04:33.065 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:04:33.128 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:04:33.129 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:04:33.130 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:04:33.190 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:04:33.191 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:04:33.191 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:04:33.191 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:04:33.192 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:04:33.192 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:04:33.192 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:04:33.266 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:04:33.327 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:04:33.328 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:04:33.328 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:04:33.405 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:04:33.406 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:04:33.406 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:04:33.407 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:04:33.407 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:04:33.407 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:04:33.474 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:04:33.542 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:04:33.542 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:04:33.542 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:04:33.608 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:04:33.608 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:04:33.609 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:04:33.609 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:04:33.610 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:04:33.610 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:04:33.611 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:05:54.596 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:05:54.661 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:05:54.662 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:05:54.662 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:05:54.730 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:05:54.730 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:05:54.731 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:05:54.731 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:05:54.731 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:05:54.731 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:05:54.731 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:05:54.809 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:05:54.876 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:05:54.876 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:05:54.877 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:05:54.988 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:05:54.989 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:05:54.989 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:05:54.990 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:05:54.991 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:05:54.991 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:05:55.066 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:05:55.131 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:05:55.131 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:05:55.131 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:05:55.230 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:05:55.231 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:05:55.233 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:05:55.234 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:05:55.235 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:05:55.236 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:05:55.237 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:06.263 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:06.331 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:06.332 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:06.333 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:06.402 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:06.403 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:06.403 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:06.404 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:06.405 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:06.405 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:06.405 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:06.479 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:07:06.568 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:06.569 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:07:06.569 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:07:06.642 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:07:06.643 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:07:06.645 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:07:06.646 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:07:06.647 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:07:06.648 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:07:06.737 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:06.803 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:06.804 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:06.804 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:06.870 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:06.871 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:06.872 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:06.873 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:06.874 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:06.876 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:06.877 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:09.859 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:09.927 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:09.927 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:09.927 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:09.993 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:09.994 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:09.994 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:09.995 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:09.995 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:09.995 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:09.995 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:10.073 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:07:10.142 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:10.143 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:07:10.145 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:07:10.217 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:07:10.218 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:07:10.218 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:07:10.218 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:07:10.218 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:07:10.219 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:07:10.293 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:10.356 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:10.356 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:10.356 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:10.461 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:10.462 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:10.462 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:10.463 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:10.464 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:10.464 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:10.464 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:10.536 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:10.537 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 20:07:10.623 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:10.623 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:10.623 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:10.722 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:10.722 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:10.723 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:10.723 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:10.723 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:10.723 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:10.724 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:10.811 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:07:10.876 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:10.876 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 20:07:10.876 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 20:07:10.938 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:07:10.939 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:07:10.939 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:07:10.939 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:07:11.132 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:11.132 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:07:11.133 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:07:11.214 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:07:11.216 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:07:11.217 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:07:11.218 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:07:11.219 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:07:11.220 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:07:11.221 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:07:11.295 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 20:07:11.371 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:07:11.371 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 20:07:11.371 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 20:07:11.475 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:07:11.476 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:07:11.476 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:07:11.477 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:07:11.477 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 20:07:11.477 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.477 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.478 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.478 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.478 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.478 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 20:07:11.478 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 20:07:11.479 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 20:07:11.479 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 20:07:11.479 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:07:11.479 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 20:07:11.479 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 20:07:11.480 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:07:11.480 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:07:11.480 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:07:11.480 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:08:02.782 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:02.851 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:02.851 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:02.851 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:02.962 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:02.963 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:02.963 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:02.963 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:02.963 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:02.964 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:02.964 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:03.048 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:08:03.130 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:03.130 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:08:03.130 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:08:03.235 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:08:03.235 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:08:03.235 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:08:03.237 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:08:03.237 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:08:03.237 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:08:03.312 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:03.376 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:03.376 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:03.377 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:03.480 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:03.480 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:03.480 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:03.481 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:03.481 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:03.481 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:03.481 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:03.814 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:03.815 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 20:08:03.882 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:03.882 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:03.882 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:03.884 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@430f587e]
2019-02-12 20:08:03.885 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 20:08:03.885 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 20:08:03.957 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:08:03.957 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:08:03.958 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:08:03.958 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:08:03.981 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:03.982 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:03.983 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:03.984 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:03.985 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:03.985 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:03.986 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:04.065 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:04.135 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:04.135 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:04.136 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:04.240 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:04.240 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:04.241 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:04.241 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:04.241 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:04.242 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:04.242 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:04.305 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 20:08:04.378 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:04.378 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 20:08:04.379 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 20:08:04.482 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:08:04.483 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:08:04.484 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:08:04.484 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:08:04.484 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 20:08:04.485 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.485 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.485 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.486 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.486 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.486 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 20:08:04.487 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 20:08:04.487 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 20:08:04.487 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 20:08:04.487 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:08:04.488 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 20:08:04.488 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 20:08:04.488 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:08:04.488 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:08:04.489 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:08:04.489 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:08:06.002 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:06.070 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:06.071 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:06.072 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:06.161 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:06.161 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:06.162 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:06.162 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:06.162 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:06.162 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:06.163 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:06.235 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:08:06.296 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:06.297 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:08:06.297 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:08:06.402 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:08:06.403 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:08:06.405 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:08:06.406 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:08:06.407 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:08:06.408 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:08:06.483 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:06.540 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:06.540 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:06.541 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:06.638 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:06.638 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:06.638 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:06.639 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:06.639 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:06.639 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:06.640 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:55.150 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:55.459 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:55.460 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:55.461 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:55.950 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:55.951 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:55.952 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:55.953 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:55.954 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:55.955 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:55.955 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:08:56.250 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:08:56.882 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:56.883 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:08:56.884 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:08:57.755 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:08:57.756 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:08:57.757 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:08:57.759 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:08:57.760 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:08:57.762 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:08:58.113 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:08:58.254 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:08:58.255 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:08:58.256 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:08:58.417 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:08:58.417 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:08:58.418 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:08:58.418 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:08:58.419 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:08:58.419 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:08:58.420 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:18.072 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:18.144 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:18.144 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:18.144 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:18.241 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:18.242 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:18.243 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:18.243 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:18.243 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:18.244 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:18.244 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:18.318 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:09:18.728 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:18.728 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:09:18.730 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:09:18.831 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:09:18.832 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:09:18.833 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:09:18.833 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:09:18.834 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:09:18.835 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:09:18.916 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:19.029 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:19.029 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:19.030 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:19.444 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:19.445 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:19.446 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:19.446 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:19.446 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:19.446 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:19.447 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:27.216 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:27.286 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:27.286 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:27.286 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:27.380 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:27.381 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:27.381 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:27.381 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:27.381 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:27.382 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:27.382 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:27.455 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 20:09:27.520 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:27.520 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 20:09:27.521 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 20:09:27.629 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:09:27.631 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:09:27.632 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:09:27.633 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:09:27.634 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:09:27.635 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:09:27.721 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:27.782 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:27.782 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:27.783 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:27.897 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:27.897 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:27.897 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:27.898 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:27.898 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:27.898 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:27.898 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:27.977 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:27.979 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 20:09:28.044 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:28.044 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:28.044 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:28.047 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@430f587e]
2019-02-12 20:09:28.047 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 20:09:28.047 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 20:09:28.119 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:09:28.120 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:09:28.120 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:09:28.121 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:09:28.146 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:28.146 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:28.146 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:28.147 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:28.147 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:28.147 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:28.147 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:28.225 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 20:09:28.289 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:28.290 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 20:09:28.291 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 20:09:28.502 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 20:09:28.502 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 20:09:28.502 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 20:09:28.503 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 20:09:28.503 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 20:09:28.503 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 20:09:28.503 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 20:09:28.617 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 20:09:28.764 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@6788c898]
2019-02-12 20:09:28.765 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 20:09:28.766 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 20:09:29.711 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 20:09:29.712 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 20:09:29.713 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 20:09:29.714 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 20:09:29.714 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 20:09:29.715 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.716 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.717 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.717 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.718 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.719 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 20:09:29.720 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 20:09:29.720 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 20:09:29.721 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 20:09:29.722 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 20:09:29.722 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 20:09:29.723 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 20:09:29.724 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 20:09:29.725 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 20:09:29.726 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 20:09:29.726 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 20:49:32.763 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 20:49:32.836 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 11024 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 20:49:32.836 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 20:49:32.837 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 20:49:34.075 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 20:50:10.825 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-12 20:50:10.869 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 20:50:11.084 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-02-12 20:50:11.085 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-02-12 20:50:11.812 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-02-12 20:50:11.814 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-02-12 20:50:11.977 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-02-12 20:50:12.677 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-02-12 20:50:12.753 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-02-12 20:50:12.753 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-02-12 20:50:12.753 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-02-12 20:50:12.754 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-02-12 20:50:12.754 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-02-12 20:50:12.754 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-02-12 20:50:12.754 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-02-12 20:50:12.755 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-02-12 20:50:12.755 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-02-12 20:50:12.755 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-02-12 20:50:12.755 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-02-12 20:50:12.756 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-02-12 20:50:14.340 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-02-12 20:50:14.356 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-02-12 20:50:14.383 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-12 20:50:14.424 INFO  c.c.ServerApp - Started ServerApp in 42.234 seconds (JVM running for 42.856)
2019-02-12 20:52:39.658 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 20:52:39.728 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 15504 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 20:52:39.728 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 20:52:39.728 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 20:52:40.930 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 20:52:40.964 ERROR c.a.d.p.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:52:40.967 ERROR c.c.c.MyBatisConfig$DataSourceConfig - 数据库连接池初始化失败,{}
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:52:40.981 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 20:53:21.567 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 20:53:21.636 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 9284 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 20:53:21.636 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 20:53:21.636 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 20:53:22.833 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 20:53:22.861 ERROR c.a.d.p.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:53:22.864 ERROR c.c.c.MyBatisConfig$DataSourceConfig - 数据库连接池初始化失败,{}
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:53:22.877 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 20:54:25.691 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 20:54:25.752 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 472 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 20:54:25.752 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 20:54:25.752 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 20:54:27.035 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 20:54:27.065 ERROR c.a.d.p.DruidDataSource - {dataSource-1} init error
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:54:27.069 ERROR c.c.c.MyBatisConfig$DataSourceConfig - 数据库连接池初始化失败,{}
java.sql.SQLException: com.mysql.cj.jdbc.Driver
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:560)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:642)
	at com.alibaba.druid.pool.DruidDataSourceFactory.config(DruidDataSourceFactory.java:361)
	at com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(DruidDataSourceFactory.java:143)
	at com.codinggyd.config.MyBatisConfig$DataSourceConfig.dbH2DataSource(MyBatisConfig.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getTypeForFactoryBean(AbstractBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:808)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:544)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:447)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:415)
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1116)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:228)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:522)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
	at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
	at com.codinggyd.ServerApp.main(ServerApp.java:24)
Caused by: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.alibaba.druid.util.JdbcUtils.createDriver(JdbcUtils.java:558)
	... 383 common frames omitted
2019-02-12 20:54:27.082 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 21:09:54.296 INFO  o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
2019-02-12 21:09:54.485 INFO  c.c.ServerApp - Starting ServerApp on WINDOWS-GUOYD with PID 420 (E:\personal_workspace\git_code\project\mine-server\mine-starter\target\classes started by guoyd in E:\personal_workspace\git_code\project\mine-server\mine-starter)
2019-02-12 21:09:54.493 DEBUG c.c.ServerApp - Running with Spring Boot v1.3.3.RELEASE, Spring v4.2.3.RELEASE
2019-02-12 21:09:54.495 INFO  c.c.ServerApp - No active profile set, falling back to default profiles: default
2019-02-12 21:09:57.092 ERROR c.a.d.p.DruidAbstractDataSource - maxIdle is deprecated
2019-02-12 21:10:03.534 INFO  c.a.d.p.DruidDataSource - {dataSource-1} inited
2019-02-12 21:10:03.569 DEBUG o.a.i.l.LogFactory - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2019-02-12 21:10:03.788 DEBUG c.g.m.m.p.OffsetLimitInterceptor - dialectClass: com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect 
2019-02-12 21:10:03.790 DEBUG c.g.m.m.p.OffsetLimitInterceptor - asyncTotalCount: false 
2019-02-12 21:10:04.433 INFO  o.a.c.c.StandardService - Starting service Tomcat
2019-02-12 21:10:04.434 INFO  o.a.c.c.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.0.28
2019-02-12 21:10:04.575 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2019-02-12 21:10:05.079 DEBUG c.c.c.MineServiceHandler - 测试接口初始化
2019-02-12 21:10:05.123 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_USER_LOGIN
2019-02-12 21:10:05.123 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_DETAIL
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_LIST_RANK_TOP
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_ARTICLE_UPDATE_READ_COUNT
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_LATEST_ARTICLE
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_RANDOM_ARTICLE
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DAILY_ESSAYS
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_DATA_EXPORT
2019-02-12 21:10:05.124 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_CONST
2019-02-12 21:10:05.125 DEBUG c.c.c.MineServiceHandler - 初始化接口地址=MINE_SITE_INFORMATION
2019-02-12 21:10:05.125 DEBUG c.c.c.MineServiceHandler - 测试接口初始化完毕
2019-02-12 21:10:06.027 INFO  o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8181"]
2019-02-12 21:10:06.040 INFO  o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8181"]
2019-02-12 21:10:06.058 INFO  o.a.t.u.n.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-12 21:10:06.095 INFO  c.c.ServerApp - Started ServerApp in 12.449 seconds (JVM running for 13.204)
2019-02-12 21:17:56.116 INFO  o.a.c.c.C.[.[.[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-12 21:17:56.539 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:17:57.447 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:17:57.450 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:17:57.470 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:17:57.548 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:17:57.549 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:17:57.551 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:17:57.552 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:17:57.553 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:17:57.554 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:17:57.555 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:02.493 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:18:02.560 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:02.562 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:18:02.565 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:18:02.642 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:02.645 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:18:02.646 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:18:02.647 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:18:02.649 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:18:02.650 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:18:02.747 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:02.811 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:02.812 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:02.813 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:02.875 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:02.875 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:02.876 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:02.878 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:02.879 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:02.880 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:02.881 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:02.971 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:02.975 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:18:03.040 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:03.042 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:03.042 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:03.110 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:03.111 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:03.112 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:03.113 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:03.115 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:03.117 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:03.119 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:03.210 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:03.241 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:03.242 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:18:03.243 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:18:03.315 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:03.316 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.317 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.318 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.446 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:03.446 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:03.447 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:03.512 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:03.512 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:03.514 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:03.515 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:03.516 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:03.517 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:03.518 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:03.592 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:18:03.658 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:03.659 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:18:03.659 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:18:03.765 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:03.766 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.767 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.768 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.770 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:18:03.771 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.771 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.772 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.775 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.777 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.778 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:18:03.779 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:18:03.780 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:18:03.781 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:18:03.782 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:18:03.782 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:18:03.783 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:18:03.784 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:18:03.786 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:18:03.787 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:18:03.788 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:18:41.727 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:41.793 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:41.794 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:41.794 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:41.861 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:41.862 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:41.862 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:41.862 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:41.863 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:41.863 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:41.864 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:41.939 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:18:42.000 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:42.001 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:18:42.001 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:18:42.074 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:42.076 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:18:42.078 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:18:42.080 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:18:42.082 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:18:42.084 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:18:42.170 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:42.236 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:42.238 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:42.239 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:42.305 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:42.305 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:42.306 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:42.307 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:42.308 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:42.308 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:42.308 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:42.385 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:18:42.386 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:42.449 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:18:42.450 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:18:42.450 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:18:42.453 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:18:42.453 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:42.454 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:42.519 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:42.520 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:42.520 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:42.521 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:42.521 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:42.521 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:42.522 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:42.523 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:42.525 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.525 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.526 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.606 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:18:42.676 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:18:42.676 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:18:42.676 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:18:42.747 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:18:42.748 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:18:42.748 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:18:42.748 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:18:42.749 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:18:42.749 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:18:42.749 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:18:42.820 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:18:42.883 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:18:42.883 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:18:42.884 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:18:42.994 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:18:42.995 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.995 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.996 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.996 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:18:42.997 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:18:42.997 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:18:42.998 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:18:42.998 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:18:42.999 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:18:42.999 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:18:42.999 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:18:43.000 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:18:43.000 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:18:43.001 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:18:43.001 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:18:43.001 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:18:43.002 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:18:43.002 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:18:43.003 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:18:43.003 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:19:16.083 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:16.150 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:16.150 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:16.151 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:16.222 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:16.223 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:16.223 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:16.223 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:16.224 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:16.224 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:16.225 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:16.303 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:19:16.373 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:16.375 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:19:16.376 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:19:16.458 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:16.460 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:19:16.461 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:19:16.462 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:19:16.464 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:19:16.465 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:19:16.570 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:19:16.572 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:16.637 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:19:16.638 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:16.638 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:16.640 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:16.641 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:19:16.642 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:19:16.706 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:16.706 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:16.707 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:16.708 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:16.709 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:16.710 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:16.711 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:16.711 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:16.712 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:19:16.713 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:19:16.713 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:19:16.799 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:16.868 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:16.869 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:16.871 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:16.942 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:16.943 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:16.944 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:16.945 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:16.946 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:16.947 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:16.948 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:17.023 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:19:17.088 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:17.089 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:19:17.089 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:19:17.195 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:17.195 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:19:17.196 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:19:17.196 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:19:17.197 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:19:17.197 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.197 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.198 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.198 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.198 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.199 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:19:17.199 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:19:17.199 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:19:17.200 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:19:17.200 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:19:17.201 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:19:17.201 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:19:17.202 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:19:17.202 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:19:17.203 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:19:17.203 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:19:18.872 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:19:18.981 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:18.981 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:19:18.982 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:19:19.193 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:19:19.193 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:19:19.194 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:19.195 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:19:19.195 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:19:19.324 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:19:19.325 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:19:19.942 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:19:20.007 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:20.008 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:19:20.008 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:19:20.077 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:19:20.078 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:19:20.080 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:20.081 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:19:20.082 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:19:20.146 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:19:20.147 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:19:39.291 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:39.354 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:39.354 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:39.355 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:39.422 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:39.422 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:39.422 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:39.422 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:39.422 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:39.423 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:39.423 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:39.499 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:19:39.560 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:39.560 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:19:39.560 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:19:39.634 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:39.634 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:19:39.635 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:19:39.636 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:19:39.636 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:19:39.637 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:19:39.717 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:19:39.720 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:39.779 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:39.779 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:19:39.779 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:19:39.782 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:19:39.783 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:39.783 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:39.842 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:39.843 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:39.844 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:39.845 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:39.845 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:39.845 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:39.846 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:39.849 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:39.849 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:19:39.850 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:19:39.850 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:19:39.919 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:19:39.980 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:39.980 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:19:39.981 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:19:40.044 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:19:40.045 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:19:40.045 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:19:40.046 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:19:40.046 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:19:40.046 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:19:40.047 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:19:40.128 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:19:40.197 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:40.197 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:19:40.197 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:19:40.303 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:19:40.304 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:19:40.305 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:19:40.306 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:19:40.307 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:19:40.307 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.307 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.307 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.308 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.308 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.308 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:19:40.310 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:19:40.310 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:19:40.310 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:19:40.311 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:19:40.311 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:19:40.311 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:19:40.312 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:19:40.312 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:19:40.312 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:19:40.312 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:19:46.299 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:19:46.364 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:46.364 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:19:46.364 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:19:46.431 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:19:46.432 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:19:46.433 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:46.433 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:19:46.433 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:19:46.500 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:19:46.501 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:19:47.785 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:19:47.852 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:47.852 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:19:47.852 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:19:47.924 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:19:47.925 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:19:47.926 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:19:47.926 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:19:47.927 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:19:47.993 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:19:47.994 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:21:21.481 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:21.542 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:21.542 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:21.542 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:21.605 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:21.606 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:21.606 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:21.607 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:21.607 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:21.607 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:21.608 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:21.769 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:21:21.834 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:21.835 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:21:21.836 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:21:21.906 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:21.907 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:21:21.908 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:21:21.908 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:21:21.908 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:21:21.909 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:21:21.991 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:21:21.992 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:21:21.994 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:21.997 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:21:22.052 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:22.052 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:21:22.053 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:21:22.056 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:22.057 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:21:22.057 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:21:22.112 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:21:22.112 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:21:22.113 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:22.113 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:21:22.114 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:21:22.129 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:21:22.130 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:21:22.131 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:22.132 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:21:22.133 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:21:22.176 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:21:22.177 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:21:22.198 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:21:22.198 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:21:22.302 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:22.302 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:22.302 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:22.338 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:22.339 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:21:22.340 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:21:22.367 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:22.368 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:22.369 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:22.369 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:22.370 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:22.371 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:22.371 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:22.408 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:22.409 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.410 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.412 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.455 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:22.518 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:22.518 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:22.518 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:22.577 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:22.578 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:22.578 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:22.579 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:22.579 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:22.580 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:22.580 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:22.640 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:21:22.705 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:22.705 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:21:22.706 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:21:22.804 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:22.804 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.805 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.805 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.806 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:21:22.806 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.806 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.807 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.807 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.808 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.808 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:21:22.809 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:21:22.809 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:21:22.809 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:21:22.810 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:21:22.810 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:21:22.811 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:21:22.811 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:21:22.812 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:21:22.812 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:21:22.813 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:21:34.327 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:34.393 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:34.394 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:34.394 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:34.462 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:34.463 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:34.463 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:34.464 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:34.464 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:34.464 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:34.464 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:34.540 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:21:34.605 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:34.605 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:21:34.605 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:21:34.682 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:34.683 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:21:34.683 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:21:34.684 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:21:34.684 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:21:34.685 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:21:34.756 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:21:34.760 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:21:34.761 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:21:34.763 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:34.825 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:34.825 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:21:34.825 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:21:34.829 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:34.829 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:21:34.830 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:21:34.830 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:21:34.830 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:21:34.830 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:21:34.896 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:21:34.896 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:21:34.896 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:21:34.897 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:21:34.897 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:21:34.897 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:21:34.897 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:21:34.898 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:21:34.898 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:21:34.898 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:34.898 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:21:34.898 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:21:34.899 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:21:34.899 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:21:34.961 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:21:34.962 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:21:34.965 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:21:34.965 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:21:35.033 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:35.033 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:35.034 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:35.100 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:35.101 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:35.102 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:35.103 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:35.104 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:35.105 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:35.106 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:35.201 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:21:35.264 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:35.265 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:21:35.266 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:21:35.330 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:21:35.330 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:21:35.331 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:21:35.331 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:21:35.331 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:21:35.332 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:21:35.332 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:21:35.402 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:21:35.471 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:21:35.471 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:21:35.472 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:21:35.579 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:21:35.580 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:21:35.582 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:21:35.583 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:21:35.584 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:21:35.585 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.585 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.586 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.586 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.587 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.587 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:21:35.588 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:21:35.588 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:21:35.589 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:21:35.589 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:21:35.590 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:21:35.591 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:21:35.591 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:21:35.592 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:21:35.592 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:21:35.593 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:06.814 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:06.882 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:06.882 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:06.883 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:06.952 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:06.952 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:06.953 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:06.953 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:06.953 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:06.953 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:06.954 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:07.033 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:22:07.103 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:07.103 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:22:07.103 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:22:07.180 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:07.181 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:07.183 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:07.184 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:07.185 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:07.186 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:07.278 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:07.281 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:07.284 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:22:07.285 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:07.342 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:22:07.342 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:07.342 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:07.344 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:07.344 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:07.344 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:07.345 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:07.345 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:07.345 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:07.347 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:07.347 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:22:07.348 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:22:07.410 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:07.412 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:07.413 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:07.413 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:07.415 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:07.415 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:07.416 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:07.416 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:07.417 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:07.418 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:07.419 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:07.420 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.420 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:07.421 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:07.421 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:07.422 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.422 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:07.423 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:07.423 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:07.424 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.424 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:07.501 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:07.501 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:07.502 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:07.502 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:07.515 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:07.577 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:07.577 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:07.578 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:07.647 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:07.648 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:07.648 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:07.649 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:07.649 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:07.650 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:07.650 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:07.719 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:22:07.788 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:07.788 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:22:07.788 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:22:07.898 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:07.898 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.899 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.899 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.899 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:22:07.900 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.900 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.900 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.900 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.901 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.901 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:22:07.901 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:22:07.902 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:22:07.902 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:22:07.902 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:07.903 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:22:07.903 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:22:07.903 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:07.903 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:07.904 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:07.905 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:14.001 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:14.132 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:14.132 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:14.133 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:14.202 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:14.203 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:14.204 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:14.204 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:14.204 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:14.205 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:14.205 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:14.402 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:22:14.587 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:14.588 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:22:14.588 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:22:14.662 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:14.663 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:14.664 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:14.665 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:14.665 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:14.665 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:14.743 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:14.745 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:14.811 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:14.812 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:14.813 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:14.813 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:14.814 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:14.815 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:14.880 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:14.880 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:14.881 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:14.881 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:14.882 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:14.947 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:14.948 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:14.948 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:14.948 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:17.581 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:17.656 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:17.657 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:17.658 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:17.729 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:17.730 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:17.731 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:17.731 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:17.732 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:17.732 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:17.732 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:17.810 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:22:17.881 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:17.882 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:22:17.883 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:22:17.963 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:17.965 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:17.966 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:17.968 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:17.969 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:17.970 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:18.055 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:18.057 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:18.138 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:18.138 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:18.138 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:18.139 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:18.139 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:18.139 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:18.210 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:18.212 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:18.212 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:18.213 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:18.213 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:18.213 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:18.214 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:18.214 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:18.214 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:18.215 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:18.276 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:18.277 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:18.290 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:18.291 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:27.811 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:27.882 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:27.882 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:27.882 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:27.951 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:27.952 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:27.952 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:27.952 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:27.953 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:27.953 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:27.953 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:28.034 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:22:28.102 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:28.102 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:22:28.103 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:22:28.180 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:28.181 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:22:28.181 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:28.181 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:28.182 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:28.182 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:28.260 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:28.261 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:22:28.262 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:22:28.262 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:28.325 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:22:28.325 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:28.326 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:28.329 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:28.329 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:28.329 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:28.329 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:22:28.329 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:28.331 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:28.331 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:22:28.331 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:22:28.332 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:22:28.395 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:28.396 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:28.397 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:28.398 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:28.399 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:22:28.399 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:28.399 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:28.400 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:28.401 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:22:28.402 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.403 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:28.404 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:22:28.404 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.405 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:28.405 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:28.405 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:22:28.406 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.406 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:28.407 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:28.407 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:22:28.409 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:22:28.475 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:28.476 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:28.476 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:22:28.476 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:22:28.484 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:22:28.549 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:28.550 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:22:28.551 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:22:28.614 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:22:28.615 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:22:28.615 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:22:28.615 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:22:28.615 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:22:28.616 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:22:28.616 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:22:28.686 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:22:28.761 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:22:28.762 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:22:28.764 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:22:28.864 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:22:28.865 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.865 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.866 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.866 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:22:28.866 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.866 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.866 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.867 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.867 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.867 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:22:28.867 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:22:28.867 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:22:28.868 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:22:28.868 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:22:28.868 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:22:28.868 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:22:28.868 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:22:28.869 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:22:28.869 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:22:28.869 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:23:45.439 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:23:45.542 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:45.542 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:23:45.543 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:23:45.617 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:23:45.618 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:23:45.619 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:23:45.620 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:23:45.621 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:23:45.622 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:23:45.623 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:23:45.715 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:23:45.785 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:45.786 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:23:45.786 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:23:45.863 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:23:45.863 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:23:45.864 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:23:45.865 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:23:45.865 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:23:45.865 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:23:45.959 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:45.960 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:46.029 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:46.029 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:46.030 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:46.030 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:46.030 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:46.031 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:46.100 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:46.100 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:46.102 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:46.102 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:46.104 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:46.104 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:46.105 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:46.105 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:46.106 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:46.106 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:46.171 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:46.172 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:46.172 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:46.173 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:53.073 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:23:53.608 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:53.609 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:23:53.609 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:23:53.882 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:23:53.883 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:23:53.885 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:23:53.886 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:23:53.887 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:23:53.888 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:23:53.889 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:23:54.064 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:23:54.132 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:54.133 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:23:54.133 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:23:54.216 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:23:54.218 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:23:54.219 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:23:54.220 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:23:54.221 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:23:54.222 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:23:54.305 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:54.307 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:54.309 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"1"]}
2019-02-12 21:23:54.373 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:54.373 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:54.374 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:54.374 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:54.374 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:23:54.374 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:54.374 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:54.375 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 1(String)
2019-02-12 21:23:54.375 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:54.444 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:54.444 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:23:54.444 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:54.445 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:54.445 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:23:54.445 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:54.446 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:54.446 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:54.446 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:54.447 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:54.447 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:54.447 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:54.511 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:54.512 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:54.512 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:54.513 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:54.522 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-12 21:23:54.583 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:54.584 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:23:54.586 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-12 21:23:54.659 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:23:54.660 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:23:54.660 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:23:54.660 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:23:54.661 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:23:54.661 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:23:56.292 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:23:57.231 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:57.231 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:23:57.232 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:23:57.442 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:23:57.443 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:23:57.445 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:23:57.446 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:23:57.447 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:23:57.448 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:23:57.449 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:23:57.798 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:23:57.917 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:57.918 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:23:57.919 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:23:57.994 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:23:57.995 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:23:57.997 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:23:57.998 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:23:57.999 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:23:58.000 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:23:58.090 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:58.090 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:23:58.092 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"2"]}
2019-02-12 21:23:58.158 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:58.158 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:58.158 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:58.163 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:58.163 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:23:58.163 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:58.163 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 2(String)
2019-02-12 21:23:58.164 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:23:58.164 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:23:58.228 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:58.229 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:58.229 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:23:58.229 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:58.230 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:58.230 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:23:58.230 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:23:58.230 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:23:58.230 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:23:58.231 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:23:58.231 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:23:58.231 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:23:58.292 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:58.293 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:58.293 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:23:58.294 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:23:58.297 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["2",null]}
2019-02-12 21:23:58.362 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:23:58.363 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:23:58.364 DEBUG c.c.m.A.findArticle - ==> Parameters: 2(String)
2019-02-12 21:23:58.440 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:23:58.441 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.442 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.444 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.445 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.447 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.448 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:23:58.450 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:00.607 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:00.810 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:00.810 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:00.810 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:00.968 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:00.969 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:00.969 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:00.969 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:00.969 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:00.969 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:00.970 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:01.042 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:01.105 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:01.105 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:01.105 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:01.177 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:01.177 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:01.178 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:01.178 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:01.179 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:01.179 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:01.249 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:01.249 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:01.252 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"3"]}
2019-02-12 21:24:01.313 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:01.313 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:01.313 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:01.313 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:01.314 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:01.314 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:01.314 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:01.314 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 3(String)
2019-02-12 21:24:01.315 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:01.375 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:01.375 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:01.376 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:01.376 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:01.376 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:01.377 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:01.377 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:01.377 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:01.378 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:01.378 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:01.379 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:01.379 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:01.439 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:01.439 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:01.440 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:01.440 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:01.443 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-12 21:24:01.506 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:01.506 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:01.507 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-12 21:24:01.584 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:01.585 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:24:01.586 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:24:01.586 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:24:01.587 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:24:01.587 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:24:01.588 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:01.588 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:01.588 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:04.219 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:04.288 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:04.288 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:04.288 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:04.359 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:04.359 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:04.360 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:04.360 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:04.361 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:04.361 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:04.361 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:04.436 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:04.504 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:04.505 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:04.505 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:04.581 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:04.582 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:04.582 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:04.582 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:04.583 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:04.583 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:04.658 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:04.659 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:04.661 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"4"]}
2019-02-12 21:24:04.725 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:04.726 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:04.726 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:04.726 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:04.726 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:04.726 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:04.726 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 4(String)
2019-02-12 21:24:04.727 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:04.727 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:04.796 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:04.796 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:04.797 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:04.797 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:04.797 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:04.797 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:04.798 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:04.798 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:04.798 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:04.799 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:04.799 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:04.799 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:04.866 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:04.866 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:04.867 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:04.868 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:04.870 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["4",null]}
2019-02-12 21:24:04.935 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:04.936 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:04.936 DEBUG c.c.m.A.findArticle - ==> Parameters: 4(String)
2019-02-12 21:24:05.011 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-12 21:24:29.493 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:29.556 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:29.557 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:29.557 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:29.629 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:29.630 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:29.631 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:29.632 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:29.632 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:29.633 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:29.635 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:29.749 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:29.811 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:29.812 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:29.813 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:29.884 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:29.885 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:29.886 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:29.887 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:29.888 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:29.889 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:29.978 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:29.981 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:29.982 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"4"]}
2019-02-12 21:24:30.039 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:30.039 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:30.039 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:30.048 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:30.048 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:30.048 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:30.048 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:30.049 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 4(String)
2019-02-12 21:24:30.049 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:30.102 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:30.103 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:30.105 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:30.106 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:30.108 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:30.109 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:30.110 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:30.114 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:30.115 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:30.118 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:30.120 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:30.121 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:30.173 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:30.174 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:30.186 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:30.187 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:30.189 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["4",null]}
2019-02-12 21:24:30.251 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:30.251 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:30.252 DEBUG c.c.m.A.findArticle - ==> Parameters: 4(String)
2019-02-12 21:24:30.328 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-12 21:24:31.084 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:31.147 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:31.148 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:31.148 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:31.210 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:31.210 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:31.211 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:31.211 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:31.211 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:31.211 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:31.212 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:31.282 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:31.343 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:31.344 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:31.344 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:31.413 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:31.414 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:31.415 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:31.417 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:31.419 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:31.420 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:31.503 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:31.505 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:31.507 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"4"]}
2019-02-12 21:24:31.573 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:31.573 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:31.573 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:31.573 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:31.573 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:31.573 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 4(String)
2019-02-12 21:24:31.574 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:31.574 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:31.574 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:31.641 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:31.641 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:31.642 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:31.642 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:31.642 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:31.644 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:31.644 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:31.646 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:31.647 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:31.648 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:31.649 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:31.651 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:31.710 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:31.710 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:31.714 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["4",null]}
2019-02-12 21:24:31.714 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:31.714 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:31.781 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:31.781 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:31.782 DEBUG c.c.m.A.findArticle - ==> Parameters: 4(String)
2019-02-12 21:24:31.852 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-12 21:24:40.079 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:40.143 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:40.144 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:40.144 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:40.205 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:40.206 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:40.206 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:40.206 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:40.206 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:40.207 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:40.207 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:40.289 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:40.355 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:40.355 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:40.355 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:40.428 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:40.429 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:40.429 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:40.429 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:40.429 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:40.430 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:40.517 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:40.520 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:24:40.520 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:40.520 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:40.583 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:24:40.583 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:40.584 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:40.585 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:40.585 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:40.585 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:40.585 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:40.586 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:40.586 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:40.586 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:40.587 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:24:40.587 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:24:40.652 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:40.652 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:40.652 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:40.653 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:40.653 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:40.653 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:40.653 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:40.654 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:40.654 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:40.654 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:40.655 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:40.655 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:40.655 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:40.655 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:40.655 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:40.656 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:40.656 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:40.657 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:40.657 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:24:40.657 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:24:40.658 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:24:40.715 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:40.715 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:40.716 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:40.717 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:40.736 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:40.805 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:40.805 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:40.806 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:40.875 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:40.875 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:40.876 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:40.876 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:40.876 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:40.876 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:40.877 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:40.948 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:24:41.016 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:41.017 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:24:41.019 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:24:41.128 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:41.129 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:24:41.130 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:24:41.131 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:24:41.132 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:24:41.132 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.133 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.135 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.135 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.136 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.136 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:24:41.137 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:24:41.138 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:24:41.138 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:24:41.139 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:41.139 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:24:41.140 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:24:41.140 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:41.140 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:41.141 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:41.141 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:41.982 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:42.047 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:42.047 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:42.047 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:42.121 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:42.122 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:42.122 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:42.122 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:42.122 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:42.122 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:42.123 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:42.200 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:42.265 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:42.266 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:42.266 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:42.344 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:42.344 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:42.345 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:42.345 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:42.345 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:42.346 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:42.431 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:42.436 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:42.500 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:42.500 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:42.500 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:42.500 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:42.500 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:42.501 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:42.569 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:42.569 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:42.570 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:42.570 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:42.571 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:42.571 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:42.571 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:42.571 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:42.572 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:42.572 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:42.636 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:42.637 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:42.637 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:42.638 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:46.436 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:46.502 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:46.502 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:46.503 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:46.572 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:46.573 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:46.573 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:46.573 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:46.573 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:46.574 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:46.574 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:46.649 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:46.718 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:46.719 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:46.720 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:46.798 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:46.799 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:46.799 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:46.799 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:46.800 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:46.800 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:46.877 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:46.877 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:46.882 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"5"]}
2019-02-12 21:24:46.947 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:46.947 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:46.948 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:46.948 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:46.948 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:46.949 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 5(String)
2019-02-12 21:24:46.949 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:46.950 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:46.952 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:47.019 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:47.019 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:47.019 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:47.020 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:47.020 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:47.021 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:47.021 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:47.022 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:47.022 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:47.023 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:47.023 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:47.023 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:47.098 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:47.098 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:47.099 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:47.100 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:47.111 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["5",null]}
2019-02-12 21:24:47.181 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:47.181 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:47.182 DEBUG c.c.m.A.findArticle - ==> Parameters: 5(String)
2019-02-12 21:24:47.257 DEBUG c.c.s.i.ArticleServiceImpl - 未查到任何文章信息
2019-02-12 21:24:51.147 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:51.213 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:51.214 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:51.214 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:51.278 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:51.279 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:51.280 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:51.280 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:51.280 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:51.280 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:51.280 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:51.351 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:51.411 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:51.411 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:51.412 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:51.481 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:51.481 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:51.481 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:51.481 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:51.482 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:51.482 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:51.577 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:51.579 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:51.581 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"1"]}
2019-02-12 21:24:51.703 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:51.703 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:51.703 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:51.703 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:51.703 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:24:51.704 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 1(String)
2019-02-12 21:24:51.704 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:51.704 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:51.704 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:51.773 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:51.773 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:51.773 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:51.773 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:51.774 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:24:51.774 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:51.774 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:51.774 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:51.774 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:51.775 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:51.775 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:51.775 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:51.839 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:51.840 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:51.840 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:51.842 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:51.849 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["1",null]}
2019-02-12 21:24:51.915 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:51.915 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:24:51.915 DEBUG c.c.m.A.findArticle - ==> Parameters: 1(String)
2019-02-12 21:24:51.992 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:51.992 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:24:51.992 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:24:51.993 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:24:51.993 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:24:51.993 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:53.838 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["92"]}
2019-02-12 21:24:53.908 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:53.908 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-12 21:24:53.908 DEBUG c.c.m.A.findDetailById - ==> Parameters: 92(String)
2019-02-12 21:24:53.978 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-12 21:24:53.978 DEBUG c.c.m.A.findDetailById - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术, , 
2019-02-12 21:24:54.143 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:24:54.264 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:54.264 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:24:54.264 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:24:54.328 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:24:54.328 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:24:54.328 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:24:54.329 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:24:54.329 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:24:54.329 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:24:54.329 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:24:54.402 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:24:54.471 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:54.471 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:24:54.472 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:24:54.546 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:24:54.547 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:24:54.548 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:24:54.549 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:24:54.550 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:24:54.551 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:24:54.639 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:54.640 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:24:54.708 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:54.708 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:54.708 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:54.711 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:54.711 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:24:54.711 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:24:54.778 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:54.779 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:24:54.779 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:54.780 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:24:54.782 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:24:54.782 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:24:54.783 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:54.783 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:24:54.784 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:54.785 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:24:54.845 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:54.846 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:24:54.850 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:24:54.851 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:18.676 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["92"]}
2019-02-12 21:25:18.744 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:18.744 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-12 21:25:18.744 DEBUG c.c.m.A.findDetailById - ==> Parameters: 92(String)
2019-02-12 21:25:18.807 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-12 21:25:18.808 DEBUG c.c.m.A.findDetailById - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术, , 
2019-02-12 21:25:18.912 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:25:18.976 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:18.976 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:25:18.976 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:25:19.038 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:25:19.038 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:25:19.038 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:25:19.038 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:25:19.039 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:25:19.039 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:25:19.039 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:25:19.112 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:25:19.174 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:19.175 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:25:19.175 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:25:19.244 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:25:19.245 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:25:19.245 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:25:19.245 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:25:19.245 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:25:19.246 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:25:19.325 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:19.328 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:19.390 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:19.451 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:19.452 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:19.452 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:19.452 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:25:19.452 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:19.452 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:19.453 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:19.453 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:19.453 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:19.453 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:19.517 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:19.518 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:19.518 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:19.519 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:25.119 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:25:25.187 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:25.187 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:25:25.187 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:25:25.257 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:25:25.258 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:25:25.258 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:25:25.258 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:25:25.258 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:25:25.259 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:25:25.259 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:25:25.340 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:25:25.409 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:25.409 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:25:25.410 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:25:25.488 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:25:25.489 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:25:25.490 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:25:25.491 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:25:25.491 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:25:25.492 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:25:25.568 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:25.571 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:25.572 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:25:25.572 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:25:25.637 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:25:25.637 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:25:25.638 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:25:25.640 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:25.641 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:25:25.641 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:25:25.641 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:25:25.641 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:25.642 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:25.642 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:25.642 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:25.642 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:25.705 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:25.705 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:25:25.706 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:25:25.706 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:25.706 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:25.707 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:25:25.708 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:25:25.708 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:25.710 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:25:25.710 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:25:25.711 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:25:25.712 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:25.713 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:25.713 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:25:25.714 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:25:25.715 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:25.716 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:25.717 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:25:25.719 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:25.721 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:25:25.722 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:25:25.788 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:25.789 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:25.789 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:25.790 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:25.810 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:25:25.878 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:25.879 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:25:25.879 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:25:25.949 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:25:25.950 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:25:25.951 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:25:25.953 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:25:25.954 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:25:25.954 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:25:25.954 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:25:26.020 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:25:26.083 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:26.083 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:25:26.083 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:25:26.187 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:25:26.187 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:25:26.188 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:25:26.189 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:25:26.189 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:25:26.190 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.190 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.191 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.191 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.192 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.192 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:25:26.193 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:25:26.193 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:25:26.194 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:25:26.195 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:25:26.195 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:25:26.196 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:25:26.197 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:25:26.197 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:25:26.198 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:25:26.199 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:25:51.509 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["28"]}
2019-02-12 21:25:51.577 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:51.577 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-12 21:25:51.578 DEBUG c.c.m.A.findDetailById - ==> Parameters: 28(String)
2019-02-12 21:25:51.712 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-12 21:25:51.712 DEBUG c.c.m.A.findDetailById - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端, <h3 id="h3-u7ACBu6B63u5411u524Du8D70"><a name="立正向前走" class="reference-link"></a><span class="header-link octicon octicon-link"></span>立正向前走</h3><p>&nbsp;&nbsp;&nbsp;我们总有这样的茫然时刻，风霜雪雨中，我提着自己的手提箱，问自己我要往哪去?该回去还是继续向前?此时，我们知道应该赶路，却不得不停下来，因为这一刻意义太重大，一念之间决定了我们以后的路。</p>
<p>&nbsp;&nbsp;&nbsp;走到生命的哪一个阶段，都该喜欢那一段时光，完成那一阶段该完成的职责，顺生而行，不沉迷过去，不狂热地期待着未来，生命这样就好。不管正经历着怎样的挣扎与挑战，或许我们都只有一个选择：虽然痛苦，却依然要快乐，并相信未来。</p>
<p>&nbsp;&nbsp;&nbsp;世上最凄绝的距离是两个人本来距离很远，互不相识，忽然有一天，他们相识，相爱，距离变得很近。然后有一天，不再相爱了，本来很近的两个人，变得很远，甚至比以前更远。</p>
<p>&nbsp;&nbsp;&nbsp;我不习惯把自己心里的痛苦展示给别人，因为我怕别人安慰，也不想得到怜悯。相比于弱者的倾诉和哭泣，我更喜欢强者的骄傲和被仰望。心里乌云密布，面上不动声色。就算被误解，也不澄清，不解释，不在乎，把这些都当前行的力量。</p>
<p>&nbsp;&nbsp;&nbsp;为什么我们总是不懂得珍惜眼前人?在未可预知的重逢里，我们以为总会重逢，总会有缘再会，总以为有机会说一声对不起，却从没想过每一次挥手道别，都可能是诀别，每一声叹息，都可能是人间最后的一声叹息。</p>
<p>&nbsp;&nbsp;&nbsp;没有誓言的爱情才是最可靠的爱情。爱情是与誓言无关的。但有趣的是，大多女人都喜欢听男人的誓言，即便是在心里并不把男人的誓言当真，也是听着幸福无比。</p>
<p>&nbsp;&nbsp;&nbsp;如果生活是一杯水，那么痛苦就是掉落杯中的灰尘。我们可以选择让心静下来，慢慢沉淀那些痛苦。如果总是不断地去搅和，痛苦就会充满我们的生活。</p>
<p>&nbsp;&nbsp;&nbsp;年轻时，我不要你们心如止水，我要你们妖孽横行。我不要你们收敛锋芒，我要你们跋扈张扬。我不要你们平淡青春，我要你们嚣张挥霍。总之，要笑要哭，要爱要痛。因为很久很久以后，这段光芒万丈的回忆，会帮你度过很多很多，你以为不能度过的苦难时期。</p>
<p>&nbsp;&nbsp;&nbsp;你的脆弱，也是你的坚强。</p>
<p>&nbsp;&nbsp;&nbsp;爱情如此使人着迷，是不是正因为它是靠不住的?明知道它是水，是无根的，我们却用一双手和一双脚想要去拦住它。直到一天，当它翻起的波涛差点儿把我们淹没，我们才发现，即使再多出十双手和十双脚，要走的东西，终究是拦不住的。</p>
<p>&nbsp;&nbsp;&nbsp;当初你有胆量去选，同样该有勇气把后果承受。</p>
<p>&nbsp;&nbsp;&nbsp;很多时候，面对那些原本以为过不去的坎，面对那些一时无法接受的事，我们能做的只是沉默，沉默的等这一阵过去。相信这一夜的痛哭过后，还有新的早晨。活在世上遇到的悲伤是很多的，但欢乐也有。即使欢乐的日子比哭泣的日子少太多，这个世界，仍值得我们为之走一遭。</p>
<p>&nbsp;&nbsp;&nbsp;在寂静中我唯一能听到的，只剩下那些我说不出来的话。我爱你，一直很爱你，以后也是。</p>
<p>&nbsp;&nbsp;&nbsp;人们不解释的主要原因是根本不在乎对方的想法，无关重要的人，对无关重要的事有点儿误会，有什么关系。你信也好，不信也好，都于当事人生活毫无影响，何劳解释。</p>
<p>&nbsp;&nbsp;&nbsp;既然一事无成，那你还有什么好失去的，鼓起勇气面对一切难堪，打败它吧!只要不放弃一切幸福的信念，我相信，一定会有好事发生!</p>
<p>&nbsp;&nbsp;&nbsp;有些时候我觉得很好笑，那些在我们记忆里占据很小一部分的人，你竟然一辈子都忘不掉。</p>
<pre><code>人生太短，所以笑吧，趁你现在还有牙齿时。
</code></pre><p>&nbsp;&nbsp;&nbsp;我们不怕目标定得高远，只怕没有追寻的勇气、热情和执著。只要心头时时燃烧着坚定的信念，一往无前地行进下去，就会惊讶地发现：很多所谓的远方其实并不遥远。</p>
<p>&nbsp;&nbsp;&nbsp;一个人总有一天会明白，忌妒是无用的，而模仿他人无异于自杀。因为不论好坏，人只有自己才能帮助自己，只有耕种自己的田地，才能收获自家的玉米。</p>
, ### 立正向前走
&nbsp;&nbsp;&nbsp;我们总有这样的茫然时刻，风霜雪雨中，我提着自己的手提箱，问自己我要往哪去?该回去还是继续向前?此时，我们知道应该赶路，却不得不停下来，因为这一刻意义太重大，一念之间决定了我们以后的路。

 

&nbsp;&nbsp;&nbsp;走到生命的哪一个阶段，都该喜欢那一段时光，完成那一阶段该完成的职责，顺生而行，不沉迷过去，不狂热地期待着未来，生命这样就好。不管正经历着怎样的挣扎与挑战，或许我们都只有一个选择：虽然痛苦，却依然要快乐，并相信未来。

 

&nbsp;&nbsp;&nbsp;世上最凄绝的距离是两个人本来距离很远，互不相识，忽然有一天，他们相识，相爱，距离变得很近。然后有一天，不再相爱了，本来很近的两个人，变得很远，甚至比以前更远。

 

&nbsp;&nbsp;&nbsp;我不习惯把自己心里的痛苦展示给别人，因为我怕别人安慰，也不想得到怜悯。相比于弱者的倾诉和哭泣，我更喜欢强者的骄傲和被仰望。心里乌云密布，面上不动声色。就算被误解，也不澄清，不解释，不在乎，把这些都当前行的力量。

 

&nbsp;&nbsp;&nbsp;为什么我们总是不懂得珍惜眼前人?在未可预知的重逢里，我们以为总会重逢，总会有缘再会，总以为有机会说一声对不起，却从没想过每一次挥手道别，都可能是诀别，每一声叹息，都可能是人间最后的一声叹息。

 

&nbsp;&nbsp;&nbsp;没有誓言的爱情才是最可靠的爱情。爱情是与誓言无关的。但有趣的是，大多女人都喜欢听男人的誓言，即便是在心里并不把男人的誓言当真，也是听着幸福无比。

 

&nbsp;&nbsp;&nbsp;如果生活是一杯水，那么痛苦就是掉落杯中的灰尘。我们可以选择让心静下来，慢慢沉淀那些痛苦。如果总是不断地去搅和，痛苦就会充满我们的生活。

 

&nbsp;&nbsp;&nbsp;年轻时，我不要你们心如止水，我要你们妖孽横行。我不要你们收敛锋芒，我要你们跋扈张扬。我不要你们平淡青春，我要你们嚣张挥霍。总之，要笑要哭，要爱要痛。因为很久很久以后，这段光芒万丈的回忆，会帮你度过很多很多，你以为不能度过的苦难时期。

 

&nbsp;&nbsp;&nbsp;你的脆弱，也是你的坚强。

 

&nbsp;&nbsp;&nbsp;爱情如此使人着迷，是不是正因为它是靠不住的?明知道它是水，是无根的，我们却用一双手和一双脚想要去拦住它。直到一天，当它翻起的波涛差点儿把我们淹没，我们才发现，即使再多出十双手和十双脚，要走的东西，终究是拦不住的。

 

&nbsp;&nbsp;&nbsp;当初你有胆量去选，同样该有勇气把后果承受。

 

&nbsp;&nbsp;&nbsp;很多时候，面对那些原本以为过不去的坎，面对那些一时无法接受的事，我们能做的只是沉默，沉默的等这一阵过去。相信这一夜的痛哭过后，还有新的早晨。活在世上遇到的悲伤是很多的，但欢乐也有。即使欢乐的日子比哭泣的日子少太多，这个世界，仍值得我们为之走一遭。

 

&nbsp;&nbsp;&nbsp;在寂静中我唯一能听到的，只剩下那些我说不出来的话。我爱你，一直很爱你，以后也是。

 

&nbsp;&nbsp;&nbsp;人们不解释的主要原因是根本不在乎对方的想法，无关重要的人，对无关重要的事有点儿误会，有什么关系。你信也好，不信也好，都于当事人生活毫无影响，何劳解释。

 

&nbsp;&nbsp;&nbsp;既然一事无成，那你还有什么好失去的，鼓起勇气面对一切难堪，打败它吧!只要不放弃一切幸福的信念，我相信，一定会有好事发生!

 

&nbsp;&nbsp;&nbsp;有些时候我觉得很好笑，那些在我们记忆里占据很小一部分的人，你竟然一辈子都忘不掉。

 

    人生太短，所以笑吧，趁你现在还有牙齿时。

 

&nbsp;&nbsp;&nbsp;我们不怕目标定得高远，只怕没有追寻的勇气、热情和执著。只要心头时时燃烧着坚定的信念，一往无前地行进下去，就会惊讶地发现：很多所谓的远方其实并不遥远。

 

&nbsp;&nbsp;&nbsp;一个人总有一天会明白，忌妒是无用的，而模仿他人无异于自杀。因为不论好坏，人只有自己才能帮助自己，只有耕种自己的田地，才能收获自家的玉米。
2019-02-12 21:25:51.883 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:25:51.950 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:51.950 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:25:51.951 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:25:52.010 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:25:52.011 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:25:52.011 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:25:52.012 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:25:52.012 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:25:52.012 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:25:52.013 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:25:52.091 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:25:52.152 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:52.154 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:25:52.154 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:25:52.230 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:25:52.231 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:25:52.232 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:25:52.233 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:25:52.234 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:25:52.235 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:25:52.323 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:52.325 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:25:52.384 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:52.384 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:52.385 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:52.388 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:52.388 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:25:52.389 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:25:52.448 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:52.448 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:52.449 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:25:52.449 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:52.449 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:52.452 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:25:52.452 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:25:52.452 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:25:52.453 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:25:52.453 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:25:52.509 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:52.509 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:25:52.512 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:25:52.512 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:19.021 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:20.314 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:26:20.315 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:20.316 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:21.249 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:21.250 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:21.251 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:21.251 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:21.252 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:21.252 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:21.253 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:22.308 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:26:22.729 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:26:22.730 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:26:22.731 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:26:22.844 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:22.845 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:22.846 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:22.846 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:22.847 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:22.847 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:22.960 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:22.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:22.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:22.962 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:26:23.048 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:23.048 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:26:23.048 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:23.048 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:23.048 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:26:23.048 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:23.048 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:23.049 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:23.049 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:26:23.049 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:23.049 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:23.050 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:23.111 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:23.111 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:23.112 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:26:23.112 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:23.112 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:23.113 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:23.113 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:23.113 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:23.113 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:23.114 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:23.114 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:23.114 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:23.114 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:23.115 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:23.115 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:23.115 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.115 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:23.116 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.116 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:23.116 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.116 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:23.175 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:23.176 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:23.176 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:23.177 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:23.189 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:23.252 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:23.252 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:23.253 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:23.317 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:23.318 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:23.318 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:23.319 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:23.319 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:23.319 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:23.320 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:23.382 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:26:23.443 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:23.443 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:26:23.443 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:26:23.548 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:23.549 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.550 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.551 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.551 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:26:23.552 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.553 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.553 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.554 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.554 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.554 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:26:23.555 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:26:23.555 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:26:23.555 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:23.555 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:23.556 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:26:23.556 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:26:23.556 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:23.557 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:23.557 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:23.557 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:23.708 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:23.767 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:23.767 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:23.768 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:23.832 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:23.832 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:23.833 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:23.833 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:23.833 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:23.834 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:23.834 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:23.903 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:26:23.966 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:23.967 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:26:23.968 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:26:24.037 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:24.038 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:24.038 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:24.038 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:24.038 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:24.039 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:24.124 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:24.127 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:24.129 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:26:24.133 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:24.185 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:24.186 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:24.186 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:24.188 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:24.188 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:24.189 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:24.191 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5271e520]
2019-02-12 21:26:24.191 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:26:24.192 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:26:24.205 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:24.206 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:24.206 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:24.247 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:24.247 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:24.248 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:24.248 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:24.248 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:24.252 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:24.253 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:24.253 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:24.254 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:24.254 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:24.261 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:24.261 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.261 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.261 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.263 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:24.264 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:24.264 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:24.264 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:24.264 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:24.264 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:24.265 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:24.321 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:24.321 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:24.323 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:24.323 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:24.347 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:24.493 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:24.493 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:24.493 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:24.560 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:24.561 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:24.562 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:24.563 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:24.564 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:24.565 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:24.566 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:24.633 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:26:24.693 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:24.693 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:26:24.694 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:26:24.793 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:26:24.794 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:26:24.795 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:26:24.795 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:24.795 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:24.795 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:26:24.795 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:26:24.796 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:24.796 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:24.796 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:24.796 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:48.766 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:48.830 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:48.830 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:48.830 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:48.894 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:48.895 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:48.895 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:48.895 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:48.895 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:48.896 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:48.896 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:48.969 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:26:49.034 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:49.034 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:26:49.034 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:26:49.104 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:49.105 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:49.105 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:49.105 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:49.105 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:49.105 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:49.183 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:49.186 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:49.190 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:49.251 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:49.251 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:49.252 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:49.255 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:49.255 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:49.255 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:49.256 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:49.256 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:49.256 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:49.319 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:49.320 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:49.320 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:49.321 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:49.321 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:49.321 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:49.321 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:49.322 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:49.322 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:49.322 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:49.323 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:49.323 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:49.323 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:49.323 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:49.323 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:49.324 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:49.324 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:49.384 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:49.384 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:49.387 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:49.387 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:49.390 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:26:49.455 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:49.457 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:26:49.458 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:26:49.566 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:49.567 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:26:49.567 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:26:49.568 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:26:49.569 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:26:49.569 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.570 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.571 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.572 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.573 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.573 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:26:49.574 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:26:49.575 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:26:49.575 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:26:49.576 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:49.577 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:26:49.577 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:26:49.578 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:49.579 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:49.579 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:49.580 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:52.403 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:52.555 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:52.555 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:52.555 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:52.826 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:52.827 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:52.827 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:52.827 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:52.827 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:52.828 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:52.828 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:53.051 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:26:53.271 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:53.272 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:26:53.272 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:26:53.382 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:53.384 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:53.385 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:53.386 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:53.387 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:53.389 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:53.475 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:53.477 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:53.479 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],"3"]}
2019-02-12 21:26:53.537 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:53.538 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) AND dm = ? 
2019-02-12 21:26:53.539 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String), 3(String)
2019-02-12 21:26:53.539 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:53.540 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:53.540 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:53.543 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:53.543 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:53.544 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:53.608 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:53.609 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:53.612 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:53.612 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:53.613 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:53.614 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:53.615 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@5d16cbd5]
2019-02-12 21:26:53.616 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:53.616 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:53.617 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:53.618 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:53.619 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:53.771 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:53.772 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:53.776 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:53.777 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:53.781 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":["3",null]}
2019-02-12 21:26:53.842 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:53.842 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' AND B.dm = ? ORDER BY A.updatetime DESC 
2019-02-12 21:26:53.844 DEBUG c.c.m.A.findArticle - ==> Parameters: 3(String)
2019-02-12 21:26:53.918 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:53.918 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:26:53.919 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:26:53.919 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:26:53.919 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:26:53.920 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:26:53.920 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:53.921 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:53.921 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:57.468 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_DETAIL","params":["81"]}
2019-02-12 21:26:57.533 DEBUG c.c.m.A.findDetailById - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:57.534 DEBUG c.c.m.A.findDetailById - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName,htmlContent,content FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' WHERE A.id = ? 
2019-02-12 21:26:57.534 DEBUG c.c.m.A.findDetailById - ==> Parameters: 81(String)
2019-02-12 21:26:57.603 DEBUG c.c.m.A.findDetailById - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms, htmlContent, content
2019-02-12 21:26:57.604 DEBUG c.c.m.A.findDetailById - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发, <p>测试</p>
, 测试
2019-02-12 21:26:57.722 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:26:57.788 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:57.788 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:26:57.788 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:26:57.853 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:26:57.853 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:26:57.854 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:26:57.854 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:26:57.855 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:26:57.855 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:26:57.855 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:26:57.946 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:26:58.009 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:58.009 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:26:58.009 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:26:58.076 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:26:58.077 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:26:58.077 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:26:58.077 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:26:58.077 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:26:58.077 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:26:58.146 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:58.147 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:26:58.203 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:58.203 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:58.204 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:58.207 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:58.207 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:26:58.207 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:26:58.264 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:58.265 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:58.266 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@742db14a]
2019-02-12 21:26:58.266 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:58.267 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:58.273 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:26:58.273 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:26:58.274 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@44c34dd5]
2019-02-12 21:26:58.275 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:26:58.275 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:26:58.326 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:58.326 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:26:58.344 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:26:58.345 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:33:47.469 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:33:48.216 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.217 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:33:48.217 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:33:48.280 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:33:48.280 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:33:48.281 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:33:48.281 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:33:48.281 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:33:48.282 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:33:48.283 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:33:48.357 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:33:48.421 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.422 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:33:48.422 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:33:48.499 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:33:48.500 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:33:48.502 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:33:48.503 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:33:48.504 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:33:48.505 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:33:48.578 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:33:48.580 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:33:48.580 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:33:48.580 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_LATEST_ARTICLE","params":[3]}
2019-02-12 21:33:48.641 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.642 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:33:48.642 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:33:48.703 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:33:48.704 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:33:48.704 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.705 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:33:48.705 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:33:48.768 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:33:48.769 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:33:48.898 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.898 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:33:48.899 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:33:48.964 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:33:48.964 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:33:48.965 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:48.966 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:33:48.966 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:33:49.022 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:33:49.023 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:33:49.142 DEBUG c.c.m.A.findLatestArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:33:49.143 DEBUG c.c.m.A.findLatestArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC LIMIT ? 
2019-02-12 21:33:49.144 DEBUG c.c.m.A.findLatestArticle - ==> Parameters: 3(Integer)
2019-02-12 21:33:49.186 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:33:49.186 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:33:49.187 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:33:49.217 DEBUG c.c.m.A.findLatestArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:33:49.217 DEBUG c.c.m.A.findLatestArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.218 DEBUG c.c.m.A.findLatestArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.219 DEBUG c.c.m.A.findLatestArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.250 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:33:49.250 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:33:49.251 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:33:49.252 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:33:49.252 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:33:49.252 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:33:49.252 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:33:49.327 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:33:49.390 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:33:49.390 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:33:49.391 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:33:49.452 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:33:49.455 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:33:49.456 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:33:49.457 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:33:49.458 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:33:49.459 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:33:49.459 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:33:49.537 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST","params":[null,null]}
2019-02-12 21:33:49.597 DEBUG c.c.m.A.findArticle - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:33:49.597 DEBUG c.c.m.A.findArticle - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.updatetime DESC 
2019-02-12 21:33:49.598 DEBUG c.c.m.A.findArticle - ==> Parameters: 
2019-02-12 21:33:49.699 DEBUG c.c.m.A.findArticle - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:33:49.700 DEBUG c.c.m.A.findArticle - <==        Row: 92, 测试5, ces 22233, 2019-02-06 19:48:48.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.701 DEBUG c.c.m.A.findArticle - <==        Row: 91, 测试5, ces 22233, 2019-02-06 19:48:47.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.701 DEBUG c.c.m.A.findArticle - <==        Row: 90, 测试5, ces 22233, 2019-02-06 19:48:46.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.702 DEBUG c.c.m.A.findArticle - <==        Row: 89, 测试5, ces 22233, 2019-02-06 19:48:44.0, 0, null, 1, 后端技术
2019-02-12 21:33:49.702 DEBUG c.c.m.A.findArticle - <==        Row: 88, 测试5, ces 22233, 2019-02-06 19:48:40.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.702 DEBUG c.c.m.A.findArticle - <==        Row: 87, 测试5, ces 22233, 2019-02-06 19:48:38.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.702 DEBUG c.c.m.A.findArticle - <==        Row: 86, 测试4, ces 22233, 2019-02-06 19:48:35.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.703 DEBUG c.c.m.A.findArticle - <==        Row: 85, 测试4, ces 22233, 2019-02-06 19:48:34.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.703 DEBUG c.c.m.A.findArticle - <==        Row: 84, 测试3, ces 22233, 2019-02-06 19:48:31.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.703 DEBUG c.c.m.A.findArticle - <==        Row: 83, 测试2, ces 222, 2019-02-06 19:48:25.0, 0, null, 3, 移动开发
2019-02-12 21:33:49.703 DEBUG c.c.m.A.findArticle - <==        Row: 82, 测试1, ces , 2019-02-06 19:48:21.0, 0, null, 3, 移动开发
2019-02-12 21:33:49.703 DEBUG c.c.m.A.findArticle - <==        Row: 81, 测试, 测试, 2019-02-06 18:53:32.0, 0, null, 3, 移动开发
2019-02-12 21:33:49.704 DEBUG c.c.m.A.findArticle - <==        Row: 80, 过年了, 过年了，洗刷刷, 2019-02-06 18:46:31.0, 0, null, 2, 网站前端
2019-02-12 21:33:49.704 DEBUG c.c.m.A.findArticle - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:33:49.704 DEBUG c.c.m.A.findArticle - <==        Row: 79, JAVA服务端通用数据导入导出组件V1.0, 工作中经常会遇到excel文件导入导出这类业务需求, 这些需求其实从根本上看都是对excel的解析处理,因此本人特地花了两天时间用JAVA写了一套通用的导入导出工具组件，为以后实现这类需求提高效率。组件源码地址：https://github.com/CodingGyd/project/tree/master/excel-utils, 2017-12-03 14:47:34.0, 17674, null, 3, 移动开发
2019-02-12 21:33:49.704 DEBUG c.c.m.A.findArticle - <==        Row: 78, 分布式文件系统FastDFS《一》, 博客文章需要用到图片文件，图片资源是保存在单独的文件服务器上。本博客的文件服务器是由FastDFS搭建的。FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。, 2017-11-06 20:51:27.0, 19608, null, 3, 移动开发
2019-02-12 21:33:49.704 DEBUG c.c.m.A.findArticle - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:33:49.705 DEBUG c.c.m.A.findArticle - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:33:49.705 DEBUG c.c.m.A.findArticle - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:33:49.705 DEBUG c.c.m.A.findArticle - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:34:07.043 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:34:07.112 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:07.112 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:34:07.113 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:34:07.182 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:34:07.183 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:34:07.183 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:34:07.183 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:34:07.184 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:34:07.184 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:34:07.184 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:34:07.259 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:34:07.329 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:07.330 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:34:07.331 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:34:07.409 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:34:07.410 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:34:07.411 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:34:07.412 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:34:07.413 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:34:07.414 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:34:07.491 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:34:07.492 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:34:07.549 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:34:07.550 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:34:07.551 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:34:07.552 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:07.553 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:34:07.554 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:34:07.616 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:34:07.617 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:34:07.618 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:34:07.619 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:34:07.619 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:34:07.619 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:34:07.620 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:34:07.620 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:07.620 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:34:07.621 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:34:07.682 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:34:07.683 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:34:07.685 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:34:07.686 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:34:13.838 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_CONST","params":[["100"],null]}
2019-02-12 21:34:13.909 DEBUG c.c.m.S.listConst - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:13.909 DEBUG c.c.m.S.listConst - ==>  Preparing: SELECT id,lb,lbmc,dm,ms,updatetime,remarks FROM mine_sysconst WHERE 1=1 AND lb IN ( ? ) 
2019-02-12 21:34:13.910 DEBUG c.c.m.S.listConst - ==> Parameters: 100(String)
2019-02-12 21:34:13.978 DEBUG c.c.m.S.listConst - <==    Columns: id, lb, lbmc, dm, ms, updatetime, remarks
2019-02-12 21:34:13.979 DEBUG c.c.m.S.listConst - <==        Row: 1, 100, 文章分类, 1, 后端技术, 2017-09-22 23:48:20.0, 记录笔者平常用到的一些学习资料网站
2019-02-12 21:34:13.979 DEBUG c.c.m.S.listConst - <==        Row: 2, 100, 文章分类, 2, 网站前端, 2017-09-22 23:48:20.0, 记录笔者的生活
2019-02-12 21:34:13.979 DEBUG c.c.m.S.listConst - <==        Row: 3, 100, 文章分类, 3, 移动开发, 2017-09-22 23:48:20.0, 记录笔者平常技术学习用到的东东
2019-02-12 21:34:13.979 DEBUG c.c.m.S.listConst - <==        Row: 4, 100, 文章分类, null, 文章汇总, 2019-02-06 20:28:41.0, 记录笔者的技术文章、生活日记以及一些其它感悟
2019-02-12 21:34:13.979 DEBUG c.c.m.S.listConst - <==        Row: 5, 100, 文章分类, 4, 数据库, 2019-02-07 12:47:24.0, 记录数据库开发时遇到的各种知识点
2019-02-12 21:34:13.980 DEBUG c.c.m.S.listConst - <==        Row: 6, 100, 文章分类, 5, 算法, 2019-02-07 12:47:48.0, 记录各种常用算法
2019-02-12 21:34:14.052 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_ARTICLE_LIST_RANK_TOP","params":[10]}
2019-02-12 21:34:14.117 DEBUG c.c.m.A.findArticleOrderByClickCount - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:14.118 DEBUG c.c.m.A.findArticleOrderByClickCount - ==>  Preparing: SELECT A.id,title,descs,A.updatetime,readingcount,url,type,B.ms typeName FROM mine_articles A INNER JOIN mine_sysconst B ON A.type = B.dm AND B.lb = '100' ORDER BY A.readingcount DESC LIMIT 5 
2019-02-12 21:34:14.118 DEBUG c.c.m.A.findArticleOrderByClickCount - ==> Parameters: 
2019-02-12 21:34:14.198 DEBUG c.c.m.A.findArticleOrderByClickCount - <==    Columns: id, title, descs, updatetime, readingcount, url, type, ms
2019-02-12 21:34:14.199 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 28, 立正向前走, 立正向前走, 2017-11-01 20:15:16.0, 21333, null, 2, 网站前端
2019-02-12 21:34:14.200 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 35, 个人博客版本更新记录(持续更新中...), 这里记录博主开发本博客的版本更新记录, 2017-11-01 22:40:58.0, 21282, null, 3, 移动开发
2019-02-12 21:34:14.201 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 36, 个人博客网站开发-域名备案流程, 简单记录一下本网站从域名申请到可以直接通过域名访问所需要完成的一些操作, 2017-11-01 22:55:53.0, 21219, null, 3, 移动开发
2019-02-12 21:34:14.202 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 27, sqlserver数据库数据类型与java数据类型对应表, sqlserver数据库数据类型与java数据类型对应表, 2017-11-01 22:43:50.0, 21175, null, 3, 移动开发
2019-02-12 21:34:14.203 DEBUG c.c.m.A.findArticleOrderByClickCount - <==        Row: 33, 资料网站合集(持续更新中...), 这里记录博主平常学习时会逛的IT资讯、工具网站地址, 2018-03-23 09:00:35.0, 21128, null, 1, 后端技术
2019-02-12 21:34:14.280 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:34:14.281 INFO  c.c.c.MineController - POST 参数:{"serviceId":"MINE_SITE_INFORMATION","params":[]}
2019-02-12 21:34:14.344 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:34:14.344 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:34:14.344 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:34:14.348 DEBUG c.c.m.S.getSiteInformation - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:14.348 DEBUG c.c.m.S.getSiteInformation - ==>  Preparing: SELECT site_create_time timeOfSiteCreate,remarks FROM mine_siteinformation 
2019-02-12 21:34:14.348 DEBUG c.c.m.S.getSiteInformation - ==> Parameters: 
2019-02-12 21:34:14.408 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:34:14.408 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:34:14.408 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@7aabcb79]
2019-02-12 21:34:14.409 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:34:14.409 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:34:14.412 DEBUG c.c.m.S.getSiteInformation - <==    Columns: site_create_time, remarks
2019-02-12 21:34:14.412 DEBUG c.c.m.S.getSiteInformation - <==        Row: 2019-02-12 20:50:22.0, 网站介绍
2019-02-12 21:34:14.413 DEBUG c.c.m.S.getNumsOfArticles - ooo Using Connection [com.mysql.jdbc.JDBC4Connection@25a58fc]
2019-02-12 21:34:14.413 DEBUG c.c.m.S.getNumsOfArticles - ==>  Preparing: SELECT COUNT(1) FROM mine_articles 
2019-02-12 21:34:14.413 DEBUG c.c.m.S.getNumsOfArticles - ==> Parameters: 
2019-02-12 21:34:14.473 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:34:14.473 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
2019-02-12 21:34:14.477 DEBUG c.c.m.S.getNumsOfArticles - <==    Columns: COUNT(1)
2019-02-12 21:34:14.477 DEBUG c.c.m.S.getNumsOfArticles - <==        Row: 22
