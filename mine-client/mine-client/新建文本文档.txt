正则表达式-验证SQL是否是合法的SELECT语句
/**
 * 检查sql是否合法, 限制只能为查询的sql
 * @param script
 * @return
 */
private boolean checkScript(String script){
		
	if (StringUtils.isEmpty(script)){
		return false;
	}
		
	String column="(\\w+\\s*(\\w+\\s*){0,1})";//一列的正则表达式 匹配如 product p
	String columns=column+"(,\\s*"+column+")*"; //多列正则表达式 匹配如 product p,category c,warehouse w
	String ownerenable="((\\w+\\.){0,1}\\w+\\s*(\\w+\\s*){0,1})";//一列的正则表达式 匹配如 a.product p
	String ownerenables=ownerenable+"(,\\s*"+ownerenable+")*";//多列正则表达式 匹配如 a.product p,a.category c,b.warehouse w
	String top = "(\\s*TOP\\s+[0-9]{1,}\\s*){0,1}";//匹配如TOP 1 
	String from="FROM\\s+"+columns;
	String condition="(\\w+\\.){0,1}\\w+\\s*(>|<|>=|<=|=|LIKE|IS)\\s*?(\\w+\\.){0,1}[\\w%]+?";//条件的正则表达式 匹配如 a=b 或 a is b..
	String conditions=condition+"(\\s+(AND|OR)\\s*"+condition+"\\s*)*";//多个条件 匹配如 a=b and c like "r%" or d is null 
	String where="(WHERE\\s+"+conditions+"){0,1}";
	String pattern="\\s*SELECT\\s+"+top+"(\\*|"+ownerenables+"\\s+"+from+")\\s*"+where+"\\s*"; //匹配最终sql的正则表达式
	               
	if (script.toUpperCase().matches(pattern)) {
		return true;
	} 
		
	return false;
}


	/**
	 * 判断日期格式和范围
	 */
	public static boolean isValidDate(String str) {
		String rexp = "^((\\d{2}(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d{2}(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))";
		Pattern pat = Pattern.compile(rexp);  
		Matcher mat = pat.matcher(str);  
		return mat.matches();
	}